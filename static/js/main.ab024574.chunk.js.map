{"version":3,"sources":["ui/common/Common.module.css","ui/authorization/Header/Header.module.css","ui/common/Title.tsx","ui/common/Input.tsx","ui/common/Button.tsx","ui/common/LInk.tsx","ui/authorization/SetNewPass-page/SetNewPass.tsx","dal/api.ts","ui/authorization/SetNewPass-page/SetNewPassContainer.tsx","ui/common/Constants.ts","ui/authorization/SignIn-page/SignIn.tsx","ui/authorization/SignIn-page/SignInContainer.tsx","ui/authorization/Forgot-page/Forgot.tsx","ui/authorization/Forgot-page/ForgotContainer.tsx","ui/authorization/Register-page/Register.tsx","ui/authorization/Register-page/RegisterContainer.tsx","ui/authorization/Header/Header.tsx","ui/authorization/Header/HeaderContainer.tsx","ui/authorization/Profile-page/Profile.tsx","ui/cards/Cards.tsx","bll/reducers/forgot-reducer.ts","bll/reducers/profile-reducer.ts","bll/reducers/register-reducer.ts","bll/reducers/setNewPass-reducer.ts","bll/reducers/signIn-reducer.ts","bll/store.ts","App.tsx","serviceWorker.ts","index.tsx","ui/authorization/Auth.module.css"],"names":["module","exports","Title","props","title","Input","className","styles","forInput","onFocus","onBlur","value","onChange","placeholder","type","Button","forButton","typeOfButton","onClick","actionOfButton","disabled","nameOfButton","Link","forLinks","to","way","wordOfLink","SetNewPass","useState","newPass","setNewPass","repeatNewPass","setRepeatNewPass","toCleanField","toCleanErrorField","wrapperOfAuth","error","loading","e","currentTarget","setValueOfSetNewPassForm","instance","axios","create","baseURL","authApi","email","password","rememberMe","post","then","response","data","html1","html2","res","console","log","authToken","catch","fal","resetPasswordToken","SetNewPassContainer","dispatch","useDispatch","state","useSelector","token","useParams","repeatPassword","length","WAITING_FOR_RESPONSE","SET_ERROR_REGISTER_PAGE","SignIn","localStorage","getItem","useEffect","setEmail","setPassword","setRememberMe","checked","setSignInFormValues","SignInContainer","signIn","redirect","setItem","Forgot","toCleanError","setForgotPassword","ForgotContainer","forgot","emailApproved","result","Register","setRegisterFormValues","CancelErrorPosition","setRepeatPassword","RegisterContainer","register","err","Header","setLogin","wrapperOfHeader","removeItem","HeaderContainer","Profile","Cards","path","render","initialState","forgotReducer","action","profileReducer","registerReducer","setNewPassReducer","signInReducer","rootReducer","combineReducers","profile","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ab024574.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forLinks\":\"Common_forLinks__1l5g1\",\"forInput\":\"Common_forInput__3E9bg\",\"forButton\":\"Common_forButton__3VnRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfHeader\":\"Header_wrapperOfHeader__3r8LB\"};","import React from \"react\";\r\n\r\nconst Title = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n\r\ntype OwnPropsType = {\r\n    title: string\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    value?: string,\r\n    checked?: boolean,\r\n    placeholder?: string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void, ////add '?' for\r\n    type: 'text' | 'password' | 'radio' | 'checkbox' | 'email',\r\n    onBlur?: ()=>void,\r\n    onFocus?: (e: React.FocusEvent)=>void\r\n}\r\n\r\nconst Input = (props: OwnPropsType) => {\r\n\r\n    return (\r\n        <input className={styles.forInput}\r\n               onFocus={props.onFocus}\r\n               onBlur={props.onBlur}\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               placeholder={props.placeholder}\r\n               type={props.type}/>\r\n    )\r\n};\r\n\r\nexport default Input\r\n\r\n","import React from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\nconst Button = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <button\r\n            className={styles.forButton}\r\n            type={props.typeOfButton}\r\n            onClick={props.actionOfButton}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.nameOfButton}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n\r\ntype OwnPropsType = {\r\n    typeOfButton: \"button\" | \"submit\" | \"reset\" | undefined,\r\n    actionOfButton: ()=>void,\r\n    nameOfButton: string,\r\n    disabled?: boolean\r\n\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    way: string,\r\n    wordOfLink: string\r\n}\r\nconst Link = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <NavLink className={styles.forLinks} to={props.way}>{props.wordOfLink}</NavLink>\r\n    )\r\n}\r\n\r\nexport default Link\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from \"../Auth.module.css\";\r\n\r\ntype OwnPropsType = {\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string) => void\r\n    error: string\r\n    loading: boolean | null\r\n    disabled: boolean\r\n    toCleanErrorField: ()=>void\r\n}\r\n\r\nconst SetNewPass = (props: OwnPropsType) => {\r\n\r\n    const [newPass, setNewPass] = useState('');\r\n    const [repeatNewPass, setRepeatNewPass] = useState('');\r\n\r\n    const valueOfInputNewPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPass(e.currentTarget.value)\r\n    };\r\n    const valueOfInputRepeatPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatNewPass(e.currentTarget.value)\r\n    };\r\n    const sendToCheckPassword = () => {\r\n        props.setValueOfSetNewPassForm(newPass, repeatNewPass)\r\n        setNewPass('');\r\n        setRepeatNewPass('');\r\n    };\r\n    const toCleanField = () =>{\r\n        props.toCleanErrorField()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='Set New Password'/>\r\n            {props.error?<div>{props.error}</div>:null}\r\n            {props.loading?<div>Loading...</div>:null}\r\n            <div><Input placeholder={'new pass'}\r\n                        type={'password'}\r\n                        value={newPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputNewPass}/></div>\r\n            <div><Input placeholder={'repeat pass'}\r\n                        type={'password'}\r\n                        value={repeatNewPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputRepeatPass}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         disabled={props.disabled}\r\n                         actionOfButton={sendToCheckPassword\r\n                         } nameOfButton='Set new password'/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SetNewPass\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n   // withCredentials: true,\r\n    baseURL:\"https://neko-cafe-back.herokuapp.com/\",\r\n})\r\n\r\nexport const authApi = {\r\n\r\n    login(email: string, password: string, rememberMe: boolean){\r\n        return instance.post(\"auth/login\", {email, password, rememberMe})\r\n            .then(response=>{return response.data})\r\n    },\r\n\r\n    forgotPass(email: string, html1: string, html2: string){\r\n        return instance.post('auth/forgot', {email, html1, html2})\r\n            .then(res=>{return console.log(res)})\r\n            //.catch(fal=>console.log(fal))\r\n    },\r\n\r\n    register(email: string, password: string){\r\n        return instance.post('auth/register', {email, password})\r\n            .then(res =>res)\r\n    },\r\n\r\n    authMe(authToken: string|null){\r\n        return instance.post('auth/me', {authToken: authToken})\r\n            .then(res=>res)\r\n            .catch((fal)=>{return fal})\r\n    },\r\n\r\n    setNewPass(resetPasswordToken: string | undefined, password: string){\r\n        return instance.post('auth/set-new-password', {resetPasswordToken, password})\r\n            .then(res=>res)\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport SetNewPass from \"./SetNewPass\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {useParams} from \"react-router\";\r\n\r\n\r\nconst SetNewPassContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.setNewPass);\r\n\r\n    const {token} = useParams();\r\n\r\n    const setValueOfSetNewPassForm = (password: string, repeatPassword: string) => {\r\n\r\n        if (password === repeatPassword && password.length > 7) {\r\n            dispatch({type: 'SET-LOADING-VALUE', loading: true, disabled: true});\r\n            authApi.setNewPass(token, password)\r\n                .then(res => {\r\n                    dispatch({type: 'SET-NEW-TOKEN', token: token});\r\n                    dispatch({type: 'SET-LOADING-VALUE', loading: false, disabled: false})\r\n                })\r\n\r\n                .catch(fal => {\r\n                        console.log(fal.response);\r\n                        dispatch({type: 'SHOW-ERROR', error: fal.response.data.error})\r\n                        dispatch({type: 'SET-LOADING-VALUE', loading: false, disabled: false})\r\n                    }\r\n                )\r\n        } else {\r\n            dispatch({\r\n                type: 'SHOW-ERROR',\r\n                error: 'Incorrect Password! Password should have min 8 values and each one fields should be same!'\r\n            })\r\n        }\r\n    };\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: 'TO-CLEAN-ERROR-FIELD', error: null})\r\n    };\r\n\r\n    return (\r\n        <SetNewPass\r\n            setValueOfSetNewPassForm={setValueOfSetNewPassForm}\r\n            error={state.error}\r\n            loading={state.loading}\r\n            disabled={state.disabled}\r\n            toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n}\r\n\r\nexport default SetNewPassContainer","//constants for paths\r\n\r\nexport const SIGN_IN = '/sign-in';\r\nexport const REGISTER = '/register';\r\nexport const FORGOT = '/forgot';\r\nexport const SET_NEW_PASS = '/set-new-pass/:token';\r\nexport const PROFILE = '/profile';\r\n\r\n//constants for reducers\r\n\r\nexport const REGISTER_SUCCESS = 'auth/register/REGISTER-SUCCESS';\r\nexport const WAITING_FOR_RESPONSE = 'auth/register/WAITING-FOR-RESPONSE';\r\nexport const SET_ERROR_REGISTER_PAGE = 'auth/register/SET-ERROR-REGISTER-PAGE';\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Link from \"../../common/LInk\";\r\nimport Button from \"../../common/Button\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {authApi} from \"../../../dal/api\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean) => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    toCleanErrorField: () => void\r\n}\r\n\r\n\r\nconst SignIn: React.FC<OwnPropsType> = (props) => {\r\n\r\n    let authToken = localStorage.getItem('auth-token')\r\n    useEffect(()=>{\r\n        authApi.authMe(authToken)\r\n    },[]);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    //пример UseSelector Достаем данные из store\r\n    //const valueOfInputEmail = useSelector((state: AppStoreType) => state.signIn.email);\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        return setEmail(e.currentTarget.value)\r\n    }\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        return setPassword(e.currentTarget.value)\r\n    }\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        return !rememberMe ? setRememberMe(true) : setRememberMe(false)\r\n    }\r\n\r\n    const sendSignInFormValues = () => {\r\n        return (\r\n            props.setSignInFormValues(email, password, rememberMe))\r\n    };\r\n    const toCleanErrorField = () => {\r\n        return props.toCleanErrorField()\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'sign-in'}/>\r\n            {props.loading ? <div>loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input type=\"text\"\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changeEmail}/></div>\r\n            <div><Input type=\"password\"\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changePassword}/></div>\r\n            <div><Link way={'/forgot'}\r\n                       wordOfLink={'Forgot password?'}/></div>\r\n            <div><Input type={\"checkbox\"}\r\n                        checked={rememberMe}\r\n                        onChange={changeRememberMe}/>Remember Me\r\n            </div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={sendSignInFormValues}\r\n                         disabled={props.disabled}\r\n                         nameOfButton='Sign In'/></div>\r\n            <div><Link way={'/register'} wordOfLink='Registration'/></div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SignIn\r\n","import React, {useEffect} from \"react\";\r\nimport SignIn from \"./SignIn\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nconst SignInContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector((state: AppStoreType) => state.signIn)\r\n    //const disable = useSelector((state: AppStoreType) => state.signIn.disabled)\r\n\r\n\r\n    const setSignInFormValues = (email: string, password: string, rememberMe: boolean) => {\r\n        dispatch({type: 'SET-LOADING-DATA', loading: true, disabled: true})\r\n        authApi.login(email, password, rememberMe)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({type: 'SET-LOADING-DATA', loading: false, disabled: false});\r\n                dispatch({\r\n                    type: 'SET-SIGN-IN-FORM-VALUES',\r\n                    email: res.email,\r\n                    password: password,\r\n                    rememberMe: res.rememberMe,\r\n                    token: res.token,\r\n                    redirect: true\r\n                })\r\n                localStorage.setItem('auth-token', res.token)\r\n                let authToken = localStorage.getItem('auth-token')\r\n                dispatch({type: 'IS-TOKEN-HAS', authToken})\r\n\r\n            })\r\n            .catch(fal => {\r\n                    console.log(fal.response);\r\n                    const error = fal.response.data.error;\r\n                    dispatch({type: 'SET-LOADING-DATA', loading: false, disabled: false, redirect: false})\r\n                    dispatch({type: 'SET-ERROR-SIGN-IN-PAGE', error})\r\n                }\r\n            );\r\n    };\r\n\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: 'SET-ERROR-SIGN-IN-PAGE', error: null})\r\n    }\r\n    return (\r\n\r\n        state.redirect ? <Redirect to='/profile'/> :\r\n            <SignIn setSignInFormValues={setSignInFormValues}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}\r\n                    toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n};\r\n\r\nexport default SignInContainer\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Input from \"../../common/Input\";\r\nimport styles from '../Auth.module.css'\r\n\r\ntype OwnPropsType = {\r\n    setForgotPassword: (email: string) => void\r\n    toCleanError: () => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n}\r\nconst Forgot = (props: OwnPropsType) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const valueOfInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    };\r\n    const restoreForgotPassword = () => {\r\n        props.setForgotPassword(email)\r\n        setEmail('')\r\n    };\r\n    const toCleanError = () => {\r\n        return props.toCleanError()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='forgot'/>\r\n            {props.loading ? <div>Loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input placeholder='email address'\r\n                        type={\"text\"}\r\n                        value={email}\r\n                        onBlur={toCleanError}\r\n                        onFocus={toCleanError}\r\n                        onChange={valueOfInputEmail}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={restoreForgotPassword}\r\n                         nameOfButton='Send email'\r\n                         disabled={props.disabled}/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Forgot","import React from \"react\";\r\nimport Forgot from \"./Forgot\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nconst ForgotContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.forgot);\r\n\r\n    const html1 = \"<a href=http://localhost:3000/template-typescript#/set-new-pass/\";\r\n    const html2 = \">reset-password-link</a>\";\r\n\r\n\r\n    const setForgotPassword = (email: string) => {\r\n        dispatch({type: 'SET-LOADING-DATA-FORGOT-PAGE', loading: true, disabled: true});\r\n        authApi.forgotPass(email,\r\n            html1, html2)\r\n            .then(result => {\r\n                console.log(result)\r\n                dispatch({type: 'SET-LOADING-DATA-FORGOT-PAGE', loading: false, disabled: false, emailApproved: true});\r\n\r\n            })\r\n            .catch(fal => {\r\n                console.log(fal.response.data.error);\r\n                const error = fal.response.data.error;\r\n                dispatch({type: 'SET-VALUE-ERROR-FORGOT-PAGE', error: error})\r\n                dispatch({type: 'SET-LOADING-DATA-FORGOT-PAGE', loading: false, disabled: false})\r\n            });\r\n\r\n        return (\r\n            dispatch({type: 'RESTORE-FORGOT-PASSWORD', email})\r\n        )\r\n    };\r\n    const toCleanError = () => {\r\n        dispatch({type: 'SET-VALUE-ERROR-FORGOT-PAGE', error: null})\r\n    };\r\n    return (\r\n        !state.emailApproved ?\r\n            <Forgot setForgotPassword={setForgotPassword}\r\n                    toCleanError={toCleanError}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}/> :\r\n            <Redirect to='/set-new-pass/:token'/>\r\n    )\r\n};\r\n\r\nexport default ForgotContainer","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {SIGN_IN} from \"../../common/Constants\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\ntype OwnPropsType = {\r\n    setRegisterFormValues: (email: string, password: string, repeatPassword: string) => void,\r\n    loading: boolean,\r\n    error:boolean,\r\n    CancelErrorPosition:()=>void\r\n}\r\nconst Register: React.FC<OwnPropsType> = ({setRegisterFormValues, loading, error, CancelErrorPosition}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const changeRepeatPassword = (e: ChangeEvent<HTMLInputElement>) => setRepeatPassword(e.currentTarget.value)\r\n\r\n    const toCleanErrorField = () => {\r\n        return CancelErrorPosition()\r\n    }\r\n\r\n    const sendSignInFormValues = () => setRegisterFormValues(email, password, repeatPassword)\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'Register'}/>\r\n            {loading && <div>wait</div>}\r\n            {error && <label >{error}</label>}\r\n                <div><Input placeholder={'email'}\r\n                            type={\"email\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeEmail}/>\r\n                </div>\r\n                <div><Input placeholder={'password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changePassword}/>\r\n                </div>\r\n                <div><Input placeholder={'repeat password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeRepeatPassword}/>\r\n                </div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={sendSignInFormValues} nameOfButton={'Register'}/>\r\n            <Link way={SIGN_IN} wordOfLink='Sign In'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PROFILE, REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../common/Constants\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport Register from \"./Register\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nconst RegisterContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.register)\r\n\r\n    const setRegisterFormValues = (email: any, password: string, repeatPassword: string) => {\r\n        if (password !== repeatPassword) {\r\n            let error = 'fields password and repeat password should be the same'\r\n            dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n        } else {\r\n            let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n            if (password.length <= 7 && email !== correctEmail) {\r\n                let error = 'your email of password is not valid'\r\n                dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n            } else {\r\n                dispatch({type: WAITING_FOR_RESPONSE, loading: true})\r\n                return authApi.register(email, password)\r\n                    .then(res => {\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect:true})\r\n                    })\r\n                    .catch(err => {\r\n                        let error = 'your email is invalid or is already registered'\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n                    })\r\n            }\r\n        }\r\n    };\r\n    const CancelErrorPosition = () => dispatch({type: SET_ERROR_REGISTER_PAGE, error: null})\r\n    return (\r\n        <>\r\n            {state.redirect && <Redirect to={PROFILE}/>}\r\n            <Register setRegisterFormValues={setRegisterFormValues}\r\n                      loading={state.loading}\r\n                      error={state.error}\r\n                      CancelErrorPosition={CancelErrorPosition}/>\r\n        </>\r\n    )\r\n};\r\nexport default RegisterContainer\r\n","import React, {useState} from \"react\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from './Header.module.css'\r\nimport {FORGOT, PROFILE, REGISTER, SET_NEW_PASS, SIGN_IN} from \"../../common/Constants\";\r\nimport Button from \"../../common/Button\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const [login, setLogin] = useState(true);\r\n    let tokenIsClear = () => {\r\n        debugger\r\n        localStorage.removeItem('auth-token');\r\n        setLogin(false)\r\n    };\r\n    const newToken = () =>{\r\n        setLogin(true)\r\n    }\r\n    return (\r\n        <div className={styles.wrapperOfHeader}>\r\n            <Link way={SIGN_IN} wordOfLink={'sign-in'}/>\r\n            <Link way={REGISTER} wordOfLink={'register'}/>\r\n            <Link way={FORGOT} wordOfLink={'forgot'}/>\r\n            <Link way={SET_NEW_PASS} wordOfLink={'set-new-pass'}/>\r\n            <Link way={PROFILE} wordOfLink={'profile'}/>\r\n            <Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>\r\n           {/*{ login? <Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>:*/}\r\n           {/* <Button typeOfButton={'button'} actionOfButton={newToken} nameOfButton={'login'}/>}*/}\r\n        </div>\r\n    )\r\n}\r\nexport default Header\r\n","import React, {useEffect} from \"react\";\r\nimport Header from \"./Header\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\n\r\nconst HeaderContainer = () =>{\r\n\r\n\r\n    let authToken = localStorage.getItem('auth-token')\r\n\r\n   useEffect(()=>{\r\n\r\n        authApi.authMe(authToken)\r\n    },[]);\r\n\r\n    return(\r\n        <Header />\r\n    )\r\n};\r\n\r\nexport default HeaderContainer\r\n","import React, {useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {Redirect} from \"react-router\";\r\nimport {SIGN_IN} from \"../../common/Constants\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    let authToken = localStorage.getItem('auth-token');\r\n    console.log(authToken);\r\n    useEffect(()=>{\r\n        authApi.authMe(authToken)\r\n    },[]);\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!authToken? <Redirect to={SIGN_IN}/>:<div></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from \"react\";\r\nimport {Route} from \"react-router\";\r\nimport SetNewPassContainer from \"../authorization/SetNewPass-page/SetNewPassContainer\";\r\nimport styles from \"../authorization/Auth.module.css\";\r\nimport Header from \"../authorization/Header/Header\";\r\nimport {FORGOT, PROFILE, REGISTER, SET_NEW_PASS, SIGN_IN} from \"../common/Constants\";\r\nimport SignInContainer from \"../authorization/SignIn-page/SignInContainer\";\r\nimport ForgotContainer from \"../authorization/Forgot-page/ForgotContainer\";\r\nimport RegisterContainer from \"../authorization/Register-page/RegisterContainer\";\r\nimport HeaderContainer from \"../authorization/Header/HeaderContainer\";\r\nimport Profile from \"../authorization/Profile-page/Profile\";\r\n\r\n\r\nconst Cards = () => {\r\n\r\n    return (\r\n        <>\r\n        <HeaderContainer/>\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Route path={SIGN_IN} render={() => <SignInContainer/>}/>\r\n            <Route path={REGISTER} render={() => <RegisterContainer/>}/>\r\n            <Route path={FORGOT} render={() => <ForgotContainer/>}/>\r\n            <Route path={SET_NEW_PASS} render={() => <SetNewPassContainer />}/>\r\n            <Route path={PROFILE} render={() => <Profile />}/>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n\r\n","import React from \"react\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    emailApproved: false\r\n}\r\n\r\nconst forgotReducer = (state = initialState, action: any) =>{\r\n   switch (action.type) {\r\n       case 'RESTORE-FORGOT-PASSWORD': {\r\n         return {\r\n             ...state, email: action.email\r\n         }\r\n       }\r\n       case 'SET-LOADING-DATA-FORGOT-PAGE': {\r\n           return {\r\n               ...state,\r\n               loading: action.loading,\r\n               disabled: action.disabled,\r\n               emailApproved: action.emailApproved\r\n           }\r\n       }\r\n       case 'SET-VALUE-ERROR-FORGOT-PAGE': {\r\n           return {\r\n               ...state,\r\n               error: action.error\r\n           }\r\n       }\r\n           default: return state\r\n   }\r\n\r\n}\r\n\r\nexport default forgotReducer","import React from \"react\";\r\n\r\nconst initialState = {}\r\n\r\nconst profileReducer = (state = initialState) =>{\r\nreturn state\r\n}\r\n\r\nexport default profileReducer","import {REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../ui/common/Constants\";\r\nimport {\r\n    registerInitialState,\r\n    registerSuccessActionType, setErrorRegisterPageActionType,\r\n    waitingForResponseActionType\r\n} from \"../../ui/authorization/authTypes/registerTypes\";\r\n\r\n\r\nconst initialState:registerInitialState = {\r\n    email: '',\r\n    password: '',\r\n    loading:false,\r\n    error:false,\r\n    redirect:false\r\n}\r\n\r\nconst registerReducer = (state: registerInitialState = initialState, action: registerActionType):registerInitialState => {\r\n    switch (action.type) {\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                redirect:true\r\n            }\r\n        }\r\n        case WAITING_FOR_RESPONSE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case SET_ERROR_REGISTER_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n    }\r\n    return state\r\n}\r\ntype registerActionType = registerSuccessActionType | waitingForResponseActionType | setErrorRegisterPageActionType\r\n\r\nexport default registerReducer\r\n","import React from \"react\";\r\n\r\nconst initialState: initialStateType = {\r\n    error: '',\r\n    token: '',\r\n    loading: null,\r\n    disabled: false\r\n}\r\n\r\ntype initialStateType = {\r\n    error: string | null,\r\n    token: string | undefined\r\n    loading: boolean | null\r\n    disabled: boolean\r\n}\r\n\r\nconst setNewPassReducer = (state = initialState, action: any ) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SHOW-ERROR': {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case 'SET-NEW-TOKEN': {\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case 'SET-LOADING-VALUE': {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case 'TO-CLEAN-ERROR-FIELD': {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n\r\n};\r\n\r\nexport default setNewPassReducer","import React from \"react\";\r\n\r\nconst initialState: signInitialStateType = {\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false,\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    token: '',\r\n    redirect: false,\r\n    authToken: ''\r\n}\r\n\r\nexport type signInitialStateType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean,\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    token: string\r\n    redirect: false,\r\n    authToken?:string\r\n}\r\n\r\nconst signInReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET-SIGN-IN-FORM-VALUES': {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                rememberMe: action.rememberMe,\r\n                token: action.token,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case 'SET-LOADING-DATA': {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                disabled: action.disabled,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case 'SET-ERROR-SIGN-IN-PAGE': {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n\r\n            }\r\n        }\r\n        case 'IS-TOKEN-HAS': {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                authToken: action.authToken\r\n            }\r\n        }\r\n            default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default signInReducer\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport forgotReducer from \"./reducers/forgot-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport registerReducer from \"./reducers/register-reducer\";\r\nimport setNewPassReducer from \"./reducers/setNewPass-reducer\";\r\nimport signInReducer from \"./reducers/signIn-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    register: registerReducer,\r\n    setNewPass: setNewPassReducer,\r\n    signIn: signInReducer,\r\n    profile: profileReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Cards from \"./ui/cards/Cards\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Cards/>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfAuth\":\"Auth_wrapperOfAuth__3XmyS\"};"],"sourceRoot":""}