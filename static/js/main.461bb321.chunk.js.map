{"version":3,"sources":["ui/authorization/Auth.module.css","ui/authorization/Profile-page/Profile.module.css","ui/play/GameField.module.css","ui/common/Common.module.css","ui/settings/decks/DecksTable.module.css","ui/settings/Search/Search.module.css","ui/settings/cards/CardsTable.module.css","ui/authorization/Header/Header.module.css","ui/common/Title.tsx","ui/common/Input.tsx","ui/common/Button.tsx","ui/common/LInk.tsx","ui/authorization/SetNewPass-page/SetNewPass.tsx","ui/common/Constants.ts","dal/api.ts","bll/reducers/setNewPass-reducer.ts","ui/authorization/SetNewPass-page/SetNewPassContainer.tsx","ui/authorization/SignIn-page/SignIn.tsx","bll/reducers/signIn-reducer.ts","ui/authorization/SignIn-page/SignInContainer.tsx","ui/authorization/Forgot-page/Forgot.tsx","bll/reducers/forgot-reducer.ts","ui/authorization/Forgot-page/ForgotContainer.tsx","ui/authorization/Register-page/Register.tsx","ui/authorization/Register-page/RegisterContainer.tsx","ui/authorization/Header/Header.tsx","ui/authorization/Header/HeaderContainer.tsx","bll/reducers/decksTable-reducer.ts","bll/reducers/searchReducer.ts","ui/settings/Search/Strip.tsx","ui/settings/Search/Search.tsx","ui/settings/Search/SearchContainer.tsx","ui/settings/decks/DecksTable.tsx","bll/reducers/cardsTable-reducer.ts","ui/settings/decks/DecksTableContainer.tsx","ui/settings/cards/CardsTable.tsx","ui/settings/cards/CardsTableContainer.tsx","ui/play/GameField.tsx","ui/play/GameFieldContainer.tsx","ui/common/uploadFile/uploadFile.tsx","ui/authorization/Profile-page/Profile.tsx","bll/reducers/profile-reducer.ts","ui/authorization/Profile-page/ProfileContainer.tsx","ui/cards/Cards.tsx","bll/reducers/register-reducer.ts","bll/store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Title","props","title","Input","className","styles","forInput","onFocus","onBlur","value","onChange","placeholder","type","Button","forButton","typeOfButton","onClick","actionOfButton","disabled","nameOfButton","Link","forLinks","to","way","wordOfLink","SetNewPass","useState","newPass","setNewPass","repeatNewPass","setRepeatNewPass","token","useParams","toCleanField","toCleanErrorField","wrapperOfAuth","error","loading","e","currentTarget","setValueOfSetNewPassForm","WAITING_FOR_RESPONSE","SET_ERROR_REGISTER_PAGE","instance","axios","create","baseURL","changeToken","newToken","localStorage","removeItem","setItem","authApi","email","password","rememberMe","post","then","response","id","data","_id","html1","html2","res","console","log","authToken","catch","fal","resetPasswordToken","decksApi","cardsPack","getItem","delete","name","minValue","maxValue","get","deck","put","updatedCardsPack","cardsApi","card","updatedCard","filesApi","responseType","blob","Blob","file","myFile","initialState","setNewPassReducer","state","action","connect","repeatPassword","dispatch","getStore","a","length","useDispatch","useSelector","SignIn","setEmail","setPassword","setRememberMe","checked","setSignInFormValues","redirect","signInReducer","signIn","Forgot","toCleanError","setForgotPassword","emailApproved","forgotReducer","forgot","Register","setRegisterFormValues","cancelErrorPosition","setRepeatPassword","RegisterContainer","register","err","Header","wrapperOfHeader","login","tokenIsClear","HeaderContainer","auth","profile","decks","grade","path","rating","shots","decksTableReducer","newCardsPack","filter","cardPacks","map","updateCardsDeck","getDecks","getState","search","searchingReducer","setSearchName","setSearchingNameSuccess","Strip","style","display","justifyContent","flexWrap","margin","values","this","step","min","max","handleStrip","renderTrack","children","onMouseDown","onTouchStart","height","width","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","alignItems","boxShadow","toFixed","React","Search","setName","setValue","s","settings","input","strip","button","DecksTable","setRating","update","setUpdate","changeName","setChangeName","updatedDeck","setUpdatedDeck","Table","addNewDeck","cells","key","onUpdateDeck","deleteADeck","getCards","updateCard","fieldOfUpdate","UpdatedDeckSuccess","updateDeck","theCards","cardsPack_id","question","answer","cardsTableReducer","newCard","cards","updateCards","userId","user_id","useEffect","CardsTable","setQuestion","setAnswer","setGrade","changeQuestion","setChangeQuestion","changeAnswer","setChangeAnswer","setUpdatedCard","addNewCard","onUpdateCard","deleteACard","updatedCardSuccess","result","deletedCard","GameField","setChecked","gameFieldWrapper","cardQuestion","textQuestion","cardAnswerOn","cardAnswerOff","textAnswer","nextCard","cardOfNumber","setCardOfNumber","minGrade","reduce","acc","el","undefined","c","newGrade","Math","floor","random","UploadFile","inRef","useRef","code","text","setText","setFile","setFileURL","fileData","setFileData","file64","setFile64","base64","src","alt","lastModified","size","accept","newFile","target","files","reader","FileReader","formData","FormData","window","URL","createObjectURL","append","onloadend","readAsDataURL","readAsText","current","click","Profile","toCards","setToCards","toPlay","setToPlay","profileWrapper","profilePart","paginationButtons","appPart","decksWrapper","deckCover","decksName","profileReducer","approveAuth","approve","Cards","render","registerReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.461bb321.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfAuth\":\"Auth_wrapperOfAuth__3XmyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__3BVfL\",\"profilePart\":\"Profile_profilePart__83rjY\",\"appPart\":\"Profile_appPart__Vgrkl\",\"deckCover\":\"Profile_deckCover__1YuVd\",\"decksName\":\"Profile_decksName__1z24c\",\"decksWrapper\":\"Profile_decksWrapper__3mjA5\",\"paginationButtons\":\"Profile_paginationButtons__1RxpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardQuestion\":\"GameField_cardQuestion__1N3ex\",\"textQuestion\":\"GameField_textQuestion__2QdZd\",\"textAnswer\":\"GameField_textAnswer__3OGu-\",\"cardAnswerOn\":\"GameField_cardAnswerOn__32jJV\",\"gameFieldWrapper\":\"GameField_gameFieldWrapper__2IgWR\",\"cardAnswerOff\":\"GameField_cardAnswerOff__1Vzc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forLinks\":\"Common_forLinks__1l5g1\",\"forInput\":\"Common_forInput__3E9bg\",\"forButton\":\"Common_forButton__3VnRI\",\"modalDeleteCard\":\"Common_modalDeleteCard__1va3c\",\"filedOfApproveDelete\":\"Common_filedOfApproveDelete__12GEs\",\"updateCard\":\"Common_updateCard__1m0Wu\",\"fieldOfUpdate\":\"Common_fieldOfUpdate__331VH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckBorder\":\"DecksTable_DeckBorder__n3nip\",\"Table\":\"DecksTable_Table__2kI9u\",\"cells\":\"DecksTable_cells__1E7On\",\"updateCard\":\"DecksTable_updateCard__1yuSK\",\"fieldOfUpdate\":\"DecksTable_fieldOfUpdate__1A4nG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Search_settings__2FJo-\",\"button\":\"Search_button__k6Vd9\",\"input\":\"Search_input__2E0SQ\",\"strip\":\"Search_strip__3Gbiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckBorder\":\"CardsTable_DeckBorder__1BYyA\",\"Table\":\"CardsTable_Table__14Ccy\",\"cells\":\"CardsTable_cells__3dB0k\",\"updateCard\":\"CardsTable_updateCard__18pZt\",\"fieldOfUpdate\":\"CardsTable_fieldOfUpdate__2HBzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfHeader\":\"Header_wrapperOfHeader__3r8LB\"};","import React from \"react\";\r\n\r\ntype OwnPropsType = {\r\n    title: string\r\n}\r\n\r\nconst Title: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n    return(\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Title\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    value?: string,\r\n    checked?: boolean,\r\n    placeholder?: string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void, ////add '?' for\r\n    type: 'text' | 'password' | 'radio' | 'checkbox' | 'email' | 'file',\r\n    onBlur?: ()=>void,\r\n    onFocus?: (e: React.FocusEvent)=>void\r\n\r\n\r\n}\r\n\r\nconst Input: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    return (\r\n        <input className={styles.forInput}\r\n               onFocus={props.onFocus}\r\n               onBlur={props.onBlur}\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               placeholder={props.placeholder}\r\n               type={props.type}\r\n               />\r\n\r\n    )\r\n};\r\n\r\nexport default Input\r\n\r\n","import React from \"react\";\r\nimport styles from './Common.module.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype OwnPropsType = {\r\n    typeOfButton: \"button\" | \"submit\" | \"reset\" | undefined,\r\n    actionOfButton: ()=>void,\r\n    nameOfButton: string,\r\n    disabled?: boolean\r\n\r\n}\r\n\r\nconst Button: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <button\r\n            className={styles.forButton}\r\n            type={props.typeOfButton}\r\n            onClick={props.actionOfButton}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.nameOfButton}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    way: string,\r\n    wordOfLink: string\r\n}\r\nconst Link: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <NavLink className={styles.forLinks} to={props.way}>{props.wordOfLink}</NavLink>\r\n    )\r\n};\r\n\r\nexport default Link\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {useParams} from \"react-router\";\r\n\r\ntype OwnPropsType = {\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined) => void\r\n    error: string\r\n    loading: boolean | null\r\n    disabled: boolean\r\n    toCleanErrorField: ()=>void\r\n}\r\n\r\nconst SetNewPass: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [newPass, setNewPass] = useState('');\r\n    const [repeatNewPass, setRepeatNewPass] = useState('');\r\n    const {token} = useParams();\r\n\r\n    const valueOfInputNewPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPass(e.currentTarget.value)\r\n    };\r\n    const valueOfInputRepeatPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatNewPass(e.currentTarget.value)\r\n    };\r\n    const sendToCheckPassword = () => {\r\n        props.setValueOfSetNewPassForm(newPass, repeatNewPass, token);\r\n        setNewPass('');\r\n        setRepeatNewPass('');\r\n    };\r\n    const toCleanField = () =>{\r\n        props.toCleanErrorField()\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='Set New Password'/>\r\n            {props.error?<div>{props.error}</div>:null}\r\n            {props.loading?<div>Loading...</div>:null}\r\n            <div><Input placeholder={'new pass'}\r\n                        type={'password'}\r\n                        value={newPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputNewPass}/></div>\r\n            <div><Input placeholder={'repeat pass'}\r\n                        type={'password'}\r\n                        value={repeatNewPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputRepeatPass}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         disabled={props.disabled}\r\n                         actionOfButton={sendToCheckPassword\r\n                         } nameOfButton='Set new password'/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SetNewPass\r\n","//constants for paths\r\n\r\nexport const SIGN_IN = '/sign-in';\r\nexport const REGISTER = '/register';\r\nexport const FORGOT = '/forgot';\r\nexport const SET_NEW_PASS = '/set-new-pass/:token';\r\nexport const PROFILE = '/profile';\r\n\r\nexport const CARDS_TABLE = '/cards-table';\r\nexport const DECKS_TABLE = '/decks-table';\r\nexport const PLAY = '/play';\r\nexport const UPLOAD_FILE = '/upload-file';\r\n\r\n//constants for reducers\r\n\r\nexport const REGISTER_SUCCESS = 'auth/register/REGISTER-SUCCESS';\r\nexport const WAITING_FOR_RESPONSE = 'auth/register/WAITING-FOR-RESPONSE';\r\nexport const SET_ERROR_REGISTER_PAGE = 'auth/register/SET-ERROR-REGISTER-PAGE';\r\n\r\n\r\n//constants for SignIn-page\r\nexport const SET_LOADING_DATA = 'SET-LOADING-DATA';\r\nexport const SET_SIGN_IN_FORM_VALUES = 'SET-SIGN-IN-FORM-VALUES';\r\nexport const IS_TOKEN_HAS = 'IS-TOKEN-HAS';\r\nexport const SET_ERROR_SIGN_IN_PAGE = 'SET-ERROR-SIGN-IN-PAGE';\r\nexport const REDIRECT_OFF = 'REDIRECT-OFF';\r\n\r\n//constants for Forgot-page\r\nexport const SET_LOADING_DATA_FORGOT_PAGE = 'SET-LOADING-DATA-FORGOT-PAGE';\r\nexport const SET_VALUE_ERROR_FORGOT_PAGE = 'SET-VALUE-ERROR-FORGOT-PAGE';\r\nexport const RESTORE_FORGOT_PASSWORD = 'RESTORE-FORGOT-PASSWORD';\r\n\r\n//constants for SetNewPass-page\r\nexport const SET_LOADING_VALUE = 'SET-LOADING-VALUE';\r\nexport const SET_NEW_TOKEN = 'SET-NEW-TOKEN';\r\nexport const SHOW_ERROR = 'SHOW-ERROR';\r\nexport const TO_CLEAN_ERROR_FIELD = 'TO-CLEAN-ERROR-FIELD';\r\n\r\n//constants for DecksTable\r\n\r\nexport const ADD_NEW_DECK = 'ADD-NEW-DECK';\r\nexport const DELETE_DECK = 'DELETE-DECK';\r\nexport const GET_DECKS = 'GET-DECKS';\r\nexport const UPDATE_DECK = 'UPDATE-DECK';\r\n\r\n//constants for CardsTable\r\n\r\nexport const ADD_NEW_CARD = 'ADD-NEW-CARD';\r\nexport const DELETE_CARD = 'DELETE-CARD';\r\nexport const GET_CARDS = 'GET-CARDS';\r\nexport const UPDATE_CARD = 'UPDATE-CARD';\r\n\r\n//constants for ProfilePage\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN-SUCCESS';\r\n\r\n//constants for UploadFile\r\n\r\n\r\n\r\n","import axios from 'axios'\r\nimport {CardsPackType, newCardPackType} from \"../ui/settings/decks/decksType\";\r\nimport {addCardType, CardsType} from \"../ui/settings/cards/cardsType\";\r\n\r\nconst instance = axios.create({\r\n    // withCredentials: true,\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n    //baseURL: \"https://dry-forest-56016.herokuapp.com/\",\r\n});\r\n\r\nexport const changeToken = (newToken: string) => {\r\n    localStorage.removeItem('auth-token');\r\n    localStorage.setItem('auth-token', newToken);\r\n};\r\n\r\nexport const changUserId = (id: string) =>{\r\n    localStorage.removeItem('cardsPack_id');\r\n    localStorage.setItem('cardsPack_id', id);\r\n};\r\n\r\nexport const authApi = {\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(\"auth/login\", {email, password, rememberMe})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                changUserId(response.data._id);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    forgotPass(email: string, html1: string, html2: string) {\r\n        return instance.post('auth/forgot', {email, html1, html2})\r\n            .then(res => {\r\n                return console.log(res)\r\n            })\r\n\r\n    },\r\n\r\n    register(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password})\r\n            .then(res => res)\r\n    },\r\n\r\n    authMe(authToken: string | null) {\r\n        //debugger\r\n        return instance.post('auth/me', {token: authToken})\r\n            .then(response => {\r\n                console.log(response.data);\r\n                changeToken(response.data.token);\r\n            })\r\n            .catch((fal) => {\r\n                return fal\r\n            })\r\n    },\r\n\r\n    setNewPass(resetPasswordToken: string | undefined, password: string) {\r\n        return instance.post('auth/set-new-password', {resetPasswordToken, password})\r\n            .then(res => res)\r\n    }\r\n};\r\n\r\nexport const decksApi = {\r\n\r\n    addDeck(cardsPack: newCardPackType, token: string | null) {\r\n        return instance.post('cards/pack', {cardsPack, token})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n    deleteDeck(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.delete(`cards/pack?token=${token}&id=${id}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                changeToken(response.data.token);\r\n                return response\r\n            })\r\n\r\n    },\r\n    getDeck(token: string | null, name: string, minValue: number, maxValue: number) {\r\n        return instance.get(`cards/pack?token=${token}` +\r\n            (minValue && maxValue && `&min=${minValue}&max=${maxValue}` +\r\n                name && `&packName=${name}&page=${1}&pageCount=6`))\r\n            .then(response => {\r\n                console.log(response.data);\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n   /* getMyDeck(token: string | null, name: string, minValue: number, maxValue: number) {\r\n        const user_id = localStorage.getItem('cardsPack_id');\r\n        return instance.get(`cards/pack?token=${token}` +\r\n            (minValue && maxValue && `&min=${minValue}&max=${maxValue}` +\r\n                name && `&packName=${name}` + `&pageCount=6` + `user_id=${user_id}`))\r\n            .then(response => {\r\n                console.log(response.data);\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },*/\r\n    updateDeck(deck: CardsPackType) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.put('cards/pack', {cardsPack: deck, token})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data.updatedCardsPack\r\n            })\r\n    }\r\n\r\n};\r\n\r\nexport const cardsApi = {\r\n\r\n    addCard(card: addCardType) {\r\n        return instance.post('cards/card', card)\r\n            .then(response => {\r\n              /*  localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);*/\r\n              changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n\r\n    },\r\n\r\n    deleteCard(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.delete(`cards/card?token=${token}&id=${id}`)\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    getCards(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        console.log(id);\r\n        return instance.get(`cards/card?cardsPack_id=${id}&token=${token}`)\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n\r\n                localStorage.removeItem('cardsPack_id');\r\n                localStorage.setItem('cardsPack_id', id);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    updateCard(card: CardsType) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.put('cards/card', {card, token})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data.updatedCard\r\n            })\r\n    }\r\n\r\n};\r\n\r\nexport const filesApi = {\r\n\r\n    getFile() {\r\n        return instance.get('/file', {responseType: 'blob'})\r\n            .then(({data}) => {\r\n\r\n                const blob = new Blob([data], {type: 'image/jpeg'});\r\n                console.log(blob);\r\n\r\n                return data\r\n            })\r\n    },\r\n\r\n    postFile(file: string) {\r\n        return instance.post('/file', {myFile: file})\r\n            .then(response=> {\r\n                return response.data\r\n            })\r\n    }\r\n};\r\n\r\n","\r\nimport {SET_LOADING_VALUE, SET_NEW_TOKEN, SHOW_ERROR, TO_CLEAN_ERROR_FIELD} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: initialStateType = {\r\n    error: '',\r\n    token: '',\r\n    loading: null,\r\n    disabled: false\r\n};\r\n\r\ntype initialStateType = {\r\n    error: string | null,\r\n    token: string | undefined\r\n    loading: boolean | null\r\n    disabled: boolean\r\n}\r\n\r\nconst setNewPassReducer = (state = initialState, action: any ) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case SHOW_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case SET_NEW_TOKEN: {\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case SET_LOADING_VALUE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case TO_CLEAN_ERROR_FIELD: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n\r\n};\r\n\r\n\r\n//thunks\r\n\r\nexport const setValueOfSetNewPassForm = (password: string, repeatPassword: string, token: string | undefined) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n        if (password === repeatPassword && password.length > 7) {\r\n            dispatch({type: SET_LOADING_VALUE, loading: true, disabled: true});\r\n              await authApi.setNewPass(token, password);\r\n                try  {\r\n                    dispatch({type: SET_NEW_TOKEN, token: token});\r\n                    dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                }\r\n                catch(e) {\r\n                        console.log(e.response);\r\n                        dispatch({type: SHOW_ERROR, error: e.response.data.error});\r\n                        dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                    }\r\n        } else {\r\n            dispatch({\r\n                type: SHOW_ERROR,\r\n                error: 'Incorrect Password! Password should have min 8 values and each one fields should be same!'\r\n            })\r\n        }\r\n    };\r\n\r\n\r\nexport default setNewPassReducer","import React from \"react\";\r\nimport SetNewPass from \"./SetNewPass\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {TO_CLEAN_ERROR_FIELD} from \"../../common/Constants\";\r\nimport {setValueOfSetNewPassForm} from \"../../../bll/reducers/setNewPass-reducer\";\r\n\r\n\r\ntype OwnPropsType={\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined)=>void\r\n}\r\nconst SetNewPassContainer: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.setNewPass);\r\n\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: TO_CLEAN_ERROR_FIELD, error: null})\r\n    };\r\n\r\n\r\n    return (\r\n        <SetNewPass\r\n            setValueOfSetNewPassForm={props.setValueOfSetNewPassForm}\r\n            error={state.error}\r\n            loading={state.loading}\r\n            disabled={state.disabled}\r\n            toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setValueOfSetNewPassForm})(SetNewPassContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Link from \"../../common/LInk\";\r\nimport Button from \"../../common/Button\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean) => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    toCleanErrorField: () => void\r\n}\r\n\r\n\r\nconst SignIn: React.FC<OwnPropsType> = (props) => {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    //пример UseSelector Достаем данные из store\r\n    //const valueOfInputEmail = useSelector((state: AppStoreType) => state.signIn.email);\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setEmail(e.currentTarget.value)\r\n    };\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setPassword(e.currentTarget.value)\r\n    };\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n       !rememberMe ? setRememberMe(true) : setRememberMe(false)\r\n    };\r\n\r\n    const sendSignInFormValues = () => {\r\n            props.setSignInFormValues(email, password, rememberMe)\r\n    };\r\n    const toCleanErrorField = () => {\r\n      props.toCleanErrorField()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'sign-in'}/>\r\n            {props.loading ? <div>loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input type=\"text\"\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changeEmail}/></div>\r\n            <div><Input type=\"password\"\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changePassword}/></div>\r\n            <div><Link way={'/forgot'}\r\n                       wordOfLink={'Forgot password?'}/></div>\r\n            <div><Input type={\"checkbox\"}\r\n                        checked={rememberMe}\r\n                        onChange={changeRememberMe}/>Remember Me\r\n            </div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={sendSignInFormValues}\r\n                         disabled={props.disabled}\r\n                         nameOfButton='Sign In'/></div>\r\n            <div><Link way={'/register'} wordOfLink='Registration'/></div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default SignIn\r\n","\r\nimport {\r\n    IS_TOKEN_HAS, REDIRECT_OFF,\r\n    SET_ERROR_SIGN_IN_PAGE,\r\n    SET_LOADING_DATA,\r\n    SET_SIGN_IN_FORM_VALUES\r\n} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: signInitialStateType = {\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false,\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    token: '',\r\n    redirect: false,\r\n    authToken: ''\r\n};\r\n\r\nexport type signInitialStateType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean,\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    token: string\r\n    redirect: false,\r\n    authToken?:string\r\n}\r\n\r\nconst signInReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case SET_SIGN_IN_FORM_VALUES: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                rememberMe: action.rememberMe,\r\n                token: action.token,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_LOADING_DATA: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                disabled: action.disabled,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_ERROR_SIGN_IN_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n\r\n            }\r\n        }\r\n        case IS_TOKEN_HAS: {\r\n            return {\r\n                ...state,\r\n                authToken: action.authToken\r\n            }\r\n        }\r\n        case REDIRECT_OFF:{\r\n            return {\r\n                ...state,\r\n                redirect: false\r\n            }\r\n        }\r\n            default: return state\r\n    }\r\n\r\n};\r\n\r\n//thunks\r\n\r\nexport const setSignInFormValues = (email: string, password: string, rememberMe: boolean) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n    dispatch({type: SET_LOADING_DATA, loading: true, disabled: true});\r\n    await authApi.login(email, password, rememberMe)\r\n        .then(res => {\r\n            dispatch({type: SET_LOADING_DATA, loading: false, disabled: false});\r\n            dispatch({\r\n                type: SET_SIGN_IN_FORM_VALUES,\r\n                email: res.email,\r\n                password: password,\r\n                rememberMe: res.rememberMe,\r\n                token: res.token,\r\n                redirect: true\r\n            });\r\n            localStorage.setItem('auth-token', res.token);\r\n            localStorage.setItem('user-id', res._id);\r\n\r\n            const authToken = localStorage.getItem('auth-token');\r\n            dispatch({type: IS_TOKEN_HAS, authToken})\r\n            //console.log(authToken)\r\n\r\n        })\r\n        .catch(fal => {\r\n                console.log(fal.response);\r\n                const error = fal.response.data.error;\r\n                dispatch({type: SET_LOADING_DATA, loading: false, disabled: false, redirect: false});\r\n                dispatch({type: SET_ERROR_SIGN_IN_PAGE, error})\r\n            }\r\n        );\r\n};\r\n\r\nexport default signInReducer\r\n","import React from \"react\";\r\nimport SignIn from \"./SignIn\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {SET_ERROR_SIGN_IN_PAGE} from \"../../common/Constants\";\r\nimport {setSignInFormValues} from \"../../../bll/reducers/signIn-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean)=>void\r\n}\r\nconst SignInContainer: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector((state: AppStoreType) => state.signIn);\r\n    //const disable = useSelector((state: AppStoreType) => state.signIn.disabled)\r\n\r\n\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: SET_ERROR_SIGN_IN_PAGE, error: null})\r\n    };\r\n    return (\r\n\r\n        state.redirect ? <Redirect to='/profile'/> :\r\n            <SignIn setSignInFormValues={props.setSignInFormValues}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}\r\n                    toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setSignInFormValues})(SignInContainer)\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Input from \"../../common/Input\";\r\nimport styles from '../Auth.module.css'\r\n\r\ntype OwnPropsType = {\r\n    setForgotPassword: (email: string) => void\r\n    toCleanError: () => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n}\r\nconst Forgot: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const valueOfInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    };\r\n    const restoreForgotPassword =  () => {\r\n         props.setForgotPassword(email);\r\n        setEmail('')\r\n    };\r\n    const toCleanError = () => {\r\n         props.toCleanError()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='forgot'/>\r\n            {props.loading ? <div>Loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input placeholder='email address'\r\n                        type={\"text\"}\r\n                        value={email}\r\n                        onBlur={toCleanError}\r\n                        onFocus={toCleanError}\r\n                        onChange={valueOfInputEmail}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={restoreForgotPassword}\r\n                         nameOfButton='Send email'\r\n                         disabled={props.disabled}/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Forgot","import {\r\n    RESTORE_FORGOT_PASSWORD,\r\n    SET_LOADING_DATA_FORGOT_PAGE,\r\n    SET_VALUE_ERROR_FORGOT_PAGE\r\n} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {authApi} from \"../../dal/api\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    emailApproved: false\r\n};\r\n\r\nconst forgotReducer = (state = initialState, action: any) =>{\r\n   switch (action.type) {\r\n       case RESTORE_FORGOT_PASSWORD: {\r\n         return {\r\n             ...state, email: action.email\r\n         }\r\n       }\r\n       case SET_LOADING_DATA_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               loading: action.loading,\r\n               disabled: action.disabled,\r\n               emailApproved: action.emailApproved\r\n           }\r\n       }\r\n       case SET_VALUE_ERROR_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               error: action.error\r\n           }\r\n       }\r\n           default: return state\r\n   }\r\n\r\n};\r\n\r\nconst html1 = \"<a href=http://localhost:3000/template-typescript#/set-new-pass/\";\r\nconst html2 = \">reset-password-link</a>\";\r\n\r\n//thunks\r\nexport const setForgotPassword = (email: string) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n        dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: true, disabled: true});\r\n        try {\r\n            const data = await authApi.forgotPass(email, html1, html2);\r\n            console.log(data);\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false, emailApproved: true});\r\n            dispatch({type: RESTORE_FORGOT_PASSWORD, email})\r\n        } catch (e) {\r\n            console.log(e.response.data.error);\r\n            const error = e.response.data.error;\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: error});\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false})\r\n        }\r\n\r\n    };\r\n\r\nexport const toCleanError = () =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n        try {\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: null})\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\nexport default forgotReducer","import React from \"react\";\r\nimport Forgot from \"./Forgot\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {setForgotPassword, toCleanError} from \"../../../bll/reducers/forgot-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    setForgotPassword: (email: string)=>void\r\n    toCleanError: ()=>void\r\n}\r\n\r\nconst ForgotContainer: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const state = useSelector((state: AppStoreType) => state.forgot);\r\n\r\n    return (\r\n        !state.emailApproved ?\r\n            <Forgot setForgotPassword={props.setForgotPassword}\r\n                    toCleanError={props.toCleanError}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}/> :\r\n            <Redirect to='/set-new-pass/:token'/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setForgotPassword, toCleanError})(ForgotContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {SIGN_IN} from \"../../common/Constants\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\ntype OwnPropsType = {\r\n    setRegisterFormValues: (email: string, password: string, repeatPassword: string) => void,\r\n    loading: boolean,\r\n    error:boolean,\r\n    cancelErrorPosition:()=>void\r\n}\r\nconst Register: React.FC<OwnPropsType> = ({setRegisterFormValues, loading, error, cancelErrorPosition}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    console.log(setRegisterFormValues)\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const changeRepeatPassword = (e: ChangeEvent<HTMLInputElement>) => setRepeatPassword(e.currentTarget.value)\r\n\r\n    const toCleanErrorField = () => {\r\n        return cancelErrorPosition()\r\n    }\r\n\r\n    const sendSignInFormValues = () => setRegisterFormValues(email, password, repeatPassword)\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'Register'}/>\r\n            {loading && <div>wait</div>}\r\n            {error && <label >{error}</label>}\r\n                <div><Input placeholder={'email'}\r\n                            type={\"email\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeEmail}/>\r\n                </div>\r\n                <div><Input placeholder={'password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changePassword}/>\r\n                </div>\r\n                <div><Input placeholder={'repeat password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeRepeatPassword}/>\r\n                </div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={sendSignInFormValues} nameOfButton={'Register'}/>\r\n            <Link way={SIGN_IN} wordOfLink='Sign In'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PROFILE, REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../common/Constants\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport Register from \"./Register\";\r\nimport {Redirect} from \"react-router\";\r\nimport {authApi} from \"../../../dal/api\";\r\n\r\n\r\nconst RegisterContainer: React.FC = (props) => {\r\n    console.log(props)\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.register)\r\n\r\n    const setRegisterFormValues = (email: any, password: string, repeatPassword: string) => {\r\n        if (password !== repeatPassword) {\r\n            let error = 'fields password and repeat password should be the same'\r\n            dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n        } else {\r\n            let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n            if (password.length <= 7 && email !== correctEmail) {\r\n                let error = 'your email of password is not valid'\r\n                dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n            } else {\r\n                dispatch({type: WAITING_FOR_RESPONSE, loading: true})\r\n                return authApi.register(email, password)\r\n                    .then(res => {\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect:true})\r\n                    })\r\n                    .catch(err => {\r\n                        let error = 'your email is invalid or is already registered'\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n                    })\r\n            }\r\n        }\r\n    };\r\n    const cancelErrorPosition = () => dispatch({type: SET_ERROR_REGISTER_PAGE, error: null})\r\n    return (\r\n        <>\r\n            {state.redirect && <Redirect to={PROFILE}/>}\r\n            <Register setRegisterFormValues={setRegisterFormValues}\r\n                      loading={state.loading}\r\n                      error={state.error}\r\n                      cancelErrorPosition={cancelErrorPosition}/>\r\n        </>\r\n    )\r\n};\r\nexport default RegisterContainer\r\n","import React from \"react\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from './Header.module.css'\r\nimport {DECKS_TABLE, FORGOT, PROFILE, REGISTER, SET_NEW_PASS, SIGN_IN, UPLOAD_FILE} from \"../../common/Constants\";\r\nimport Button from \"../../common/Button\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    login: boolean,\r\n    tokenIsClear: ()=>void\r\n}\r\nconst Header: React.FC<OwnPropsType> = (props) => {\r\n\r\n  const tokenIsClear = () =>{\r\n      props.tokenIsClear();\r\n  };\r\n\r\n\r\n    return (\r\n        <div className={styles.wrapperOfHeader}>\r\n            <Link way={SIGN_IN} wordOfLink={'sign-in'}/>\r\n            <Link way={REGISTER} wordOfLink={'register'}/>\r\n            <Link way={FORGOT} wordOfLink={'forgot'}/>\r\n            <Link way={SET_NEW_PASS} wordOfLink={'set-new-pass'}/>\r\n            <Link way={PROFILE} wordOfLink={'profile'}/>\r\n            <Link way={UPLOAD_FILE} wordOfLink={'file'}/>\r\n            {/*<Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>*/}\r\n           { props.login? <Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>:null}\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default Header\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {LOGIN_SUCCESS, REDIRECT_OFF} from \"../../common/Constants\";\r\n\r\nconst HeaderContainer: React.FC = () =>{\r\n\r\n\r\n\r\n    const auth = useSelector((state:AppStoreType)=>state.profile.login);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    let tokenIsClear = () => {\r\n        localStorage.removeItem('auth-token');\r\n        localStorage.removeItem('user-id');\r\n        dispatch({type: LOGIN_SUCCESS, login: false});\r\n        dispatch({type: REDIRECT_OFF})\r\n\r\n    };\r\n    return(\r\n        <Header login={auth} tokenIsClear={tokenIsClear}/>\r\n    )\r\n};\r\n\r\nexport default HeaderContainer\r\n","import {ADD_NEW_DECK, DELETE_DECK, GET_DECKS, UPDATE_DECK} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {decksApi} from \"../../dal/api\";\r\nimport {CardsPackType} from \"../../ui/settings/decks/decksType\";\r\n\r\n\r\nconst initialState = {\r\n    decks: [\r\n        {\r\n            grade: 0,\r\n            name: \"7777\",\r\n            path: \"/def\",\r\n            rating: 0,\r\n            shots: 0,\r\n            type: \"pack\",\r\n            _id: \"5ebd1e6d5af2c800049590de\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst decksTableReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_DECK:\r\n            return {\r\n                ...state,\r\n                decks: [...state.decks, action.newCardsPack]\r\n            };\r\n\r\n        case DELETE_DECK:\r\n            return {\r\n                ...state, decks: state.decks.filter(deck => deck._id !== action._id)\r\n            };\r\n\r\n        case GET_DECKS: {\r\n            return {\r\n                ...state, decks: action.cardPacks\r\n            }\r\n        }\r\n\r\n        case UPDATE_DECK:\r\n            return {\r\n                ...state, decks: state.decks.map(deck => {\r\n                    return deck._id === action.updateCardsDeck._id ? action.updateCardsDeck : deck\r\n                })\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default decksTableReducer\r\n\r\n////////////////////////////////////////thunks\r\n\r\nexport const addNewDeck = (name: string, rating: number) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const token = localStorage.getItem('auth-token');\r\n        const userId = localStorage.getItem('user-id') as string;\r\n\r\n        const response = await decksApi.addDeck({name: name, user_id: userId, rating: rating}, token);\r\n\r\n        const newCardsPack = response.newCardsPack;\r\n        dispatch({type: ADD_NEW_DECK, newCardsPack});\r\n        console.log(response);\r\n        try {\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n\r\nexport const deleteADeck = (_id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        await decksApi.deleteDeck(_id);\r\n        dispatch({type: DELETE_DECK, _id});\r\n        try {\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n\r\nexport const getDecks = () =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: () => AppStoreType) => {\r\n\r\n        const token = localStorage.getItem('auth-token');\r\n        const {name} = getState().search;\r\n        const {minValue, maxValue} = getState().search;\r\n\r\n        const data = await decksApi.getDeck(token, name, minValue, maxValue);\r\n        localStorage.removeItem('auth-token');\r\n        localStorage.setItem('auth-token', data.token);\r\n\r\n        const cardPacks = data.cardPacks;\r\n        dispatch({type: GET_DECKS, cardPacks});\r\n        try {\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n\r\nexport const updateDeck = (deck: CardsPackType) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const updateCardsDeck = await decksApi.updateDeck(deck);\r\n        dispatch({type: UPDATE_DECK, updateCardsDeck});\r\n        try {\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n","import {getDecks} from \"./decksTable-reducer\";\r\n\r\n\r\nconst initialState: any = {\r\n    name: '',\r\n    minValue: 70,\r\n    maxValue: 130\r\n};\r\n\r\n\r\nconst searchingReducer = (state = initialState, action: any): any => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SET_SEARCHING_NAME': {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                minValue:action.minValue,\r\n                maxValue:action.maxValue\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\nexport default searchingReducer\r\n\r\n\r\n//action creators\r\n\r\nexport const setSearchingNameSuccess = (name: string, minValue: number, maxValue: number): any =>\r\n    ({type: 'SET_SEARCHING_NAME', name, minValue, maxValue})\r\n\r\n//thunks\r\n\r\nexport const setSearchName = (name: string, minValue: number, maxValue: number) => (dispatch: any) => {\r\n    debugger\r\n    dispatch(setSearchingNameSuccess(name, minValue, maxValue))\r\n    dispatch(getDecks())\r\n    // })\r\n}\r\n","import * as React from 'react';\r\nimport { Range, getTrackBackground } from \"react-range\";\r\n\r\nconst STEP = 1;\r\nconst MIN = 0;\r\nconst MAX = 200;\r\ntype OwnPropsType = {\r\n    handleStrip:(values:number[])=>void,\r\n    values: number[]\r\n}\r\n\r\nclass Strip extends React.Component<OwnPropsType> {\r\n    // state = {\r\n    //     [0, 50] values:\r\n    // };\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                    margin: \"0 2em\"\r\n                }}\r\n            >\r\n                <Range\r\n                    values={this.props.values}\r\n                    step={STEP}\r\n                    min={MIN}\r\n                    max={MAX}\r\n                    onChange={values => this.props.handleStrip( values )}\r\n                    renderTrack={({ props, children }) => (\r\n                        <span\r\n                            onMouseDown={props.onMouseDown}\r\n                            onTouchStart={props.onTouchStart}\r\n                            style={{\r\n                                ...props.style,\r\n                                height: \"36px\",\r\n                                display: \"flex\",\r\n                                width: \"100%\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                ref={props.ref}\r\n                                style={{\r\n                                    height: \"5px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: \"4px\",\r\n                                    background: getTrackBackground({\r\n                                        values: this.props.values,\r\n                                        colors: [\"#000\", \"#ccc\", \"#000\"],\r\n                                        min: MIN,\r\n                                        max: MAX\r\n                                    }),\r\n                                    alignSelf: \"center\"\r\n                                }}\r\n                            >\r\n                                {children}\r\n                            </div>\r\n                        </span>\r\n                    )}\r\n                    renderThumb={({ props, isDragged }) => (\r\n                        <div\r\n                            {...props}\r\n                            style={{\r\n                                ...props.style,\r\n                                height: \"20px\",\r\n                                width: \"20px\",\r\n                                borderRadius: \"4px\",\r\n                                backgroundColor: \"#FFF\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                boxShadow: \"0px 2px 6px #AAA\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    height: \"16px\",\r\n                                    width: \"5px\",\r\n                                    backgroundColor: isDragged ? \"#000\" : \"#CCC\"\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                />\r\n                <label style={{ margin: \"10px\", }} id=\"output\">\r\n                    {this.props.values[0].toFixed(1)}\r\n                </label>\r\n                <label style={{ margin: \"10px\" }} id=\"output\">\r\n                    {this.props.values[1].toFixed(1)}\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Strip\r\n","import React from \"react\";\r\nimport {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport Input from \"../../common/Input\";\r\nimport Strip from \"./Strip\";\r\nimport s from './Search.module.css'\r\nimport Button from \"../../common/Button\";\r\nimport {setSearchName} from \"./../../../bll/reducers/searchReducer\"\r\n\r\ntype OwnPropsType = {\r\n    setSearchName: (name: string, minValue: number, maxValue: number) => void,\r\n    minValue: number,\r\n    maxValue: number\r\n}\r\n\r\nconst Search: React.FC<OwnPropsType> = ({minValue, maxValue}) => {\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [values, setValue] = useState<number[]>([minValue, maxValue])\r\n    const handleStrip = (values: number[]) => {\r\n        setValue(values)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    // const search = (minValue:number, maxValue:number) => dispatch(setRangeValue(minValue, maxValue))\r\n    const search = () => dispatch(setSearchName(name, values[0], values[1]))\r\n    //(name:string, minValue:number, maxValue:number) => dispatch(setSearchName((name, minValue, maxValue))\r\n\r\n    return (\r\n        <div className={s.settings}>\r\n            <div className={s.input}><Input type='text' onChange={e => setName(e.currentTarget.value)}/></div>\r\n            <div className={s.strip}><Strip values={values} handleStrip={handleStrip}/></div>\r\n            <div className={s.button}><Button actionOfButton={search} nameOfButton='Search' typeOfButton=\"button\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search\r\n","import React from \"react\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {setSearchName} from \"./../../../bll/reducers/searchReducer\"\r\nimport Search from \"./Search\";\r\n\r\n// type MapDispatchPropsType = {\r\n//     setSearchName: (name: string, minValue: number, maxValue: number) => void,\r\n//     minValue: number,\r\n//     maxValue: number\r\n// }\r\n\r\nconst SearchContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const minValue = useSelector((state:any) => state.search.minValue)\r\n    const maxValue = useSelector((state:any) => state.search.maxValue)\r\n\r\n    return (\r\n        <Search setSearchName={setSearchName} minValue={minValue} maxValue={maxValue}/>\r\n    )\r\n}\r\n\r\nexport default connect(null, {setSearchName})(SearchContainer)\r\n","import React, {ChangeEvent, useState} from \"react\";\r\n\r\nimport style from './DecksTable.module.css';\r\nimport Button from \"../../common/Button\";\r\nimport Input from \"../../common/Input\";\r\nimport Title from \"../../common/Title\";\r\nimport SearchContainer from \"../Search/SearchContainer\";\r\nimport Link from \"../../common/LInk\";\r\nimport {CARDS_TABLE, PLAY} from \"../../common/Constants\";\r\nimport {CardsPackType} from \"./decksType\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    decks: CardsPackType[],\r\n    addNewDeck: (name: string, rating: number) => void,\r\n    deleteADeck: (_id: string) => void\r\n    getCards: (id:string )=>void\r\n    updateDeck: (deck: any)=>void\r\n}\r\nconst DecksTable: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [rating, setRating] = useState(0);\r\n    const [update, setUpdate] = useState(false);\r\n    const [changeName, setChangeName] = useState('');\r\n    const [updatedDeck, setUpdatedDeck] = useState({});\r\n\r\n    const nameOfNewDeck = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    };\r\n    const sendNewDeck = () => {\r\n        props.addNewDeck(name, rating)\r\n    };\r\n    const sendDeleteDeck = (_id: string ) => {\r\n        props.deleteADeck(_id)\r\n    };\r\n    const increment = () =>{\r\n        setRating(rating + 1.0)\r\n    };\r\n    const decrement = () =>{\r\n        setRating(rating -1.0)\r\n    };\r\n    const onUpdateDeck = (deck: any) =>{\r\n        setUpdate(true);\r\n        setChangeName(deck.name);\r\n        setUpdatedDeck(deck);\r\n    };\r\n    const onUpdateDeckName = (e: ChangeEvent<HTMLTextAreaElement>) =>{\r\n        setChangeName(e.currentTarget.value)\r\n    };\r\n    const offUpdateDeck = () =>{\r\n        setUpdate(false);\r\n        const UpdatedDeckSuccess = {...updatedDeck, name: changeName};\r\n        props.updateDeck(UpdatedDeckSuccess)\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <SearchContainer/>\r\n            <Title title='DECKS'/>\r\n            <table className={style.Table}>\r\n                <tbody>\r\n                <tr>\r\n                    <th><Input type={\"text\"} value={name} placeholder={'Deck\\'s name'} onChange={nameOfNewDeck}/></th>\r\n                    <th>Rating {' '} {rating} {' '}\r\n                        <Button actionOfButton={increment} nameOfButton='↑' typeOfButton=\"button\"/> {' '}\r\n                        <Button actionOfButton={decrement} nameOfButton='↓' typeOfButton=\"button\" />\r\n                    </th>\r\n                    <th>\r\n                        <Button actionOfButton={sendNewDeck} nameOfButton='add' typeOfButton=\"button\"/>\r\n                    </th>\r\n                </tr>\r\n                {props.decks.map(deck =>\r\n                    <tr className={style.cells} key={deck._id}>\r\n                        <td>{deck.name}</td>\r\n                        <td>{deck.rating}</td>\r\n                        <td><Button actionOfButton={() => onUpdateDeck(deck)} nameOfButton='Update' typeOfButton=\"button\"/>{' '}\r\n                            <Button actionOfButton={() => sendDeleteDeck(deck._id)} nameOfButton='Delete'\r\n                                    typeOfButton=\"button\"/>{' '}\r\n                            <span onClick={()=>props.getCards(deck._id)}><Link way={CARDS_TABLE} wordOfLink={'cards'}/></span>{' '}\r\n                            <span onClick={()=>props.getCards(deck._id)}><Link way={PLAY} wordOfLink={'play'}/></span>\r\n                        </td>\r\n                    </tr>)}\r\n                </tbody>\r\n            </table>\r\n\r\n            {update ?\r\n                <div className={style.updateCard}>\r\n                    <div className={style.fieldOfUpdate}>\r\n                        <h1>UPDATE YOUR DECK</h1>\r\n                        <textarea placeholder={'Name'} onChange={onUpdateDeckName} value={changeName}/>\r\n                        <button onClick={offUpdateDeck}>Save</button>\r\n                        <button onClick={()=>setUpdate(false)}>Cancel</button>\r\n                    </div>\r\n                </div> : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DecksTable\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {ADD_NEW_CARD, DELETE_CARD, GET_CARDS, UPDATE_CARD} from \"../../ui/common/Constants\";\r\nimport {cardsApi} from \"../../dal/api\";\r\nimport {CardsType} from \"../../ui/settings/cards/cardsType\";\r\n\r\nconst initialState = {\r\n    theCards: [\r\n        {\r\n            cardsPack_id: '5ebe22ad7b58e90004b4b1e0',\r\n            _id: '',\r\n            question: 'something 1',\r\n            answer: 'something else 1',\r\n            grade: 3,\r\n            shots: 1,\r\n            token: ''\r\n        },\r\n    ],\r\n};\r\n\r\ntype IState = typeof initialState\r\n\r\nconst cardsTableReducer = (state = initialState, action: any): IState => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_CARD:\r\n            return {\r\n                ...state,\r\n                theCards: [...state.theCards, action.newCard]\r\n            };\r\n\r\n        case GET_CARDS:\r\n            return {\r\n                ...state, theCards: action.cards\r\n            };\r\n\r\n        case UPDATE_CARD:\r\n            return {\r\n                ...state, theCards: state.theCards.map(card => {\r\n                    return card._id === action.updatedCard._id ? action.updatedCard : card\r\n                })\r\n            };\r\n\r\n        case DELETE_CARD:\r\n            return {\r\n                ...state, theCards: state.theCards.filter(card => card._id !== action._id)\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default cardsTableReducer\r\n\r\n/////////////////////////////////thunks\r\n\r\nexport const addNewCard = (question: string, answer: string, grade: number) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n        const token = localStorage.getItem('auth-token');\r\n        const cardsPack_id = localStorage.getItem('cardsPack_id');\r\n\r\n        const result = await cardsApi.addCard({\r\n            card: {cardsPack_id: cardsPack_id, question, answer, grade},\r\n            token: token\r\n        });\r\n        console.log(result);\r\n        const newCard = {...result.newCard, token: result.token};\r\n        dispatch({type: ADD_NEW_CARD, newCard});\r\n        try {\r\n            console.log(initialState.theCards);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    };\r\n\r\nexport const deleteACard = (id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const data = await cardsApi.deleteCard(id);\r\n        const cardsPack_id = data.deletedCard._id;\r\n        dispatch({type: DELETE_CARD, _id: cardsPack_id});\r\n        try {\r\n            console.log(initialState.theCards);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\nexport const getCards = (id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n        const data = await cardsApi.getCards(id);\r\n        const cards = data.cards;\r\n        const cardsPack_id = localStorage.getItem('cardsPack_id');\r\n        dispatch({type: GET_CARDS, cards, cardsPack_id});\r\n        try {\r\n            console.log(initialState.theCards);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\nexport const updateCards = (card: CardsType) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const updatedCard = await cardsApi.updateCard(card);\r\n        dispatch({type: UPDATE_CARD, updatedCard});\r\n        try {\r\n            console.log(initialState.theCards);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport DecksTable from \"./DecksTable\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {addNewDeck, deleteADeck, getDecks, updateDeck} from \"../../../bll/reducers/decksTable-reducer\";\r\nimport {getCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsPackType} from \"./decksType\";\r\n\r\ntype OwnPropsType = {\r\n    addNewDeck: (name: string , rating: number)=>void,\r\n    deleteADeck: (_id: string)=>void,\r\n    getDecks: ()=>void,\r\n    getCards: (id:string )=>void,\r\n    updateDeck: (deck: CardsPackType)=>void\r\n}\r\n\r\nconst DecksTableContainer: React.FC<OwnPropsType> = (props) =>{\r\n\r\n    const state = useSelector((state: AppStoreType) => state.decks.decks);\r\n\r\n\r\n    useEffect(() => {\r\n        props.getDecks();\r\n    }, []);\r\n\r\n    return(\r\n        <DecksTable decks={state}\r\n                    addNewDeck={props.addNewDeck}\r\n                    deleteADeck={props.deleteADeck}\r\n                    updateDeck={props.updateDeck}\r\n                    getCards={props.getCards}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {\r\n    addNewDeck, deleteADeck, getDecks, getCards, updateDeck})(DecksTableContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport style from \"./CardsTable.module.css\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport SearchContainer from \"../Search/SearchContainer\";\r\nimport {CardsType} from \"./cardsType\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    cards: CardsType[]\r\n    addNewCard: (question: string, answer: string, grade: number) => void,\r\n    deleteACard: (id: string) => void\r\n    updateCards: (card: CardsType) => void\r\n}\r\nconst CardsTable: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n    const [grade, setGrade] = useState(0);\r\n    const [update, setUpdate] = useState(false);\r\n    const [changeQuestion, setChangeQuestion] = useState('');\r\n    const [changeAnswer, setChangeAnswer] = useState('');\r\n    const [updatedCard, setUpdatedCard] = useState({});\r\n\r\n    const textOfQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    };\r\n    const textOfAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    };\r\n    const sendNewCard = () => {\r\n        props.addNewCard(question, answer, grade)\r\n    };\r\n    const sendDeleteCard = (id: string) => {\r\n        props.deleteACard(id)\r\n    };\r\n    const onUpdateCard = (card: CardsType) => {\r\n        setUpdate(true);\r\n        setChangeQuestion(card.question);\r\n        setChangeAnswer(card.answer);\r\n        setUpdatedCard(card)\r\n    };\r\n    const offUpdateCard = () => {\r\n        setUpdate(false);\r\n        const updatedCardSuccess = {...updatedCard, question: changeQuestion, answer: changeAnswer};\r\n        props.updateCards(updatedCardSuccess as CardsType)\r\n    };\r\n    const onUpdateCardQuestion = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setChangeQuestion(e.currentTarget.value)\r\n    };\r\n    const onUpdateCardAnswer = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setChangeAnswer(e.currentTarget.value)\r\n    };\r\n\r\n    const increment = () => {\r\n        setGrade(grade + 1)\r\n    };\r\n    const decrement = () => {\r\n        setGrade(grade - 1)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SearchContainer/>\r\n            <Title title='CARDS'/>\r\n            <table className={style.Table}>\r\n                <tbody>\r\n                <tr>\r\n                    <th><Input type={\"text\"} value={question} placeholder={'Question'} onChange={textOfQuestion}/></th>\r\n                    <th>Grade {' '} {grade} {' '}\r\n                        <Button actionOfButton={increment} nameOfButton='↑' typeOfButton=\"button\"/> {' '}\r\n                        <Button actionOfButton={decrement} nameOfButton='↓' typeOfButton=\"button\"/>\r\n                    </th>\r\n                    <th>\r\n                        <Input type={\"text\"} value={answer} placeholder={'Answer'} onChange={textOfAnswer}/>{' '}\r\n                        <Button actionOfButton={sendNewCard} nameOfButton='add' typeOfButton=\"button\"/>\r\n                    </th>\r\n                </tr>\r\n                {props.cards.map(card =>\r\n                    <tr className={style.cells} key={card._id}>\r\n                        <td>{card.question}{' '}</td>\r\n                        <td>{card.grade}</td>\r\n                        <td>{\">>>>>>......<<<<<<\"}{' '}\r\n                            <Button actionOfButton={() => onUpdateCard(card)} nameOfButton='Update'\r\n                                    typeOfButton=\"button\"/>\r\n                            <Button actionOfButton={\r\n                                () => sendDeleteCard(card._id)\r\n                            } nameOfButton='Delete'\r\n                                    typeOfButton=\"button\"/>\r\n\r\n                        </td>\r\n                    </tr>)}\r\n                </tbody>\r\n            </table>\r\n\r\n            {update ?\r\n                <div className={style.updateCard}>\r\n                    <div className={style.fieldOfUpdate}>\r\n                        <h1>UPDATE YOUR CARD</h1>\r\n                        <textarea placeholder={'Question'} onChange={onUpdateCardQuestion} value={changeQuestion}/>\r\n                        <textarea placeholder={'Answer'} onChange={onUpdateCardAnswer} value={changeAnswer}/>\r\n                        <button onClick={offUpdateCard}>Save</button>\r\n                        <button onClick={() => setUpdate(false)}>Cancel</button>\r\n                    </div>\r\n                </div> : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CardsTable\r\n","import React from \"react\";\r\nimport CardsTable from \"./CardsTable\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {addNewCard, deleteACard, updateCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsType} from \"./cardsType\";\r\n\r\ntype OwnPropsType = {\r\n    addNewCard: (question: string, answer: string, grade: number)=>void,\r\n    deleteACard: (id: string)=>void,\r\n    updateCards: (card: CardsType)=>void\r\n}\r\n\r\nconst CardsTableContainer: React.FC<OwnPropsType> = (props) => {\r\n\r\nconst state = useSelector((state:AppStoreType) => state.cards.theCards);\r\n\r\n\r\n    return (\r\n            <CardsTable addNewCard={props.addNewCard}\r\n                        deleteACard={props.deleteACard}\r\n                        updateCards={props.updateCards}\r\n                        cards={state}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {addNewCard, deleteACard, updateCards})(CardsTableContainer)\r\n\r\n","import React, {useState} from \"react\";\r\nimport Button from \"../common/Button\";\r\nimport style from './GameField.module.css'\r\nimport {CardsType} from \"../settings/cards/cardsType\";\r\n\r\ntype OwnPropsType = {\r\n    card: CardsType\r\n    nextCard: ()=>void\r\n    setGrade: (grade: number)=>void\r\n}\r\nconst GameField: React.FC<OwnPropsType> = (props) => {\r\n   const [checked, setChecked] = useState(false);\r\n   const [grade, setGrade] = useState(0);\r\n\r\n\r\n   const showAnswer = () =>{\r\n       setChecked(true)\r\n   };\r\nconst nextCard = () =>{\r\n    props.nextCard();\r\n    setChecked(false);\r\n    props.setGrade(grade)\r\n};\r\n\r\n    return (\r\n        <>\r\n\r\n                <div className={style.gameFieldWrapper} key={props.card._id}>\r\n                    <div className={style.cardQuestion}>\r\n                        <span className={style.textQuestion}>{props.card.question}</span>\r\n                    </div>\r\n                    <Button typeOfButton={\"button\"} actionOfButton={showAnswer} nameOfButton='check'/>\r\n                    <div className={checked? style.cardAnswerOn: style.cardAnswerOff} onClick={()=>setChecked(true)}>\r\n                        <span className={style.textAnswer}>{checked ? props.card.answer: null}</span>\r\n                    </div>\r\n\r\n                </div>\r\n            <div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(1)\r\n                }} nameOfButton={\"didn't know\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(2)\r\n                }} nameOfButton={\"forgot\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(3)\r\n                }} nameOfButton={\"spend a lot of time\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(4)\r\n                }} nameOfButton={\"mixed up\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(5)\r\n                }} nameOfButton={\"knew\"}/>{' '}\r\n            </div>\r\n            <div> <Button typeOfButton={\"button\"} actionOfButton={nextCard} nameOfButton={\"NEXT\"}/></div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GameField\r\n","import React, {useState} from \"react\";\r\nimport GameField from \"./GameField\";\r\nimport {AppStoreType} from \"../../bll/store\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {updateCards} from \"../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsType} from \"../settings/cards/cardsType\";\r\n\r\ntype OwnPropsType = {\r\n    updateCards: (card: CardsType) => void\r\n}\r\nconst GameFieldContainer: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [cardOfNumber, setCardOfNumber] = useState(0);\r\n    const cards = useSelector((state: AppStoreType) => state.cards.theCards);\r\n\r\n    const minGrade = cards.reduce((acc, el) => acc.grade < el.grade ? acc : el); ///получаем минимальный элемент grade\r\n    console.log(minGrade);\r\n    const nextCard = () => {\r\n        // setCardOfNumber(cardOfNumber + 1)\r\n    };\r\n\r\n    if (cards[cardOfNumber] === undefined) {\r\n        setCardOfNumber(0)\r\n    }\r\n\r\n    const card = cards[cardOfNumber];\r\n\r\n\r\n    const setGrade = (grade: number) => {\r\n        const newGrade = (card.shots * card.grade + grade) / (card.shots + 1);\r\n        const updatedCard = {...minGrade, shots: card.shots + 1, grade: newGrade};\r\n        Math.floor(Math.random() * 5);\r\n        props.updateCards(updatedCard)\r\n    };\r\n    console.log(cards.map(c => c.grade));\r\n\r\n    return (\r\n        <GameField card={minGrade}\r\n                   nextCard={nextCard}\r\n                   setGrade={setGrade}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {updateCards})(GameFieldContainer)\r\n","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport Input from \"../Input\";\r\nimport Button from \"../Button\";\r\nimport {filesApi} from \"../../../dal/api\";\r\n\r\n\r\n\r\nconst UploadFile = () => {\r\n\r\n    const inRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [code, setCode] = useState(true);\r\n    const [text, setText] = useState('');\r\n    const [file, setFile] = useState();\r\n    const [fileURL, setFileURL] = useState();\r\n    const [fileData, setFileData] = useState();\r\n    const [file64, setFile64] = useState();\r\n    const [base64, setBase64] = useState(true);\r\n\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const newFile = e.target.files && e.target.files[0];\r\n\r\n\r\n        const reader = new FileReader();\r\n        const formData = new FormData();\r\n\r\n\r\n        if(newFile){\r\n            setFile(newFile);\r\n            setFileURL(window.URL.createObjectURL(newFile));\r\n            formData.append('myFile', newFile, newFile.name);\r\n            setFileData(formData);\r\n\r\n            if (code) {\r\n                debugger\r\n                reader.onloadend = () => {\r\n                    setFile64(reader.result);\r\n\r\n                };\r\n\r\n                if (base64) {\r\n                    debugger\r\n                    reader.readAsDataURL(newFile);\r\n                }\r\n                else reader.readAsText(newFile)\r\n            }\r\n        }\r\n    };\r\n\r\n    const send = () =>{\r\n        filesApi.postFile(fileData)\r\n    };\r\n    return (\r\n        <div>\r\n           {/* <div>\r\n                reader\r\n                <Input type={\"checkbox\"}\r\n                       checked={code}\r\n                onChange={e => setCode(e.currentTarget.checked)}/>\r\n            </div>\r\n            <div>\r\n                base64\r\n                <Input type={\"checkbox\"}\r\n                       checked={base64}\r\n                       onChange={e=> setBase64(e.currentTarget.checked)}/>\r\n            </div>*/}\r\n            <img src={file64} alt={'file'} width={'300px'}/>\r\n            <div>name: {file && file.name}</div>\r\n            <div>last Modified: {file && file.lastModified}</div>\r\n            <div>size: {file && file.size}</div>\r\n            <div>type: {file && file.type}</div>\r\n            <input type={'file'}\r\n                   accept='.jpg, .jpeg, .png, .gif'\r\n                   ref={inRef}\r\n                   onChange={upload}\r\n                   style={{display: 'none'}}/>\r\n            <Button typeOfButton={\"button\"}\r\n                    actionOfButton={() => inRef && inRef.current && inRef.current.click()}\r\n                    nameOfButton='add'/>\r\n            <div>\r\n                <textarea value={text} onChange={e => setText(e.currentTarget.value)}/>\r\n            </div>\r\n\r\n            <Button typeOfButton={'button'}\r\n                    actionOfButton={() =>{} //writeFile('Text.txt', text + `\\r\\n` + file64)\r\n                    }\r\n                    nameOfButton='save'/>{' '}\r\n            <Button typeOfButton={'button'}\r\n                    actionOfButton={send} nameOfButton='send'/>{' '}\r\n            <Button typeOfButton={'button'}\r\n                    actionOfButton={() =>{filesApi.getFile()} //getFile(baseURL + 'file', 'newFile.jpg')\r\n                    }\r\n                    nameOfButton='get'/>\r\n\r\n            {/*<input type=\"file\" accept=\".jpg, .jpeg, .png\" multiple/>*/}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default UploadFile;","import React, {useState} from \"react\";\r\nimport style from './Profile.module.css';\r\nimport Button from \"../../common/Button\";\r\nimport {CardsPackType} from \"../../settings/decks/decksType\";\r\nimport {Redirect} from \"react-router\";\r\nimport {CARDS_TABLE, PLAY} from \"../../common/Constants\";\r\n\r\n\r\ntype OwnPropsType = {\r\n\r\n    decks: CardsPackType[]\r\n    approveAuth: (login: boolean)=>void\r\n    getCards: (id:string )=>void\r\n}\r\n\r\n\r\nconst Profile: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n\r\n\r\n   const [toCards, setToCards] = useState(false);\r\n   const [toPlay, setToPlay] = useState(false);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.profileWrapper}>\r\n            {/*<h1>Profile page</h1>*/}\r\n            <div className={style.profilePart}>\r\n                <img src={'https://static.tildacdn.com/tild6564-3565-4232-b434-653536636432/avatar_OCAS.jpg'}/>\r\n                <div><Button typeOfButton={'button'} actionOfButton={() => {\r\n                }} nameOfButton='UPLOAD AVATAR'/></div>\r\n                <div><Button typeOfButton={'button'} actionOfButton={() => {\r\n                }} nameOfButton='ALL DECKS'/></div>\r\n                <div><Button typeOfButton={'button'} actionOfButton={() => {\r\n                }} nameOfButton='MY DECKS'/></div>\r\n\r\n                <div className={style.paginationButtons}>\r\n                    <Button typeOfButton={'button'} actionOfButton={()=>{}} nameOfButton={'PREVIOUS'}/>{'  '}\r\n                    <Button typeOfButton={'button'} actionOfButton={()=>{}} nameOfButton={'NEXT'}/>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.appPart}>\r\n                <div className={style.decksWrapper}>\r\n                    {props.decks.map(deck =>\r\n                        <div className={style.deckCover}>\r\n                            <Button typeOfButton='button' actionOfButton={() => { props.getCards(deck._id);\r\n                                setToPlay(true)\r\n                            }} nameOfButton={'PLAY'}/>\r\n                            <div><Button typeOfButton='button' actionOfButton={() =>{ props.getCards(deck._id);\r\n                               setToCards(true)}\r\n                            } nameOfButton={'CARDS'}/>\r\n                            </div>\r\n                            <div className={style.decksName}><b>{deck.name}</b></div>\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n            {toCards? <Redirect to={CARDS_TABLE}/>:null}\r\n            {toPlay? <Redirect to={PLAY}/>:null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {LOGIN_SUCCESS} from \"../../ui/common/Constants\";\r\n\r\nconst initialState = {\r\n    login: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS: {\r\n            return {...state, login: action.login}\r\n        }\r\n\r\n    }\r\n\r\n    return state\r\n};\r\n\r\nexport default profileReducer\r\n\r\n//thunks\r\n\r\nexport const approveAuth = (login: boolean) =>\r\n\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n        let authToken = localStorage.getItem('auth-token');\r\n        await authApi.authMe(authToken);\r\n\r\n        dispatch({type: LOGIN_SUCCESS, login: login})\r\n    };\r\n","import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {approveAuth} from \"../../../bll/reducers/profile-reducer\";\r\nimport {getDecks} from \"../../../bll/reducers/decksTable-reducer\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {getCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\n\r\n\r\n\r\ntype OwnPropsType = {\r\n    approveAuth: (login: boolean)=>void\r\n    getDecks: ()=>void\r\n    getCards: (id:string )=>void\r\n}\r\n\r\nconst ProfileContainer: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n\r\n    useEffect(() => {\r\n        props.getDecks();\r\n        let authToken = localStorage.getItem('auth-token');\r\n        console.log(authToken);\r\n        const approve = !!authToken; //authToken?true:false;\r\n        props.approveAuth(approve);\r\n    }, []);\r\n\r\n\r\n\r\n    const decks = useSelector((state: AppStoreType) => state.decks.decks);\r\n\r\n\r\n\r\n\r\n    return <Profile decks={decks}\r\n                    approveAuth={props.approveAuth}\r\n                    getCards={props.getCards}/>\r\n};\r\n\r\nexport default connect(null, {approveAuth, getDecks, getCards}) (ProfileContainer)","import React from \"react\";\r\nimport {Route} from \"react-router\";\r\nimport SetNewPassContainer from \"../authorization/SetNewPass-page/SetNewPassContainer\";\r\nimport styles from \"../authorization/Auth.module.css\";\r\nimport {\r\n    CARDS_TABLE,\r\n    DECKS_TABLE,\r\n    FORGOT,\r\n    PLAY,\r\n    PROFILE,\r\n    REGISTER,\r\n    SET_NEW_PASS,\r\n    SIGN_IN,\r\n    UPLOAD_FILE\r\n} from \"../common/Constants\";\r\nimport SignInContainer from \"../authorization/SignIn-page/SignInContainer\";\r\nimport ForgotContainer from \"../authorization/Forgot-page/ForgotContainer\";\r\nimport RegisterContainer from \"../authorization/Register-page/RegisterContainer\";\r\nimport HeaderContainer from \"../authorization/Header/HeaderContainer\";\r\nimport Profile from \"../authorization/Profile-page/Profile\";\r\nimport DecksTableContainer from \"../settings/decks/DecksTableContainer\";\r\nimport CardsTableContainer from \"../settings/cards/CardsTableContainer\";\r\nimport GameFieldContainer from \"../play/GameFieldContainer\";\r\nimport UploadFile from \"../common/uploadFile/uploadFile\";\r\nimport ProfileContainer from \"../authorization/Profile-page/ProfileContainer\";\r\n\r\n\r\nconst Cards = () => {\r\n\r\n    return (\r\n        <>\r\n        <HeaderContainer/>\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Route path={SIGN_IN} render={() => <SignInContainer/>}/>\r\n            <Route path={REGISTER} render={() => <RegisterContainer/>}/>\r\n            <Route path={FORGOT} render={() => <ForgotContainer/>}/>\r\n            <Route path={SET_NEW_PASS} render={() => <SetNewPassContainer />}/>\r\n            <Route path={PROFILE} render={() => <ProfileContainer />}/>\r\n\r\n            <Route path={DECKS_TABLE} render={()=> <DecksTableContainer />}/>\r\n            <Route path={CARDS_TABLE} render={()=> <CardsTableContainer />} />\r\n            <Route path={PLAY} render={()=> <GameFieldContainer />}/>\r\n            <Route path={UPLOAD_FILE} render={()=> <UploadFile />} />\r\n        </div>\r\n            </>\r\n    )\r\n};\r\n\r\nexport default Cards\r\n\r\n","import {REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../ui/common/Constants\";\r\nimport {\r\n    registerInitialState,\r\n    registerSuccessActionType, setErrorRegisterPageActionType,\r\n    waitingForResponseActionType\r\n} from \"../../ui/authorization/authTypes/registerTypes\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\n\r\nconst initialState: registerInitialState = {\r\n    email: '',\r\n    password: '',\r\n    loading: false,\r\n    error: false,\r\n    redirect: false\r\n\r\n}\r\n\r\nconst registerReducer = (state: registerInitialState = initialState, action: registerActionType): registerInitialState => {\r\n    switch (action.type) {\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                redirect: true\r\n            }\r\n        }\r\n        case WAITING_FOR_RESPONSE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case SET_ERROR_REGISTER_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n    }\r\n    return state\r\n}\r\ntype registerActionType = registerSuccessActionType | waitingForResponseActionType | setErrorRegisterPageActionType\r\n\r\n// export const login = (email,password, rememberMe, captcha) => async (dispatch) => {\r\n//     let response = await authAPI.login(email,password, rememberMe, captcha)\r\n//     if(response.data.resultCode === 0){\r\n//         dispatch(getAuthUserData())\r\n//     } else {\r\n//         if(response.data.resultCode === 10){\r\n//             dispatch(getCaptchaUrl())\r\n//         }\r\n//         let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n//         dispatch(stopSubmit('login', {_error:message}))\r\n//     }\r\n// }\r\n//  export const setRegisterFormValues = (email: any, password: string, repeatPassword: string) => async (dispatch: any) => {\r\n//     debugger\r\n//     if (password !== repeatPassword) {\r\n//         let error = 'fields password and repeat password should be the same'\r\n//         dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n//     } else {\r\n//         let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n//         if (password.length <= 7 && email !== correctEmail) {\r\n//             let error = 'your email of password is not valid'\r\n//             dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n//         } else {\r\n//             dispatch({type: WAITING_FOR_RESPONSE, loading: true})\r\n//             await authApi.register(email, password)\r\n//                 try {\r\n//                     dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n//                     dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect: true})\r\n//                 }\r\n//                 catch(e){\r\n//                     let error = 'your email is invalid or is already registered'\r\n//                     dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n//                     dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n//                 }\r\n//         }\r\n//     }\r\n// };\r\nexport default registerReducer\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport forgotReducer from \"./reducers/forgot-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport registerReducer from \"./reducers/register-reducer\";\r\nimport setNewPassReducer from \"./reducers/setNewPass-reducer\";\r\nimport signInReducer from \"./reducers/signIn-reducer\";\r\nimport decksTableReducer from \"./reducers/decksTable-reducer\";\r\nimport cardsTableReducer from \"./reducers/cardsTable-reducer\";\r\nimport searchingReducer from \"./reducers/searchReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    register: registerReducer,\r\n    setNewPass: setNewPassReducer,\r\n    signIn: signInReducer,\r\n    profile: profileReducer,\r\n    decks: decksTableReducer,\r\n    cards: cardsTableReducer,\r\n    search:searchingReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Cards from \"./ui/cards/Cards\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Cards/>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}