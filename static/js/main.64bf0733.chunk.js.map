{"version":3,"sources":["ui/authorization/Auth.module.css","ui/play/GameField.module.css","ui/common/Common.module.css","ui/settings/decks/DecksTable.module.css","ui/settings/cards/CardsTable.module.css","ui/settings/Search/Search.module.css","ui/common/Title.module.css","ui/authorization/Header/Header.module.css","ui/authorization/Profile-page/Profile.module.css","ui/common/Title.tsx","ui/common/Input.tsx","ui/common/Button.tsx","ui/common/LInk.tsx","ui/authorization/SetNewPass-page/SetNewPass.tsx","ui/common/Constants.ts","dal/api.ts","bll/reducers/setNewPass-reducer.ts","ui/authorization/SetNewPass-page/SetNewPassContainer.tsx","ui/authorization/SignIn-page/SignIn.tsx","bll/reducers/signIn-reducer.ts","ui/authorization/SignIn-page/SignInContainer.tsx","ui/authorization/Forgot-page/Forgot.tsx","bll/reducers/forgot-reducer.ts","ui/authorization/Forgot-page/ForgotContainer.tsx","ui/authorization/Register-page/Register.tsx","ui/authorization/Register-page/RegisterContainer.tsx","ui/authorization/Header/Header.tsx","ui/authorization/Header/HeaderContainer.tsx","bll/reducers/decksTable-reducer.ts","bll/reducers/cardsTable-reducer.ts","bll/reducers/searchReducer.ts","ui/settings/Search/Search.tsx","ui/settings/Search/SearchContainer.tsx","ui/settings/decks/DecksTable.tsx","ui/settings/decks/DecksTableContainer.tsx","ui/settings/cards/CardsTable.tsx","ui/settings/cards/CardsTableContainer.tsx","ui/play/GameField.tsx","ui/play/GameFieldContainer.tsx","ui/common/uploadFile/uploadFile.tsx","ui/authorization/Profile-page/Profile.tsx","bll/reducers/profile-reducer.ts","ui/authorization/Profile-page/ProfileContainer.tsx","ui/cards/Cards.tsx","bll/reducers/register-reducer.ts","bll/store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Title","props","className","s","title","Input","styles","forInput","onFocus","onBlur","value","onChange","placeholder","type","Button","forButton","typeOfButton","onClick","actionOfButton","disabled","nameOfButton","Link","forLinks","to","way","wordOfLink","SetNewPass","useState","newPass","setNewPass","repeatNewPass","setRepeatNewPass","token","useParams","toCleanField","toCleanErrorField","wrapperOfAuth","error","loading","e","currentTarget","setValueOfSetNewPassForm","REGISTER_SUCCESS","WAITING_FOR_RESPONSE","SET_ERROR_REGISTER_PAGE","instance","axios","create","baseURL","fileInstance","changeToken","newToken","localStorage","removeItem","setItem","authApi","email","password","rememberMe","post","then","response","id","data","_id","html1","html2","res","console","log","authToken","getItem","catch","fal","resetPasswordToken","decksApi","cardsPack","delete","name","minValue","maxValue","page","pageCount","privateDecks","user_id","decksFilter","get","deck","put","updatedCardsPack","cardsApi","card","updatedCard","filesApi","responseType","blob","Blob","file","myFile","initialState","setNewPassReducer","state","action","connect","repeatPassword","dispatch","getStore","a","length","useDispatch","useSelector","SignIn","setEmail","setPassword","setRememberMe","checked","setSignInFormValues","redirect","signInReducer","signIn","Forgot","toCleanError","setForgotPassword","emailApproved","forgotReducer","forgot","Register","setRegisterFormValues","cancelErrorPosition","setRepeatPassword","RegisterContainer","register","err","Header","wrapperOfHeader","login","tokenIsClear","HeaderContainer","auth","profile","decks","grade","path","rating","shots","decksTableReducer","newCardsPack","filter","cardPacks","map","updateCardsDeck","addNewDeck","getState","userId","deleteADeck","getDecks","search","updateDeck","theCards","cardsPack_id","question","answer","cardsTableReducer","newCard","cards","getCards","updateCards","searchingReducer","Search","setName","values","settings","input","button","setSearchingNameSuccess","setSearchDeck","SearchContainer","DecksTable","setRating","update","setUpdate","changeName","setChangeName","updatedDeck","setUpdatedDeck","style","Table","cells","key","onUpdateDeck","updateCard","fieldOfUpdate","UpdatedDeckSuccess","useEffect","CardsTable","setQuestion","setAnswer","setGrade","changeQuestion","setChangeQuestion","changeAnswer","setChangeAnswer","setUpdatedCard","addNewCard","onUpdateCard","deleteACard","updatedCardSuccess","result","deletedCard","GameField","setChecked","gameFieldWrapper","cardQuestion","textQuestion","cardAnswerOn","cardAnswerOff","textAnswer","nextCard","cardOfNumber","setCardOfNumber","sum","elem","reduce","acc","el","devideCard","Number","x","Math","random","totalP","i","next","superResult","indexOf","undefined","floor","UploadFile","inRef","useRef","code","text","setText","setFile","setFileURL","fileData","setFileData","file64","setFile64","base64","src","alt","width","lastModified","size","accept","ref","newFile","target","files","reader","FileReader","formData","FormData","window","URL","createObjectURL","append","onloadend","readAsDataURL","readAsText","display","current","click","Profile","toCards","setToCards","toPlay","setToPlay","numberOfPage","setNumberOfPage","profileWrapper","profilePart","allDecks","myDecks","paginationButtons","nextPage","appPart","decksWrapper","addNewDeckField","inputAddDeck","deckCover","buttonsOfSettings","decksName","profileReducer","approveAuth","approve","Cards","render","registerReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.64bf0733.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfAuth\":\"Auth_wrapperOfAuth__3XmyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardQuestion\":\"GameField_cardQuestion__1N3ex\",\"textQuestion\":\"GameField_textQuestion__2QdZd\",\"textAnswer\":\"GameField_textAnswer__3OGu-\",\"cardAnswerOn\":\"GameField_cardAnswerOn__32jJV\",\"gameFieldWrapper\":\"GameField_gameFieldWrapper__2IgWR\",\"cardAnswerOff\":\"GameField_cardAnswerOff__1Vzc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forLinks\":\"Common_forLinks__1l5g1\",\"forInput\":\"Common_forInput__3E9bg\",\"forButton\":\"Common_forButton__3VnRI\",\"modalDeleteCard\":\"Common_modalDeleteCard__1va3c\",\"filedOfApproveDelete\":\"Common_filedOfApproveDelete__12GEs\",\"updateCard\":\"Common_updateCard__1m0Wu\",\"fieldOfUpdate\":\"Common_fieldOfUpdate__331VH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckBorder\":\"DecksTable_DeckBorder__n3nip\",\"Table\":\"DecksTable_Table__2kI9u\",\"cells\":\"DecksTable_cells__1E7On\",\"updateCard\":\"DecksTable_updateCard__1yuSK\",\"fieldOfUpdate\":\"DecksTable_fieldOfUpdate__1A4nG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckBorder\":\"CardsTable_DeckBorder__1BYyA\",\"Table\":\"CardsTable_Table__14Ccy\",\"cells\":\"CardsTable_cells__3dB0k\",\"updateCard\":\"CardsTable_updateCard__18pZt\",\"fieldOfUpdate\":\"CardsTable_fieldOfUpdate__2HBzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Search_settings__2FJo-\",\"input\":\"Search_input__2E0SQ\",\"strip\":\"Search_strip__3Gbiw\",\"button\":\"Search_button__k6Vd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2LgXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfHeader\":\"Header_wrapperOfHeader__3r8LB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__3BVfL\",\"profilePart\":\"Profile_profilePart__83rjY\",\"appPart\":\"Profile_appPart__Vgrkl\",\"deckCover\":\"Profile_deckCover__1YuVd\",\"decksName\":\"Profile_decksName__1z24c\",\"decksWrapper\":\"Profile_decksWrapper__3mjA5\",\"paginationButtons\":\"Profile_paginationButtons__1RxpA\",\"buttonsOfSettings\":\"Profile_buttonsOfSettings__AEmr4\",\"updateCard\":\"Profile_updateCard__1ln4n\",\"fieldOfUpdate\":\"Profile_fieldOfUpdate__3pPMt\",\"inputAddDeck\":\"Profile_inputAddDeck__11fHg\",\"addNewDeckField\":\"Profile_addNewDeckField__3j5UG\"};","import React from \"react\";\r\nimport s from './Title.module.css'\r\n\r\ntype OwnPropsType = {\r\n    title: string\r\n}\r\n\r\nconst Title: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n    return(\r\n        <div>\r\n            <h2 className={s.title}>{props.title}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Title\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    value?: string,\r\n    checked?: boolean,\r\n    placeholder?: string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void, ////add '?' for\r\n    type: 'text' | 'password' | 'radio' | 'checkbox' | 'email' | 'file',\r\n    onBlur?: ()=>void,\r\n    onFocus?: (e: React.FocusEvent)=>void\r\n\r\n\r\n}\r\n\r\nconst Input: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    return (\r\n        <input className={styles.forInput}\r\n               onFocus={props.onFocus}\r\n               onBlur={props.onBlur}\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               placeholder={props.placeholder}\r\n               type={props.type}\r\n               />\r\n\r\n    )\r\n};\r\n\r\nexport default Input\r\n\r\n","import React from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    typeOfButton: \"button\" | \"submit\" | \"reset\" | undefined,\r\n    actionOfButton: ()=>void,\r\n    nameOfButton: string,\r\n    disabled?: boolean\r\n\r\n}\r\n\r\nconst Button: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <button\r\n            className={styles.forButton}\r\n            type={props.typeOfButton}\r\n            onClick={props.actionOfButton}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.nameOfButton}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    way: string,\r\n    wordOfLink: string\r\n}\r\nconst Link: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <NavLink className={styles.forLinks} to={props.way}>{props.wordOfLink}</NavLink>\r\n    )\r\n};\r\n\r\nexport default Link\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {useParams} from \"react-router\";\r\n\r\ntype OwnPropsType = {\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined) => void\r\n    error: string\r\n    loading: boolean | null\r\n    disabled: boolean\r\n    toCleanErrorField: ()=>void\r\n}\r\n\r\nconst SetNewPass: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [newPass, setNewPass] = useState('');\r\n    const [repeatNewPass, setRepeatNewPass] = useState('');\r\n    const {token} = useParams();\r\n\r\n    const valueOfInputNewPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPass(e.currentTarget.value)\r\n    };\r\n    const valueOfInputRepeatPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatNewPass(e.currentTarget.value)\r\n    };\r\n    const sendToCheckPassword = () => {\r\n        props.setValueOfSetNewPassForm(newPass, repeatNewPass, token);\r\n        setNewPass('');\r\n        setRepeatNewPass('');\r\n    };\r\n    const toCleanField = () =>{\r\n        props.toCleanErrorField()\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='Set New Password'/>\r\n            {props.error?<div>{props.error}</div>:null}\r\n            {props.loading?<div>Loading...</div>:null}\r\n            <div><Input placeholder={'new pass'}\r\n                        type={'password'}\r\n                        value={newPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputNewPass}/></div>\r\n            <div><Input placeholder={'repeat pass'}\r\n                        type={'password'}\r\n                        value={repeatNewPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputRepeatPass}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         disabled={props.disabled}\r\n                         actionOfButton={sendToCheckPassword\r\n                         } nameOfButton='Set new password'/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SetNewPass\r\n","//constants for paths\r\n\r\nexport const SIGN_IN = '/sign-in';\r\nexport const REGISTER = '/register';\r\nexport const FORGOT = '/forgot';\r\nexport const SET_NEW_PASS = '/set-new-pass/:token';\r\nexport const PROFILE = '/profile';\r\n\r\nexport const CARDS_TABLE = '/cards-table';\r\nexport const DECKS_TABLE = '/decks-table';\r\nexport const PLAY = '/play';\r\nexport const UPLOAD_FILE = '/upload-file';\r\n\r\n//constants for reducers\r\n\r\nexport const REGISTER_SUCCESS = 'auth/register/REGISTER-SUCCESS';\r\nexport const WAITING_FOR_RESPONSE = 'auth/register/WAITING-FOR-RESPONSE';\r\nexport const SET_ERROR_REGISTER_PAGE = 'auth/register/SET-ERROR-REGISTER-PAGE';\r\n\r\n\r\n//constants for SignIn-page\r\nexport const SET_LOADING_DATA = 'SET-LOADING-DATA';\r\nexport const SET_SIGN_IN_FORM_VALUES = 'SET-SIGN-IN-FORM-VALUES';\r\nexport const IS_TOKEN_HAS = 'IS-TOKEN-HAS';\r\nexport const SET_ERROR_SIGN_IN_PAGE = 'SET-ERROR-SIGN-IN-PAGE';\r\nexport const REDIRECT_OFF = 'REDIRECT-OFF';\r\n\r\n//constants for Forgot-page\r\nexport const SET_LOADING_DATA_FORGOT_PAGE = 'SET-LOADING-DATA-FORGOT-PAGE';\r\nexport const SET_VALUE_ERROR_FORGOT_PAGE = 'SET-VALUE-ERROR-FORGOT-PAGE';\r\nexport const RESTORE_FORGOT_PASSWORD = 'RESTORE-FORGOT-PASSWORD';\r\n\r\n//constants for SetNewPass-page\r\nexport const SET_LOADING_VALUE = 'SET-LOADING-VALUE';\r\nexport const SET_NEW_TOKEN = 'SET-NEW-TOKEN';\r\nexport const SHOW_ERROR = 'SHOW-ERROR';\r\nexport const TO_CLEAN_ERROR_FIELD = 'TO-CLEAN-ERROR-FIELD';\r\n\r\n//constants for DecksTable\r\n\r\nexport const ADD_NEW_DECK = 'ADD-NEW-DECK';\r\nexport const DELETE_DECK = 'DELETE-DECK';\r\nexport const GET_DECKS = 'GET-DECKS';\r\nexport const UPDATE_DECK = 'UPDATE-DECK';\r\n\r\n//constants for CardsTable\r\n\r\nexport const ADD_NEW_CARD = 'ADD-NEW-CARD';\r\nexport const DELETE_CARD = 'DELETE-CARD';\r\nexport const GET_CARDS = 'GET-CARDS';\r\nexport const UPDATE_CARD = 'UPDATE-CARD';\r\n\r\n//constants for ProfilePage\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN-SUCCESS';\r\n\r\n//constants for UploadFile\r\n\r\n//constants for search reducer\r\n\r\nexport const SET_SEARCHING_NAME = 'reducer/SET-SEARCHING-NAME'\r\n\r\n\r\n\r\n","import axios from 'axios'\r\nimport {CardsPackType, newCardPackType} from \"../ui/settings/decks/decksType\";\r\nimport {addCardType, CardsType} from \"../ui/settings/cards/cardsType\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n});\r\nconst fileInstance = axios.create({\r\n\r\n    baseURL: \"https://dry-forest-56016.herokuapp.com/\",\r\n});\r\n\r\nexport const changeToken = (newToken: string) => {\r\n    localStorage.removeItem('auth-token');\r\n    localStorage.setItem('auth-token', newToken);\r\n};\r\n\r\nexport const changUserId = (id: string) =>{\r\n    localStorage.removeItem('cardsPack_id');\r\n    localStorage.setItem('cardsPack_id', id);\r\n};\r\n\r\nexport const authApi = {\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(\"auth/login\", {email, password, rememberMe})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                changUserId(response.data._id);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    forgotPass(email: string, html1: string, html2: string) {\r\n        return instance.post('auth/forgot', {email, html1, html2})\r\n            .then(res => {\r\n                return console.log(res)\r\n            })\r\n\r\n    },\r\n\r\n    register(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password})\r\n            .then(res => res)\r\n    },\r\n\r\n    authMe() {\r\n        let authToken = localStorage.getItem('auth-token');\r\n        return instance.post('auth/me', {token: authToken})\r\n            .then(response => {\r\n                console.log(response.data);\r\n                changeToken(response.data.token);\r\n            })\r\n            .catch((fal) => {\r\n                return fal\r\n            })\r\n    },\r\n\r\n    setNewPass(resetPasswordToken: string | undefined, password: string) {\r\n        return instance.post('auth/set-new-password', {resetPasswordToken, password})\r\n            .then(res => res)\r\n    }\r\n};\r\n\r\nexport const decksApi = {\r\n\r\n    addDeck(cardsPack: newCardPackType, token: string | null) {\r\n        return instance.post('cards/pack', {cardsPack, token})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n    deleteDeck(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.delete(`cards/pack?token=${token}&id=${id}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                changeToken(response.data.token);\r\n                return response\r\n            })\r\n\r\n    },\r\n\r\n    getDeck( name: string, minValue: number, maxValue: number,\r\n             page: number, pageCount: number, privateDecks: boolean)\r\n    {\r\n        const token = localStorage.getItem('auth-token');\r\n        const user_id = localStorage.getItem('cardsPack_id');\r\n        const decksFilter = privateDecks?`&user_id=${user_id}`:'';\r\n        return instance.get(\r\n            `cards/pack?token=${token}` +\r\n            (`&min=${minValue}&max=${maxValue}` +\r\n                name && `&packName=${name}` +\r\n                `&pageCount=${pageCount}\r\n                &page=${page}`\r\n            +decksFilter)\r\n    )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n    updateDeck(deck: CardsPackType) {\r\n        debugger\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.put('cards/pack', {cardsPack: deck, token})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data.updatedCardsPack\r\n            })\r\n    }\r\n\r\n};\r\n\r\nexport const cardsApi = {\r\n\r\n    addCard(card: addCardType) {\r\n        return instance.post('cards/card', card)\r\n            .then(response => {\r\n              changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n\r\n    },\r\n\r\n    deleteCard(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.delete(`cards/card?token=${token}&id=${id}`)\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    getCards(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        console.log(id);\r\n        return instance.get(`cards/card?cardsPack_id=${id}&token=${token}`)\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n\r\n                localStorage.removeItem('cardsPack_id');\r\n                localStorage.setItem('cardsPack_id', id);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    updateCard(card: CardsType) {\r\n        debugger\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.put('cards/card', {card, token})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data.updatedCard\r\n            })\r\n    }\r\n\r\n};\r\n\r\nexport const filesApi = {\r\n\r\n    getFile() {\r\n        return fileInstance.get('/file', {responseType: 'blob'})\r\n            .then(({data}) => {\r\n\r\n                const blob = new Blob([data], {type: 'image/jpeg'});\r\n                console.log(blob);\r\n\r\n                return data\r\n            })\r\n    },\r\n\r\n    postFile(file: string) {\r\n\r\n        return fileInstance.post('/file', {myFile: file})\r\n            .then(response=> {\r\n                return response.data\r\n            })\r\n    }\r\n};\r\n\r\n","\r\nimport {SET_LOADING_VALUE, SET_NEW_TOKEN, SHOW_ERROR, TO_CLEAN_ERROR_FIELD} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: initialStateType = {\r\n    error: '',\r\n    token: '',\r\n    loading: null,\r\n    disabled: false\r\n};\r\n\r\ntype initialStateType = {\r\n    error: string | null,\r\n    token: string | undefined\r\n    loading: boolean | null\r\n    disabled: boolean\r\n}\r\n\r\nconst setNewPassReducer = (state = initialState, action: any ) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case SHOW_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case SET_NEW_TOKEN: {\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case SET_LOADING_VALUE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case TO_CLEAN_ERROR_FIELD: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n\r\n};\r\n\r\n\r\n//thunks\r\n\r\nexport const setValueOfSetNewPassForm = (password: string, repeatPassword: string, token: string | undefined) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n        if (password === repeatPassword && password.length > 7) {\r\n            dispatch({type: SET_LOADING_VALUE, loading: true, disabled: true});\r\n\r\n                try  {\r\n                    await authApi.setNewPass(token, password);\r\n                    dispatch({type: SET_NEW_TOKEN, token: token});\r\n                    dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                }\r\n                catch(e) {\r\n                        console.log(e.response);\r\n                        dispatch({type: SHOW_ERROR, error: e.response.data.error});\r\n                        dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                    }\r\n        } else {\r\n            dispatch({\r\n                type: SHOW_ERROR,\r\n                error: 'Incorrect Password! Password should have min 8 values and each one fields should be same!'\r\n            })\r\n        }\r\n    };\r\n\r\n\r\nexport default setNewPassReducer","import React from \"react\";\r\nimport SetNewPass from \"./SetNewPass\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {TO_CLEAN_ERROR_FIELD} from \"../../common/Constants\";\r\nimport {setValueOfSetNewPassForm} from \"../../../bll/reducers/setNewPass-reducer\";\r\n\r\n\r\ntype OwnPropsType={\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined)=>void\r\n}\r\nconst SetNewPassContainer: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.setNewPass);\r\n\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: TO_CLEAN_ERROR_FIELD, error: null})\r\n    };\r\n\r\n\r\n    return (\r\n        <SetNewPass\r\n            setValueOfSetNewPassForm={props.setValueOfSetNewPassForm}\r\n            error={state.error}\r\n            loading={state.loading}\r\n            disabled={state.disabled}\r\n            toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setValueOfSetNewPassForm})(SetNewPassContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Link from \"../../common/LInk\";\r\nimport Button from \"../../common/Button\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean) => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    toCleanErrorField: () => void\r\n}\r\n\r\n\r\nconst SignIn: React.FC<OwnPropsType> = (props) => {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    //пример UseSelector Достаем данные из store\r\n    //const valueOfInputEmail = useSelector((state: AppStoreType) => state.signIn.email);\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setEmail(e.currentTarget.value)\r\n    };\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setPassword(e.currentTarget.value)\r\n    };\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n       !rememberMe ? setRememberMe(true) : setRememberMe(false)\r\n    };\r\n\r\n    const sendSignInFormValues = () => {\r\n            props.setSignInFormValues(email, password, rememberMe)\r\n    };\r\n    const toCleanErrorField = () => {\r\n      props.toCleanErrorField()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'sign-in'}/>\r\n            {props.loading ? <div>loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input type=\"text\"\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changeEmail}/></div>\r\n            <div><Input type=\"password\"\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changePassword}/></div>\r\n            <div><Link way={'/forgot'}\r\n                       wordOfLink={'Forgot password?'}/></div>\r\n            <div><Input type={\"checkbox\"}\r\n                        checked={rememberMe}\r\n                        onChange={changeRememberMe}/>Remember Me\r\n            </div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={sendSignInFormValues}\r\n                         disabled={props.disabled}\r\n                         nameOfButton='Sign In'/></div>\r\n            <div><Link way={'/register'} wordOfLink='Registration'/></div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default SignIn\r\n","\r\nimport {\r\n    IS_TOKEN_HAS, REDIRECT_OFF,\r\n    SET_ERROR_SIGN_IN_PAGE,\r\n    SET_LOADING_DATA,\r\n    SET_SIGN_IN_FORM_VALUES\r\n} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: signInitialStateType = {\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false,\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    token: '',\r\n    redirect: false,\r\n    authToken: ''\r\n};\r\n\r\nexport type signInitialStateType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean,\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    token: string\r\n    redirect: false,\r\n    authToken?:string\r\n}\r\n\r\nconst signInReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case SET_SIGN_IN_FORM_VALUES: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                rememberMe: action.rememberMe,\r\n                token: action.token,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_LOADING_DATA: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                disabled: action.disabled,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_ERROR_SIGN_IN_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n\r\n            }\r\n        }\r\n        case IS_TOKEN_HAS: {\r\n            return {\r\n                ...state,\r\n                authToken: action.authToken\r\n            }\r\n        }\r\n        case REDIRECT_OFF:{\r\n            return {\r\n                ...state,\r\n                redirect: false\r\n            }\r\n        }\r\n            default: return state\r\n    }\r\n\r\n};\r\n\r\n//thunks\r\n\r\nexport const setSignInFormValues = (email: string, password: string, rememberMe: boolean) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n    dispatch({type: SET_LOADING_DATA, loading: true, disabled: true});\r\n    await authApi.login(email, password, rememberMe)\r\n        .then(res => {\r\n            dispatch({type: SET_LOADING_DATA, loading: false, disabled: false});\r\n            dispatch({\r\n                type: SET_SIGN_IN_FORM_VALUES,\r\n                email: res.email,\r\n                password: password,\r\n                rememberMe: res.rememberMe,\r\n                token: res.token,\r\n                redirect: true\r\n            });\r\n            localStorage.setItem('auth-token', res.token);\r\n            localStorage.setItem('user-id', res._id);\r\n\r\n            const authToken = localStorage.getItem('auth-token');\r\n            dispatch({type: IS_TOKEN_HAS, authToken})\r\n            //console.log(authToken)\r\n\r\n        })\r\n        .catch(fal => {\r\n                console.log(fal.response);\r\n                const error = fal.response.data.error;\r\n                dispatch({type: SET_LOADING_DATA, loading: false, disabled: false, redirect: false});\r\n                dispatch({type: SET_ERROR_SIGN_IN_PAGE, error})\r\n            }\r\n        );\r\n};\r\n\r\nexport default signInReducer\r\n","import React from \"react\";\r\nimport SignIn from \"./SignIn\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {SET_ERROR_SIGN_IN_PAGE} from \"../../common/Constants\";\r\nimport {setSignInFormValues} from \"../../../bll/reducers/signIn-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean)=>void\r\n}\r\nconst SignInContainer: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector((state: AppStoreType) => state.signIn);\r\n    //const disable = useSelector((state: AppStoreType) => state.signIn.disabled)\r\n\r\n\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: SET_ERROR_SIGN_IN_PAGE, error: null})\r\n    };\r\n    return (\r\n\r\n        state.redirect ? <Redirect to='/profile'/> :\r\n            <SignIn setSignInFormValues={props.setSignInFormValues}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}\r\n                    toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setSignInFormValues})(SignInContainer)\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Input from \"../../common/Input\";\r\nimport styles from '../Auth.module.css'\r\n\r\ntype OwnPropsType = {\r\n    setForgotPassword: (email: string) => void\r\n    toCleanError: () => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n}\r\nconst Forgot: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const valueOfInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    };\r\n    const restoreForgotPassword =  () => {\r\n         props.setForgotPassword(email);\r\n        setEmail('')\r\n    };\r\n    const toCleanError = () => {\r\n         props.toCleanError()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='forgot'/>\r\n            {props.loading ? <div>Loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input placeholder='email address'\r\n                        type={\"text\"}\r\n                        value={email}\r\n                        onBlur={toCleanError}\r\n                        onFocus={toCleanError}\r\n                        onChange={valueOfInputEmail}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={restoreForgotPassword}\r\n                         nameOfButton='Send email'\r\n                         disabled={props.disabled}/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Forgot","import {\r\n    RESTORE_FORGOT_PASSWORD,\r\n    SET_LOADING_DATA_FORGOT_PAGE,\r\n    SET_VALUE_ERROR_FORGOT_PAGE\r\n} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {authApi} from \"../../dal/api\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    emailApproved: false\r\n};\r\n\r\nconst forgotReducer = (state = initialState, action: any) =>{\r\n   switch (action.type) {\r\n       case RESTORE_FORGOT_PASSWORD: {\r\n         return {\r\n             ...state, email: action.email\r\n         }\r\n       }\r\n       case SET_LOADING_DATA_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               loading: action.loading,\r\n               disabled: action.disabled,\r\n               emailApproved: action.emailApproved\r\n           }\r\n       }\r\n       case SET_VALUE_ERROR_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               error: action.error\r\n           }\r\n       }\r\n           default: return state\r\n   }\r\n\r\n};\r\n\r\nconst html1 = \"<a href=http://localhost:3000/template-typescript#/set-new-pass/\";\r\nconst html2 = \">reset-password-link</a>\";\r\n\r\n//thunks\r\nexport const setForgotPassword = (email: string) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n        dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: true, disabled: true});\r\n        try {\r\n            const data = await authApi.forgotPass(email, html1, html2);\r\n            console.log(data);\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false, emailApproved: true});\r\n            dispatch({type: RESTORE_FORGOT_PASSWORD, email})\r\n        } catch (e) {\r\n            console.log(e.response.data.error);\r\n            const error = e.response.data.error;\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: error});\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false})\r\n        }\r\n\r\n    };\r\n\r\nexport const toCleanError = () =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n        try {\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: null})\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\nexport default forgotReducer","import React from \"react\";\r\nimport Forgot from \"./Forgot\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {setForgotPassword, toCleanError} from \"../../../bll/reducers/forgot-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    setForgotPassword: (email: string)=>void\r\n    toCleanError: ()=>void\r\n}\r\n\r\nconst ForgotContainer: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const state = useSelector((state: AppStoreType) => state.forgot);\r\n\r\n    return (\r\n        !state.emailApproved ?\r\n            <Forgot setForgotPassword={props.setForgotPassword}\r\n                    toCleanError={props.toCleanError}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}/> :\r\n            <Redirect to='/set-new-pass/:token'/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setForgotPassword, toCleanError})(ForgotContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {SIGN_IN} from \"../../common/Constants\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\ntype OwnPropsType = {\r\n    setRegisterFormValues: (email: string, password: string, repeatPassword: string) => void,\r\n    loading: boolean,\r\n    error:boolean,\r\n    cancelErrorPosition:()=>void\r\n}\r\nconst Register: React.FC<OwnPropsType> = ({setRegisterFormValues, loading, error, cancelErrorPosition}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    console.log(setRegisterFormValues)\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const changeRepeatPassword = (e: ChangeEvent<HTMLInputElement>) => setRepeatPassword(e.currentTarget.value)\r\n\r\n    const toCleanErrorField = () => {\r\n        return cancelErrorPosition()\r\n    }\r\n\r\n    const sendSignInFormValues = () => setRegisterFormValues(email, password, repeatPassword)\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'Register'}/>\r\n            {loading && <div>wait</div>}\r\n            {error && <label >{error}</label>}\r\n                <div><Input placeholder={'email'}\r\n                            type={\"email\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeEmail}/>\r\n                </div>\r\n                <div><Input placeholder={'password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changePassword}/>\r\n                </div>\r\n                <div><Input placeholder={'repeat password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeRepeatPassword}/>\r\n                </div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={sendSignInFormValues} nameOfButton={'Register'}/>\r\n            <Link way={SIGN_IN} wordOfLink='Sign In'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PROFILE, REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../common/Constants\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport Register from \"./Register\";\r\nimport {Redirect} from \"react-router\";\r\nimport {authApi} from \"../../../dal/api\";\r\n\r\n\r\nconst RegisterContainer: React.FC = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.register);\r\n\r\n    const setRegisterFormValues = (email: any, password: string, repeatPassword: string) => {\r\n        if (password !== repeatPassword) {\r\n            let error = 'fields password and repeat password should be the same';\r\n            dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n        } else {\r\n            let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n            if (password.length <= 7 && email !== correctEmail) {\r\n                let error = 'your email of password is not valid';\r\n                dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n            } else {\r\n                dispatch({type: WAITING_FOR_RESPONSE, loading: true});\r\n                return authApi.register(email, password)\r\n                    .then(res => {\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false});\r\n                        dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect:true})\r\n                    })\r\n                    .catch(err => {\r\n                        let error = 'your email is invalid or is already registered';\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false});\r\n                        dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n                    })\r\n            }\r\n        }\r\n    };\r\n    const cancelErrorPosition = () => dispatch({type: SET_ERROR_REGISTER_PAGE, error: null});\r\n    return (\r\n        <>\r\n            {state.redirect && <Redirect to={PROFILE}/>}\r\n            <Register setRegisterFormValues={setRegisterFormValues}\r\n                      loading={state.loading}\r\n                      error={state.error}\r\n                      cancelErrorPosition={cancelErrorPosition}/>\r\n        </>\r\n    )\r\n};\r\nexport default RegisterContainer\r\n","import React from \"react\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from './Header.module.css'\r\nimport {DECKS_TABLE, PROFILE, REGISTER, SIGN_IN, UPLOAD_FILE} from \"../../common/Constants\";\r\nimport Button from \"../../common/Button\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    login: boolean,\r\n    tokenIsClear: ()=>void\r\n}\r\nconst Header: React.FC<OwnPropsType> = (props) => {\r\n\r\n  const tokenIsClear = () =>{\r\n      props.tokenIsClear();\r\n  };\r\n\r\n\r\n    return (\r\n        <div className={styles.wrapperOfHeader}>\r\n            {/*<SearchContainer/>*/}\r\n            <Link way={SIGN_IN} wordOfLink={'sign-in'}/>\r\n            <Link way={REGISTER} wordOfLink={'register'}/>\r\n           {/* <Link way={FORGOT} wordOfLink={'forgot'}/>\r\n            <Link way={SET_NEW_PASS} wordOfLink={'set-new-pass'}/>*/}\r\n            <Link way={PROFILE} wordOfLink={'profile'}/>\r\n            <Link way={UPLOAD_FILE} wordOfLink={'file'}/>\r\n            <Link way={DECKS_TABLE} wordOfLink={'decks'}/>\r\n\r\n            {/*<Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>*/}\r\n           { props.login? <Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>:null}\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default Header\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {LOGIN_SUCCESS, REDIRECT_OFF} from \"../../common/Constants\";\r\n\r\nconst HeaderContainer: React.FC = () =>{\r\n\r\n\r\n\r\n    const auth = useSelector((state:AppStoreType)=>state.profile.login);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    let tokenIsClear = () => {\r\n        localStorage.removeItem('auth-token');\r\n        localStorage.removeItem('user-id');\r\n        dispatch({type: LOGIN_SUCCESS, login: false});\r\n        dispatch({type: REDIRECT_OFF})\r\n\r\n    };\r\n    return(\r\n        <Header login={auth} tokenIsClear={tokenIsClear}/>\r\n    )\r\n};\r\n\r\nexport default HeaderContainer\r\n","import {ADD_NEW_DECK, DELETE_DECK, GET_DECKS, UPDATE_DECK} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {decksApi} from \"../../dal/api\";\r\nimport {CardsPackType} from \"../../ui/settings/decks/decksType\";\r\n\r\n\r\nconst initialState = {\r\n    decks: [\r\n        {\r\n            grade: 0,\r\n            name: \"7777\",\r\n            path: \"/def\",\r\n            rating: 0,\r\n            shots: 0,\r\n            type: \"pack\",\r\n            _id: \"5ebd1e6d5af2c800049590de\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst decksTableReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_DECK:\r\n            return {\r\n                ...state,\r\n                decks: [...state.decks, action.newCardsPack]\r\n            };\r\n\r\n        case DELETE_DECK:\r\n            return {\r\n                ...state, decks: state.decks.filter(deck => deck._id !== action._id)\r\n            };\r\n\r\n        case GET_DECKS: {\r\n            return {\r\n                ...state, decks: action.cardPacks\r\n            }\r\n        }\r\n\r\n        case UPDATE_DECK:\r\n            return {\r\n                ...state, decks: state.decks.map(deck => {\r\n                    return deck._id === action.updateCardsDeck._id ? action.updateCardsDeck : deck\r\n                })\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default decksTableReducer\r\n\r\n////////////////////////////////////////thunks\r\n\r\nexport const addNewDeck = (name: string, rating: number) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const token = localStorage.getItem('auth-token');\r\n        const userId = localStorage.getItem('user-id') as string;\r\n\r\n\r\n        try {\r\n            const response = await decksApi.addDeck({name: name, user_id: userId, rating: rating}, token);\r\n            const newCardsPack = response.newCardsPack;\r\n            dispatch({type: ADD_NEW_DECK, newCardsPack});\r\n            console.log(response);\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n\r\nexport const deleteADeck = (_id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n\r\n        try {\r\n            await decksApi.deleteDeck(_id);\r\n            dispatch({type: DELETE_DECK, _id});\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n\r\nexport const getDecks = (page: number, pageCount: number, privateDecks: boolean) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: () => AppStoreType) => {\r\n\r\n        const {name} =  getState().search;\r\n        const {minValue, maxValue} = getState().search;\r\n\r\n        try {\r\n            const data = await decksApi.getDeck(name, minValue, maxValue,\r\n                page, pageCount, privateDecks\r\n            );\r\n            const cardPacks = data.cardPacks;\r\n            dispatch({type: GET_DECKS, cardPacks});\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n\r\nexport const updateDeck = (deck: CardsPackType) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n\r\n        try {\r\n            const updateCardsDeck = await decksApi.updateDeck(deck);\r\n            dispatch({type: UPDATE_DECK, updateCardsDeck});\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {ADD_NEW_CARD, DELETE_CARD, GET_CARDS, UPDATE_CARD} from \"../../ui/common/Constants\";\r\nimport {cardsApi} from \"../../dal/api\";\r\nimport {CardsType} from \"../../ui/settings/cards/cardsType\";\r\n\r\nconst initialState = {\r\n    theCards: [\r\n        {\r\n            cardsPack_id: '5ebe22ad7b58e90004b4b1e0',\r\n            _id: '',\r\n            question: 'something 1',\r\n            answer: 'something else 1',\r\n            grade: 3,\r\n            shots: 1,\r\n            token: ''\r\n        },\r\n    ],\r\n};\r\n\r\ntype IState = typeof initialState\r\n\r\nconst cardsTableReducer = (state = initialState, action: any): IState => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_CARD:\r\n            return {\r\n                ...state,\r\n                theCards: [...state.theCards, action.newCard]\r\n            };\r\n\r\n        case GET_CARDS:\r\n            return {\r\n                ...state, theCards: action.cards\r\n            };\r\n\r\n        case UPDATE_CARD:\r\n            return {\r\n                ...state, theCards: state.theCards.map(card => {\r\n                    return card._id === action.updatedCard._id ? action.updatedCard : card\r\n                })\r\n            };\r\n\r\n        case DELETE_CARD:\r\n            return {\r\n                ...state, theCards: state.theCards.filter(card => card._id !== action._id)\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default cardsTableReducer\r\n\r\n/////////////////////////////////thunks\r\n\r\nexport const addNewCard = (question: string, answer: string, grade: number) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n        const token = localStorage.getItem('auth-token');\r\n        const cardsPack_id = localStorage.getItem('cardsPack_id');\r\n\r\n        try {\r\n            const result = await cardsApi.addCard({\r\n                card: {cardsPack_id: cardsPack_id, question, answer, grade},\r\n                token: token\r\n            });\r\n            console.log(result);\r\n            const newCard = {...result.newCard, token: result.token};\r\n            dispatch({type: ADD_NEW_CARD, newCard});}\r\n\r\n            catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    };\r\n\r\nexport const deleteACard = (id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        try {\r\n            const data = await cardsApi.deleteCard(id);\r\n            const cardsPack_id = data.deletedCard._id;\r\n            dispatch({type: DELETE_CARD, _id: cardsPack_id});\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\nexport const getCards = (id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        try {\r\n            const data = await cardsApi.getCards(id);\r\n            const cards = data.cards;\r\n            const cardsPack_id = localStorage.getItem('cardsPack_id');\r\n            dispatch({type: GET_CARDS, cards, cardsPack_id});\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\nexport const updateCards = (card: CardsType) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n\r\n        try {\r\n            const updatedCard = await cardsApi.updateCard(card);\r\n            dispatch({type: UPDATE_CARD, updatedCard});\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n","import {getDecks} from \"./decksTable-reducer\";\r\nimport {SET_SEARCHING_NAME} from \"../../ui/common/Constants\";\r\nimport {searchInitialState, setSearchingNameSuccessActionType} from \"../../ui/authorization/types/searchReducerTypes\";\r\nimport {getCards} from \"./cardsTable-reducer\";\r\n\r\nconst initialState: searchInitialState = {\r\n    name: '',\r\n    minValue: 0,\r\n    maxValue: 4\r\n};\r\n\r\n\r\nconst searchingReducer = (state:any = initialState, action: any): any => {\r\n\r\n    switch (action.type) {\r\n        case SET_SEARCHING_NAME: {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                minValue: action.minValue,\r\n                maxValue: action.maxValue\r\n            }\r\n        }\r\n            case 'SET_SEARCHING_NAME_CARD_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                minValue:action.minValue,\r\n                maxValue:action.maxValue\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\nexport default searchingReducer\r\n\r\n\r\n// type ThunkType = ThunkAction<void, searchingInitialState, unknown, setSearchingNameSuccessActionType>\r\n// type ThunkDispatchType = ThunkDispatch<searchingInitialState, unknown, setSearchingNameSuccessActionType>\r\n\r\n//action creators\r\n\r\nexport const setSearchingNameSuccess = (name: string, minValue: number, maxValue: number): setSearchingNameSuccessActionType =>\r\n    ({type: SET_SEARCHING_NAME, name, minValue, maxValue})\r\nexport const setSearchingNameCardSuccess = (id:string, name: string, minValue: number, maxValue: number): any =>\r\n    ({type: 'SET_SEARCHING_NAME_CARD_SUCCESS', id, name, minValue, maxValue})\r\n\r\n//thunks\r\n\r\nexport const setSearchDeck = (name: string, minValue: number, maxValue: number) => (dispatch: any) => {\r\n    dispatch(setSearchingNameSuccess(name, minValue, maxValue))\r\n    dispatch(getDecks(1,4, false))\r\n}\r\nexport const setSearchCard = (id:string, name: string, minValue: number, maxValue: number) => (dispatch: any) => {\r\n    debugger\r\n    dispatch(setSearchingNameCardSuccess(id, name, minValue, maxValue))\r\n    dispatch(getCards(id))\r\n    // })\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport s from './Search.module.css'\r\nimport Button from \"../../common/Button\";\r\nimport {setSearchDeck} from \"../../../bll/reducers/searchReducer\";\r\n\r\ntype OwnPropsType = {\r\n    minValue: number,\r\n    maxValue: number\r\n}\r\n\r\nconst Search: React.FC<OwnPropsType> = ({minValue, maxValue}) => {\r\n\r\n\r\n    const [name, setName] = useState('');\r\n    const [values, setValue] = useState<number[]>([minValue, maxValue]);\r\n    const handleStrip = (values: number[]) => {\r\n        setValue(values)\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    // const search = (minValue:number, maxValue:number) => dispatch(setRangeValue(minValue, maxValue))\r\n    const search = () => dispatch(setSearchDeck(name, values[0], values[1]))\r\n    //(name:string, minValue:number, maxValue:number) => dispatch(setSearchName((name, minValue, maxValue))\r\n\r\n    return (\r\n        <div className={s.settings}>\r\n            <div className={s.input}><input type='text' placeholder='&#128269;' onChange={e => setName(e.currentTarget.value)}/></div>\r\n            {/*<div className={s.strip}><Strip values={values} handleStrip={handleStrip}/></div>*/}\r\n            <div className={s.button}><Button actionOfButton={search} nameOfButton='Search' typeOfButton=\"button\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Search\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Search from \"./Search\";\r\n\r\n\r\nconst SearchContainer = () => {\r\n\r\n\r\n    const minValue = useSelector((state:any) => state.search.minValue);\r\n    const maxValue = useSelector((state:any) => state.search.maxValue);\r\n\r\n    return (\r\n        <Search minValue={minValue} maxValue={maxValue}/>\r\n    )\r\n};\r\n\r\nexport default SearchContainer\r\n","import React, {ChangeEvent, useState} from \"react\";\r\n\r\nimport style from './DecksTable.module.css';\r\nimport Button from \"../../common/Button\";\r\nimport Input from \"../../common/Input\";\r\nimport Title from \"../../common/Title\";\r\nimport SearchContainer from \"../Search/SearchContainer\";\r\nimport Link from \"../../common/LInk\";\r\nimport {CARDS_TABLE, PLAY} from \"../../common/Constants\";\r\nimport {CardsPackType} from \"./decksType\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    decks: CardsPackType[],\r\n    addNewDeck: (name: string, rating: number) => void,\r\n    deleteADeck: (_id: string) => void\r\n    getCards: (id:string )=>void\r\n    updateDeck: (deck: any)=>void\r\n}\r\nconst DecksTable: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [rating, setRating] = useState(0);\r\n    const [update, setUpdate] = useState(false);\r\n    const [changeName, setChangeName] = useState('');\r\n    const [updatedDeck, setUpdatedDeck] = useState({});\r\n\r\n    const nameOfNewDeck = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    };\r\n    const sendNewDeck = () => {\r\n        props.addNewDeck(name, rating)\r\n    };\r\n    const sendDeleteDeck = (_id: string ) => {\r\n        props.deleteADeck(_id)\r\n    };\r\n    const increment = () =>{\r\n        setRating(rating + 1.0)\r\n    };\r\n    const decrement = () =>{\r\n        setRating(rating -1.0)\r\n    };\r\n    const onUpdateDeck = (deck: CardsPackType) =>{\r\n        setUpdate(true);\r\n        setChangeName(deck.name);\r\n        setUpdatedDeck(deck);\r\n    };\r\n    const onUpdateDeckName = (e: ChangeEvent<HTMLTextAreaElement>) =>{\r\n        setChangeName(e.currentTarget.value)\r\n    };\r\n    const offUpdateDeck = () =>{\r\n        setUpdate(false);\r\n        const UpdatedDeckSuccess = {...updatedDeck, name: changeName};\r\n        props.updateDeck(UpdatedDeckSuccess)\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <SearchContainer/>\r\n            <Title title='DECKS'/>\r\n            <table className={style.Table}>\r\n                <tbody>\r\n                <tr>\r\n                    <th><Input type={\"text\"} value={name} placeholder={'Deck\\'s name'} onChange={nameOfNewDeck}/></th>\r\n                    <th>Rating {' '} {rating} {' '}\r\n                        <Button actionOfButton={increment} nameOfButton='↑' typeOfButton=\"button\"/> {' '}\r\n                        <Button actionOfButton={decrement} nameOfButton='↓' typeOfButton=\"button\" />\r\n                    </th>\r\n                    <th>\r\n                        <Button actionOfButton={sendNewDeck} nameOfButton='add' typeOfButton=\"button\"/>\r\n                    </th>\r\n                </tr>\r\n                {props.decks.map(deck =>\r\n                    <tr className={style.cells} key={deck._id}>\r\n                        <td>{deck.name}</td>\r\n                        <td>{deck.rating}</td>\r\n                        <td><Button actionOfButton={() => onUpdateDeck(deck)} nameOfButton='Update' typeOfButton=\"button\"/>{' '}\r\n                            <Button actionOfButton={() => sendDeleteDeck(deck._id)} nameOfButton='Delete'\r\n                                    typeOfButton=\"button\"/>{' '}\r\n                            <span onClick={()=>props.getCards(deck._id)}><Link way={CARDS_TABLE} wordOfLink={'cards'}/></span>{' '}\r\n                            <span onClick={()=>props.getCards(deck._id)}><Link way={PLAY} wordOfLink={'play'}/></span>\r\n                        </td>\r\n                    </tr>)}\r\n                </tbody>\r\n            </table>\r\n\r\n            {update ?\r\n                <div className={style.updateCard}>\r\n                    <div className={style.fieldOfUpdate}>\r\n                        <h1>UPDATE YOUR DECK</h1>\r\n                        <textarea placeholder={'Name'} onChange={onUpdateDeckName} value={changeName}/>\r\n                        <button onClick={offUpdateDeck}>Save</button>\r\n                        <button onClick={()=>setUpdate(false)}>Cancel</button>\r\n                    </div>\r\n                </div> : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DecksTable\r\n","import React, {useEffect} from \"react\";\r\nimport DecksTable from \"./DecksTable\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {addNewDeck, deleteADeck, getDecks, updateDeck} from \"../../../bll/reducers/decksTable-reducer\";\r\nimport {getCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsPackType} from \"./decksType\";\r\n\r\ntype OwnPropsType = {\r\n    addNewDeck: (name: string , rating: number)=>void,\r\n    deleteADeck: (_id: string)=>void,\r\n    getDecks: (page: number, pageCount: number, privateDecks: boolean)=>void,\r\n    getCards: (id:string )=>void,\r\n    updateDeck: (deck: CardsPackType)=>void\r\n}\r\n\r\nconst DecksTableContainer: React.FC<OwnPropsType> = (props) =>{\r\n\r\n    const state = useSelector((state: AppStoreType) => state.decks.decks);\r\n\r\n\r\n    useEffect(() => {\r\n        props.getDecks(1,4, false);\r\n    }, []);\r\n\r\n    return(\r\n        <DecksTable decks={state}\r\n                    addNewDeck={props.addNewDeck}\r\n                    deleteADeck={props.deleteADeck}\r\n                    updateDeck={props.updateDeck}\r\n                    getCards={props.getCards}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {\r\n    addNewDeck, deleteADeck, getDecks, getCards, updateDeck})(DecksTableContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport style from \"./CardsTable.module.css\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport SearchContainer from \"../Search/SearchContainer\";\r\nimport {CardsType} from \"./cardsType\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    cards: CardsType[]\r\n    addNewCard: (question: string, answer: string, grade: number) => void,\r\n    deleteACard: (id: string) => void\r\n    updateCards: (card: CardsType) => void\r\n}\r\nconst CardsTable: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n    const [grade, setGrade] = useState(0);\r\n    const [update, setUpdate] = useState(false);\r\n    const [changeQuestion, setChangeQuestion] = useState('');\r\n    const [changeAnswer, setChangeAnswer] = useState('');\r\n    const [updatedCard, setUpdatedCard] = useState({});\r\n\r\n    const textOfQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    };\r\n    const textOfAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    };\r\n    const sendNewCard = () => {\r\n        props.addNewCard(question, answer, grade)\r\n    };\r\n    const sendDeleteCard = (id: string) => {\r\n        props.deleteACard(id)\r\n    };\r\n    const onUpdateCard = (card: CardsType) => {\r\n        setUpdate(true);\r\n        setChangeQuestion(card.question);\r\n        setChangeAnswer(card.answer);\r\n        setUpdatedCard(card)\r\n    };\r\n    const offUpdateCard = () => {\r\n        setUpdate(false);\r\n        const updatedCardSuccess = {...updatedCard, question: changeQuestion, answer: changeAnswer};\r\n        props.updateCards(updatedCardSuccess as CardsType)\r\n    };\r\n    const onUpdateCardQuestion = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setChangeQuestion(e.currentTarget.value)\r\n    };\r\n    const onUpdateCardAnswer = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setChangeAnswer(e.currentTarget.value)\r\n    };\r\n\r\n    const increment = () => {\r\n        setGrade(grade + 1)\r\n    };\r\n    const decrement = () => {\r\n        setGrade(grade - 1)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SearchContainer/>\r\n            <Title title='CARDS'/>\r\n            <table className={style.Table}>\r\n                <tbody>\r\n                <tr>\r\n                    <th><Input type={\"text\"} value={question} placeholder={'Question'} onChange={textOfQuestion}/></th>\r\n                    <th>Grade {' '} {grade} {' '}\r\n                        <Button actionOfButton={increment} nameOfButton='↑' typeOfButton=\"button\"/> {' '}\r\n                        <Button actionOfButton={decrement} nameOfButton='↓' typeOfButton=\"button\"/>\r\n                    </th>\r\n                    <th>\r\n                        <Input type={\"text\"} value={answer} placeholder={'Answer'} onChange={textOfAnswer}/>{' '}\r\n                        <Button actionOfButton={sendNewCard} nameOfButton='add' typeOfButton=\"button\"/>\r\n                    </th>\r\n                </tr>\r\n                {props.cards.map(card =>\r\n                    <tr className={style.cells} key={card._id}>\r\n                        <td>{card.question}{' '}</td>\r\n                        <td>{card.grade}</td>\r\n                        <td>{\">>>>>>......<<<<<<\"}{' '}\r\n                            <Button actionOfButton={() => onUpdateCard(card)} nameOfButton='Update'\r\n                                    typeOfButton=\"button\"/>\r\n                            <Button actionOfButton={\r\n                                () => sendDeleteCard(card._id)\r\n                            } nameOfButton='Delete'\r\n                                    typeOfButton=\"button\"/>\r\n\r\n                        </td>\r\n                    </tr>)}\r\n                </tbody>\r\n            </table>\r\n\r\n            {update ?\r\n                <div className={style.updateCard}>\r\n                    <div className={style.fieldOfUpdate}>\r\n                        <h1>UPDATE YOUR CARD</h1>\r\n                        <textarea placeholder={'Question'} onChange={onUpdateCardQuestion} value={changeQuestion}/>\r\n                        <textarea placeholder={'Answer'} onChange={onUpdateCardAnswer} value={changeAnswer}/>\r\n                        <button onClick={offUpdateCard}>Save</button>\r\n                        <button onClick={() => setUpdate(false)}>Cancel</button>\r\n                    </div>\r\n                </div> : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CardsTable\r\n","import React from \"react\";\r\nimport CardsTable from \"./CardsTable\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {addNewCard, deleteACard, updateCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsType} from \"./cardsType\";\r\n\r\ntype OwnPropsType = {\r\n    addNewCard: (question: string, answer: string, grade: number)=>void,\r\n    deleteACard: (id: string)=>void,\r\n    updateCards: (card: CardsType)=>void\r\n}\r\n\r\nconst CardsTableContainer: React.FC<OwnPropsType> = (props) => {\r\n\r\nconst state = useSelector((state:AppStoreType) => state.cards.theCards);\r\n\r\n\r\n    return (\r\n            <CardsTable addNewCard={props.addNewCard}\r\n                        deleteACard={props.deleteACard}\r\n                        updateCards={props.updateCards}\r\n                        cards={state}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {addNewCard, deleteACard, updateCards})(CardsTableContainer)\r\n\r\n","import React, {useState} from \"react\";\r\nimport Button from \"../common/Button\";\r\nimport style from './GameField.module.css'\r\nimport {CardsType} from \"../settings/cards/cardsType\";\r\n\r\ntype OwnPropsType = {\r\n    card: CardsType\r\n    nextCard: ()=>void\r\n    setGrade: (grade: number)=>void\r\n}\r\nconst GameField: React.FC<OwnPropsType> = (props) => {\r\n   const [checked, setChecked] = useState(false);\r\n   const [grade, setGrade] = useState(0);\r\n\r\n\r\n   const showAnswer = () =>{\r\n       setChecked(true)\r\n   };\r\nconst nextCard = () =>{\r\n    props.nextCard();\r\n    setChecked(false);\r\n    props.setGrade(grade)\r\n};\r\n\r\n    return (\r\n        <>\r\n\r\n                <div className={style.gameFieldWrapper} key={props.card._id}>\r\n                    <div className={style.cardQuestion}>\r\n                        <span className={style.textQuestion}>{props.card.question}</span>\r\n                    </div>\r\n                    <Button typeOfButton={\"button\"} actionOfButton={showAnswer} nameOfButton='check'/>\r\n                    <div className={checked? style.cardAnswerOn: style.cardAnswerOff} onClick={()=>setChecked(true)}>\r\n                        <span className={style.textAnswer}>{checked ? props.card.answer: null}</span>\r\n                    </div>\r\n\r\n                </div>\r\n            <div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(1)\r\n                }} nameOfButton={\"didn't know\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(2)\r\n                }} nameOfButton={\"forgot\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(3)\r\n                }} nameOfButton={\"spend a lot of time\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(4)\r\n                }} nameOfButton={\"mixed up\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(5)\r\n                }} nameOfButton={\"knew\"}/>{' '}\r\n            </div>\r\n            <div> <Button typeOfButton={\"button\"} actionOfButton={nextCard} nameOfButton={\"NEXT\"}/></div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GameField\r\n","import React, {useState} from \"react\";\r\nimport GameField from \"./GameField\";\r\nimport {AppStoreType} from \"../../bll/store\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {updateCards} from \"../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsType} from \"../settings/cards/cardsType\";\r\n\r\ntype OwnPropsType = {\r\n    updateCards: (card: any) => void\r\n}\r\nconst GameFieldContainer: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [cardOfNumber, setCardOfNumber] = useState(0);\r\n    const cards = useSelector((state: AppStoreType) => state.cards.theCards);\r\n\r\n    console.log(cards)\r\n    const sum = cards.map(elem => elem.grade).reduce((acc, el) => acc + el)\r\n    console.log(sum)\r\n    const devideCard = cards.map((card: any) => card.grade / Number(sum))\r\n    console.log(devideCard)\r\n    const x = Math.random() * 1\r\n    console.log(x)\r\n    const next = () => {\r\n        let totalP = 0;\r\n        for (let i = 0; i < devideCard.length; i++) {\r\n            totalP += devideCard[i];\r\n            console.log(\"totalP => \" + totalP);\r\n            if(x > totalP) {\r\n                console.log(\"item \" + i + \" with value: \" + devideCard[i]);\r\n                break;\r\n            }\r\n        }\r\n        return totalP\r\n    }\r\n    let result = next()\r\n    console.log(result)\r\n    let superResult = devideCard.indexOf(result)\r\n    console.log(superResult)\r\n\r\n\r\n/// working version\r\n//     let grade = [2, 5, 3, 7, 4]\r\n//     const sum = grade.reduce((acc: any, card: any) => acc + card)\r\n//     console.log(sum)\r\n//     const devideCard = grade.map((card: any) => card / Number(sum))\r\n//     console.log(devideCard)\r\n//     const x = Math.random() * 1\r\n//     console.log(x)\r\n//     const next = () => {\r\n//         for (let i = 0; i < devideCard.length; i++) {\r\n//             if (x < devideCard[i]) {\r\n//                 return devideCard[i]\r\n//             } else {\r\n//                 return devideCard[i++]\r\n//             }\r\n//         }\r\n//     }\r\n//     let result = next()\r\n//     console.log(result)\r\n//     let superResult = devideCard.indexOf(result as any)\r\n//     console.log(superResult)\r\n        //working version\r\n    // var totalP = 0;\r\n    // for (let i = 0; i < arr.length; i++) {\r\n    //     var p = arr[i]/sum;\r\n    //     console.log(\"p => \" + p);\r\n    //     totalP += p;\r\n    //     console.log(\"\\ttotalP => \" + totalP);\r\n    //     if(r < totalP) {\r\n    //         console.log(\"\\t\\tBINGO!!!! => item \" + i + \" with mark: \" + arr[i]);\r\n    //         break;\r\n    //     }\r\n    // }\r\n    ///working version\r\n    // const minGrade = cards.reduce((acc, el) => acc.grade < el.grade ? acc : el); ///получаем минимальный элемент grade\r\n    const nextCard = () => {\r\n        setCardOfNumber(cardOfNumber + 1 )\r\n    };\r\n\r\n    if (cards[cardOfNumber] === undefined) {\r\n        setCardOfNumber(0)\r\n    }\r\n\r\n    const card = cards[cardOfNumber];\r\n\r\n\r\n    const setGrade = (grade: number) => {\r\n        debugger\r\n        const newGrade = (card.shots * card.grade + grade) / (card.shots + 1);\r\n        const updatedCard = {...card, shots: card.shots + 1, grade};\r\n        Math.floor(Math.random() * 5);\r\n        props.updateCards(updatedCard)\r\n    };\r\n\r\n    return (\r\n        <GameField card={card}\r\n                   nextCard={nextCard}\r\n                   setGrade={setGrade}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {updateCards})(GameFieldContainer)\r\n","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport Input from \"../Input\";\r\nimport Button from \"../Button\";\r\nimport {filesApi} from \"../../../dal/api\";\r\n\r\n\r\n\r\nconst UploadFile = () => {\r\n\r\n    const inRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [code, setCode] = useState(true);\r\n    const [text, setText] = useState('');\r\n    const [file, setFile] = useState();\r\n    const [fileURL, setFileURL] = useState();\r\n    const [fileData, setFileData] = useState();\r\n    const [file64, setFile64] = useState();\r\n    const [base64, setBase64] = useState(true);\r\n\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const newFile = e.target.files && e.target.files[0];\r\n\r\n\r\n        const reader = new FileReader();\r\n        const formData = new FormData();\r\n\r\n\r\n        if(newFile){\r\n            setFile(newFile);\r\n            setFileURL(window.URL.createObjectURL(newFile));\r\n            formData.append('myFile', newFile, newFile.name);\r\n            setFileData(formData);\r\n\r\n            if (code) {\r\n                debugger\r\n                reader.onloadend = () => {\r\n                    setFile64(reader.result);\r\n\r\n                };\r\n\r\n                if (base64) {\r\n                    debugger\r\n                    reader.readAsDataURL(newFile);\r\n                }\r\n                else reader.readAsText(newFile)\r\n            }\r\n        }\r\n    };\r\n\r\n    const send = () =>{\r\n        filesApi.postFile(fileData)\r\n    };\r\n    return (\r\n        <div>\r\n           {/* <div>\r\n                reader\r\n                <Input type={\"checkbox\"}\r\n                       checked={code}\r\n                onChange={e => setCode(e.currentTarget.checked)}/>\r\n            </div>\r\n            <div>\r\n                base64\r\n                <Input type={\"checkbox\"}\r\n                       checked={base64}\r\n                       onChange={e=> setBase64(e.currentTarget.checked)}/>\r\n            </div>*/}\r\n            <img src={file64} alt={'file'} width={'300px'}/>\r\n            <div>name: {file && file.name}</div>\r\n            <div>last Modified: {file && file.lastModified}</div>\r\n            <div>size: {file && file.size}</div>\r\n            <div>type: {file && file.type}</div>\r\n            <input type={'file'}\r\n                   accept='.jpg, .jpeg, .png, .gif'\r\n                   ref={inRef}\r\n                   onChange={upload}\r\n                   style={{display: 'none'}}/>\r\n            <Button typeOfButton={\"button\"}\r\n                    actionOfButton={() => inRef && inRef.current && inRef.current.click()}\r\n                    nameOfButton='add'/>\r\n            <div>\r\n                <textarea value={text} onChange={e => setText(e.currentTarget.value)}/>\r\n            </div>\r\n\r\n            <Button typeOfButton={'button'}\r\n                    actionOfButton={() =>{} //writeFile('Text.txt', text + `\\r\\n` + file64)\r\n                    }\r\n                    nameOfButton='save'/>{' '}\r\n            <Button typeOfButton={'button'}\r\n                    actionOfButton={send} nameOfButton='send'/>{' '}\r\n            <Button typeOfButton={'button'}\r\n                    actionOfButton={() =>{filesApi.getFile()} //getFile(baseURL + 'file', 'newFile.jpg')\r\n                    }\r\n                    nameOfButton='get'/>\r\n\r\n            {/*<input type=\"file\" accept=\".jpg, .jpeg, .png\" multiple/>*/}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default UploadFile;","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from './Profile.module.css';\r\nimport Button from \"../../common/Button\";\r\nimport {CardsPackType} from \"../../settings/decks/decksType\";\r\nimport {Redirect} from \"react-router\";\r\nimport {CARDS_TABLE, PLAY} from \"../../common/Constants\";\r\nimport Title from \"../../common/Title\";\r\nimport SearchContainer from \"../../settings/Search/SearchContainer\";\r\n\r\n\r\ntype OwnPropsType = {\r\n\r\n    decks: CardsPackType[]\r\n    approveAuth: (login: boolean) => void\r\n    getCards: (id: string) => void\r\n    nextPage: (page: number) => void\r\n    myDecks: () => void\r\n    allDecks: () => void\r\n    deleteADeck: (_id: string) => void\r\n    updateDeck: (deck: any) => void\r\n    addNewDeck: (name: string, rating: number)=>void\r\n}\r\n\r\n\r\nconst Profile: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n\r\n    const [toCards, setToCards] = useState(false);\r\n    const [toPlay, setToPlay] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n    const [changeName, setChangeName] = useState('');\r\n    const [updatedDeck, setUpdatedDeck] = useState({});\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    const [numberOfPage, setNumberOfPage] = useState(1);\r\n\r\n    const onUpdateDeckName = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setChangeName(e.currentTarget.value)\r\n    };\r\n    const onUpdateDeck = (deck: CardsPackType) => {\r\n        setUpdate(true);\r\n        setChangeName(deck.name);\r\n        setUpdatedDeck(deck);\r\n    };\r\n    const offUpdateDeck = () => {\r\n        setUpdate(false);\r\n        const UpdatedDeckSuccess = {...updatedDeck, name: changeName};\r\n        props.updateDeck(UpdatedDeckSuccess)\r\n    };\r\n    const sendNewDeck = () => {\r\n        props.addNewDeck(name, 0)\r\n    };\r\n\r\n    const increment = () => {\r\n        setNumberOfPage(numberOfPage + 1);\r\n        props.nextPage(numberOfPage + 1)\r\n\r\n    };\r\n    const decrement = () => {\r\n        props.nextPage(numberOfPage - 1);\r\n        numberOfPage <= 1 ? setNumberOfPage(1) : setNumberOfPage(numberOfPage - 1);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.profileWrapper}>\r\n\r\n            <div className={style.profilePart}>\r\n                <img src={'https://static.tildacdn.com/tild6564-3565-4232-b434-653536636432/avatar_OCAS.jpg'}/>\r\n                <div><Button typeOfButton={'button'} actionOfButton={() => {\r\n                }} nameOfButton='UPLOAD AVATAR'/></div>\r\n                <div><SearchContainer /></div>\r\n                <div><Button typeOfButton={'button'} actionOfButton={props.allDecks} nameOfButton='ALL DECKS'/></div>\r\n                <div><Button typeOfButton={'button'} actionOfButton={props.myDecks} nameOfButton='MY DECKS'/></div>\r\n\r\n\r\n                <div className={style.paginationButtons}>\r\n                    <Button typeOfButton={'button'} actionOfButton={decrement} nameOfButton={'PREVIOUS'}/>{'  '}\r\n                    <Button typeOfButton={'button'} actionOfButton={increment} nameOfButton={'NEXT'}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.appPart}>\r\n                <div className={style.decksWrapper}>\r\n                   <div className={style.addNewDeckField}>\r\n                       <input className={style.inputAddDeck} value={name}\r\n                              onChange={(e:ChangeEvent<HTMLInputElement>)=>{setName(e.currentTarget.value)}}\r\n                              placeholder=\"Deck's name\"/>\r\n                       <Button typeOfButton={'button'}\r\n                               actionOfButton={sendNewDeck} nameOfButton='Create Deck'/>\r\n                   </div>\r\n                    {props.decks.map(deck =>\r\n                        <div className={style.deckCover} key={deck._id}>\r\n\r\n                            <div className={style.buttonsOfSettings}>\r\n                                <Button typeOfButton='button' actionOfButton={() => {\r\n                                    props.getCards(deck._id);\r\n                                    setToPlay(true)\r\n                                }} nameOfButton={'PLAY'}/>\r\n                                <Button typeOfButton='button' actionOfButton={() =>\r\n                                    onUpdateDeck(deck)\r\n                                } nameOfButton={'UPDATE'}/>\r\n                            </div>\r\n\r\n                            <div className={style.buttonsOfSettings}>\r\n                                <Button typeOfButton='button' actionOfButton={() => {\r\n                                    props.getCards(deck._id);\r\n                                    setToCards(true)\r\n                                }\r\n                                } nameOfButton={'CARDS'}/>\r\n\r\n                                <Button typeOfButton='button' actionOfButton={() => {\r\n                                    props.deleteADeck(deck._id);\r\n                                }\r\n                                } nameOfButton={'DELETE'}/>\r\n                            </div>\r\n\r\n                            <div className={style.decksName}><b>{deck.name}</b></div>\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n            {toCards ? <Redirect to={CARDS_TABLE}/> : null}\r\n            {toPlay ? <Redirect to={PLAY}/> : null}\r\n            {update ?\r\n                <div className={style.updateCard}>\r\n                    <div className={style.fieldOfUpdate}>\r\n                        <Title title='UPDATE YOUR DECK'/>\r\n                        <textarea placeholder={'Name'} onChange={onUpdateDeckName} value={changeName}/>\r\n                        <button onClick={offUpdateDeck}>Save</button>\r\n                        <button onClick={() => setUpdate(false)}>Cancel</button>\r\n                    </div>\r\n                </div> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {LOGIN_SUCCESS} from \"../../ui/common/Constants\";\r\n\r\nconst initialState = {\r\n    login: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS: {\r\n            return {...state, login: action.login}\r\n        }\r\n\r\n    }\r\n\r\n    return state\r\n};\r\n\r\nexport default profileReducer\r\n\r\n//thunks\r\n\r\nexport const approveAuth = (login: boolean) =>\r\n\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        try {\r\n            await authApi.authMe();\r\n            dispatch({type: LOGIN_SUCCESS, login: login})\r\n        }\r\n        catch(e){\r\n\r\n        }\r\n\r\n\r\n    };\r\n","import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {approveAuth} from \"../../../bll/reducers/profile-reducer\";\r\nimport {addNewDeck, deleteADeck, getDecks, updateDeck} from \"../../../bll/reducers/decksTable-reducer\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {getCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    approveAuth: (login: boolean) => void\r\n    getDecks: (page: number, pageCount: number, privateDecks: boolean) => void\r\n    getCards: (id: string) => void\r\n    deleteADeck: (_id: string) => void\r\n    updateDeck: (deck: any) => void\r\n    addNewDeck: (name: string, rating: number)=>void\r\n}\r\n\r\nconst ProfileContainer: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    useEffect(() => {\r\n        props.getDecks(1, 10, false);\r\n        let authToken = localStorage.getItem('auth-token');\r\n        console.log(authToken);\r\n        const approve = !!authToken; //authToken?true:false;\r\n        props.approveAuth(approve);\r\n    }, []);\r\n\r\n    const nextPage = (page: number) => {\r\n        page <= 1 ? props.getDecks(1, 4, false) :\r\n            props.getDecks(page, 4, false)\r\n    };\r\n\r\n    const myDecks = () => {\r\n        props.getDecks(1, 10, true)\r\n    };\r\n\r\n    const allDecks = () => {\r\n        props.getDecks(1, 10, false)\r\n    };\r\n\r\n\r\n    const decks = useSelector((state: AppStoreType) => state.decks.decks);\r\n\r\n\r\n    return <Profile decks={decks}\r\n                    nextPage={nextPage}\r\n                    myDecks={myDecks}\r\n                    allDecks={allDecks}\r\n                    approveAuth={props.approveAuth}\r\n                    getCards={props.getCards}\r\n                    deleteADeck={props.deleteADeck}\r\n                    addNewDeck={props.addNewDeck}\r\n                    updateDeck={props.updateDeck}/>\r\n};\r\n\r\nexport default connect(null, {\r\n    approveAuth,\r\n    getDecks,\r\n    getCards,\r\n    deleteADeck,\r\n    updateDeck,\r\n    addNewDeck\r\n})(ProfileContainer)","import React from \"react\";\r\nimport {Redirect, Route} from \"react-router\";\r\nimport SetNewPassContainer from \"../authorization/SetNewPass-page/SetNewPassContainer\";\r\nimport styles from \"../authorization/Auth.module.css\";\r\nimport {\r\n    CARDS_TABLE,\r\n    DECKS_TABLE,\r\n    FORGOT,\r\n    PLAY,\r\n    PROFILE,\r\n    REGISTER,\r\n    SET_NEW_PASS,\r\n    SIGN_IN,\r\n    UPLOAD_FILE\r\n} from \"../common/Constants\";\r\nimport SignInContainer from \"../authorization/SignIn-page/SignInContainer\";\r\nimport ForgotContainer from \"../authorization/Forgot-page/ForgotContainer\";\r\nimport RegisterContainer from \"../authorization/Register-page/RegisterContainer\";\r\nimport HeaderContainer from \"../authorization/Header/HeaderContainer\";\r\nimport DecksTableContainer from \"../settings/decks/DecksTableContainer\";\r\nimport CardsTableContainer from \"../settings/cards/CardsTableContainer\";\r\nimport GameFieldContainer from \"../play/GameFieldContainer\";\r\nimport UploadFile from \"../common/uploadFile/uploadFile\";\r\nimport ProfileContainer from \"../authorization/Profile-page/ProfileContainer\";\r\n\r\n\r\nconst Cards = () => {\r\n\r\n    return (\r\n        <>\r\n            <HeaderContainer/>\r\n\r\n            <div className={styles.wrapperOfAuth}>\r\n                <Route path={SIGN_IN} render={() => <SignInContainer/>}/>\r\n                <Route path={REGISTER} render={() => <RegisterContainer/>}/>\r\n                <Route path={FORGOT} render={() => <ForgotContainer/>}/>\r\n                <Route path={SET_NEW_PASS} render={() => <SetNewPassContainer/>}/>\r\n\r\n                <Route path={PROFILE} render={() => <ProfileContainer/>}/>\r\n                <Route path={DECKS_TABLE} render={() => <DecksTableContainer/>}/>\r\n                <Route path={CARDS_TABLE} render={() => <CardsTableContainer/>}/>\r\n                <Route path={PLAY} render={() => <GameFieldContainer/>}/>\r\n                <Route path={UPLOAD_FILE} render={() => <UploadFile/>}/>\r\n            </div>\r\n            <Redirect to={PROFILE}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Cards\r\n\r\n","import {REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../ui/common/Constants\";\r\nimport {\r\n    registerInitialState,\r\n    registerSuccessActionType,\r\n    setErrorRegisterPageActionType,\r\n    waitingForResponseActionType\r\n} from \"../../ui/authorization/types/registerTypes\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\n\r\nconst initialState: registerInitialState = {\r\n    email: '',\r\n    password: '',\r\n    loading: false,\r\n    error: false,\r\n    redirect: false\r\n\r\n}\r\n\r\nconst registerReducer = (state: registerInitialState = initialState, action: registerActionType): registerInitialState => {\r\n    switch (action.type) {\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                redirect: true\r\n            }\r\n        }\r\n        case WAITING_FOR_RESPONSE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case SET_ERROR_REGISTER_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n    }\r\n    return state\r\n}\r\ntype registerActionType = registerSuccessActionType | waitingForResponseActionType | setErrorRegisterPageActionType\r\nexport default registerReducer\r\n\r\nexport const setRegisterFormValues = (email: string | any, password: string, repeatPassword: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>) => {\r\n        if (password !== repeatPassword) {\r\n            let error = 'fields password and repeat password should be the same';\r\n            dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n        } else {\r\n            let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n            if (password.length <= 7 || !email.match(correctEmail)) {\r\n                let error = 'your email of password is not valid'\r\n                dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n            } else {\r\n                dispatch({type: WAITING_FOR_RESPONSE, loading: true})\r\n                await authApi.register(email, password)\r\n                try {\r\n                    dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                    dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect: true})\r\n                } catch {\r\n                    let error = 'your email is invalid or is already registered'\r\n                    dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                    dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport forgotReducer from \"./reducers/forgot-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport registerReducer from \"./reducers/register-reducer\";\r\nimport setNewPassReducer from \"./reducers/setNewPass-reducer\";\r\nimport signInReducer from \"./reducers/signIn-reducer\";\r\nimport decksTableReducer from \"./reducers/decksTable-reducer\";\r\nimport cardsTableReducer from \"./reducers/cardsTable-reducer\";\r\nimport searchingReducer from \"./reducers/searchReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    register: registerReducer,\r\n    setNewPass: setNewPassReducer,\r\n    signIn: signInReducer,\r\n    profile: profileReducer,\r\n    decks: decksTableReducer,\r\n    cards: cardsTableReducer,\r\n    search: searchingReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Cards from \"./ui/cards/Cards\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Cards/>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}