{"version":3,"sources":["ui/authorization/Auth.module.css","ui/authorization/Profile-page/Profile.module.css","ui/play/GameField.module.css","ui/common/Common.module.css","ui/settings/decks/DecksTable.module.css","ui/settings/Search/Search.module.css","ui/settings/cards/CardsTable.module.css","ui/authorization/Header/Header.module.css","ui/common/Title.tsx","ui/common/Input.tsx","ui/common/Button.tsx","ui/common/LInk.tsx","ui/authorization/SetNewPass-page/SetNewPass.tsx","ui/common/Constants.ts","dal/api.ts","bll/reducers/setNewPass-reducer.ts","ui/authorization/SetNewPass-page/SetNewPassContainer.tsx","ui/authorization/SignIn-page/SignIn.tsx","bll/reducers/signIn-reducer.ts","ui/authorization/SignIn-page/SignInContainer.tsx","ui/authorization/Forgot-page/Forgot.tsx","bll/reducers/forgot-reducer.ts","ui/authorization/Forgot-page/ForgotContainer.tsx","ui/authorization/Register-page/Register.tsx","ui/authorization/Register-page/RegisterContainer.tsx","ui/authorization/Header/Header.tsx","ui/authorization/Header/HeaderContainer.tsx","ui/settings/Search/Strip.tsx","bll/reducers/decksTable-reducer.ts","bll/reducers/cardsTable-reducer.ts","bll/reducers/searchReducer.ts","ui/settings/Search/Search.tsx","ui/settings/Search/SearchContainer.tsx","ui/settings/decks/DecksTable.tsx","ui/settings/decks/DecksTableContainer.tsx","ui/settings/cards/CardsTable.tsx","ui/settings/cards/CardsTableContainer.tsx","ui/play/GameField.tsx","ui/play/GameFieldContainer.tsx","ui/common/uploadFile/uploadFile.tsx","ui/authorization/Profile-page/Profile.tsx","bll/reducers/profile-reducer.ts","ui/authorization/Profile-page/ProfileContainer.tsx","ui/cards/Cards.tsx","bll/reducers/register-reducer.ts","bll/store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Title","props","title","Input","className","styles","forInput","onFocus","onBlur","value","onChange","placeholder","type","Button","forButton","typeOfButton","onClick","actionOfButton","disabled","nameOfButton","Link","forLinks","to","way","wordOfLink","SetNewPass","useState","newPass","setNewPass","repeatNewPass","setRepeatNewPass","token","useParams","toCleanField","toCleanErrorField","wrapperOfAuth","error","loading","e","currentTarget","setValueOfSetNewPassForm","REGISTER_SUCCESS","WAITING_FOR_RESPONSE","SET_ERROR_REGISTER_PAGE","instance","axios","create","baseURL","changeToken","newToken","localStorage","removeItem","setItem","authApi","email","password","rememberMe","post","then","response","id","data","_id","html1","html2","res","console","log","authToken","catch","fal","resetPasswordToken","decksApi","cardsPack","getItem","delete","name","minValue","maxValue","page","pageCount","privateDecks","user_id","decksFilter","get","deck","put","updatedCardsPack","cardsApi","card","updatedCard","filesApi","responseType","blob","Blob","file","myFile","initialState","setNewPassReducer","state","action","connect","repeatPassword","dispatch","getStore","a","length","useDispatch","useSelector","SignIn","setEmail","setPassword","setRememberMe","checked","setSignInFormValues","redirect","signInReducer","signIn","Forgot","toCleanError","setForgotPassword","emailApproved","forgotReducer","forgot","Register","setRegisterFormValues","cancelErrorPosition","setRepeatPassword","RegisterContainer","register","err","Header","wrapperOfHeader","login","tokenIsClear","HeaderContainer","auth","profile","Strip","style","display","justifyContent","flexWrap","margin","values","this","step","min","max","handleStrip","renderTrack","children","onMouseDown","onTouchStart","height","width","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","alignItems","boxShadow","toFixed","React","decks","grade","path","rating","shots","decksTableReducer","newCardsPack","filter","cardPacks","map","updateCardsDeck","getDecks","getState","search","theCards","cardsPack_id","question","answer","cardsTableReducer","newCard","cards","getCards","updateCards","searchingReducer","Search","setName","setValue","s","settings","input","strip","button","setSearchingNameSuccess","setSearchDeck","SearchContainer","DecksTable","setRating","update","setUpdate","changeName","setChangeName","updatedDeck","setUpdatedDeck","Table","addNewDeck","cells","key","onUpdateDeck","deleteADeck","updateCard","fieldOfUpdate","UpdatedDeckSuccess","updateDeck","userId","useEffect","CardsTable","setQuestion","setAnswer","setGrade","changeQuestion","setChangeQuestion","changeAnswer","setChangeAnswer","setUpdatedCard","addNewCard","onUpdateCard","deleteACard","updatedCardSuccess","result","deletedCard","GameField","setChecked","gameFieldWrapper","cardQuestion","textQuestion","cardAnswerOn","cardAnswerOff","textAnswer","nextCard","cardOfNumber","setCardOfNumber","sum","elem","reduce","acc","el","devideCard","Number","x","Math","random","totalP","i","next","superResult","indexOf","undefined","newGrade","floor","UploadFile","inRef","useRef","code","text","setText","setFile","setFileURL","fileData","setFileData","file64","setFile64","base64","src","alt","lastModified","size","accept","newFile","target","files","reader","FileReader","formData","FormData","window","URL","createObjectURL","append","onloadend","readAsDataURL","readAsText","current","click","Profile","toCards","setToCards","toPlay","setToPlay","numberOfPage","setNumberOfPage","profileWrapper","profilePart","allDecks","myDecks","paginationButtons","nextPage","appPart","decksWrapper","deckCover","decksName","profileReducer","approveAuth","approve","Cards","render","registerReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fd92e20d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfAuth\":\"Auth_wrapperOfAuth__3XmyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__3BVfL\",\"profilePart\":\"Profile_profilePart__83rjY\",\"appPart\":\"Profile_appPart__Vgrkl\",\"deckCover\":\"Profile_deckCover__1YuVd\",\"decksName\":\"Profile_decksName__1z24c\",\"decksWrapper\":\"Profile_decksWrapper__3mjA5\",\"paginationButtons\":\"Profile_paginationButtons__1RxpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardQuestion\":\"GameField_cardQuestion__1N3ex\",\"textQuestion\":\"GameField_textQuestion__2QdZd\",\"textAnswer\":\"GameField_textAnswer__3OGu-\",\"cardAnswerOn\":\"GameField_cardAnswerOn__32jJV\",\"gameFieldWrapper\":\"GameField_gameFieldWrapper__2IgWR\",\"cardAnswerOff\":\"GameField_cardAnswerOff__1Vzc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forLinks\":\"Common_forLinks__1l5g1\",\"forInput\":\"Common_forInput__3E9bg\",\"forButton\":\"Common_forButton__3VnRI\",\"modalDeleteCard\":\"Common_modalDeleteCard__1va3c\",\"filedOfApproveDelete\":\"Common_filedOfApproveDelete__12GEs\",\"updateCard\":\"Common_updateCard__1m0Wu\",\"fieldOfUpdate\":\"Common_fieldOfUpdate__331VH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckBorder\":\"DecksTable_DeckBorder__n3nip\",\"Table\":\"DecksTable_Table__2kI9u\",\"cells\":\"DecksTable_cells__1E7On\",\"updateCard\":\"DecksTable_updateCard__1yuSK\",\"fieldOfUpdate\":\"DecksTable_fieldOfUpdate__1A4nG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Search_settings__2FJo-\",\"button\":\"Search_button__k6Vd9\",\"input\":\"Search_input__2E0SQ\",\"strip\":\"Search_strip__3Gbiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckBorder\":\"CardsTable_DeckBorder__1BYyA\",\"Table\":\"CardsTable_Table__14Ccy\",\"cells\":\"CardsTable_cells__3dB0k\",\"updateCard\":\"CardsTable_updateCard__18pZt\",\"fieldOfUpdate\":\"CardsTable_fieldOfUpdate__2HBzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfHeader\":\"Header_wrapperOfHeader__3r8LB\"};","import React from \"react\";\r\n\r\ntype OwnPropsType = {\r\n    title: string\r\n}\r\n\r\nconst Title: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n    return(\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Title\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    value?: string,\r\n    checked?: boolean,\r\n    placeholder?: string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void, ////add '?' for\r\n    type: 'text' | 'password' | 'radio' | 'checkbox' | 'email' | 'file',\r\n    onBlur?: ()=>void,\r\n    onFocus?: (e: React.FocusEvent)=>void\r\n\r\n\r\n}\r\n\r\nconst Input: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    return (\r\n        <input className={styles.forInput}\r\n               onFocus={props.onFocus}\r\n               onBlur={props.onBlur}\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               placeholder={props.placeholder}\r\n               type={props.type}\r\n               />\r\n\r\n    )\r\n};\r\n\r\nexport default Input\r\n\r\n","import React from \"react\";\r\nimport styles from './Common.module.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype OwnPropsType = {\r\n    typeOfButton: \"button\" | \"submit\" | \"reset\" | undefined,\r\n    actionOfButton: ()=>void,\r\n    nameOfButton: string,\r\n    disabled?: boolean\r\n\r\n}\r\n\r\nconst Button: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <button\r\n            className={styles.forButton}\r\n            type={props.typeOfButton}\r\n            onClick={props.actionOfButton}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.nameOfButton}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    way: string,\r\n    wordOfLink: string\r\n}\r\nconst Link: React.FC<OwnPropsType> = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <NavLink className={styles.forLinks} to={props.way}>{props.wordOfLink}</NavLink>\r\n    )\r\n};\r\n\r\nexport default Link\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {useParams} from \"react-router\";\r\n\r\ntype OwnPropsType = {\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined) => void\r\n    error: string\r\n    loading: boolean | null\r\n    disabled: boolean\r\n    toCleanErrorField: ()=>void\r\n}\r\n\r\nconst SetNewPass: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [newPass, setNewPass] = useState('');\r\n    const [repeatNewPass, setRepeatNewPass] = useState('');\r\n    const {token} = useParams();\r\n\r\n    const valueOfInputNewPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPass(e.currentTarget.value)\r\n    };\r\n    const valueOfInputRepeatPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatNewPass(e.currentTarget.value)\r\n    };\r\n    const sendToCheckPassword = () => {\r\n        props.setValueOfSetNewPassForm(newPass, repeatNewPass, token);\r\n        setNewPass('');\r\n        setRepeatNewPass('');\r\n    };\r\n    const toCleanField = () =>{\r\n        props.toCleanErrorField()\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='Set New Password'/>\r\n            {props.error?<div>{props.error}</div>:null}\r\n            {props.loading?<div>Loading...</div>:null}\r\n            <div><Input placeholder={'new pass'}\r\n                        type={'password'}\r\n                        value={newPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputNewPass}/></div>\r\n            <div><Input placeholder={'repeat pass'}\r\n                        type={'password'}\r\n                        value={repeatNewPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputRepeatPass}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         disabled={props.disabled}\r\n                         actionOfButton={sendToCheckPassword\r\n                         } nameOfButton='Set new password'/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SetNewPass\r\n","//constants for paths\r\n\r\nexport const SIGN_IN = '/sign-in';\r\nexport const REGISTER = '/register';\r\nexport const FORGOT = '/forgot';\r\nexport const SET_NEW_PASS = '/set-new-pass/:token';\r\nexport const PROFILE = '/profile';\r\n\r\nexport const CARDS_TABLE = '/cards-table';\r\nexport const DECKS_TABLE = '/decks-table';\r\nexport const PLAY = '/play';\r\nexport const UPLOAD_FILE = '/upload-file';\r\n\r\n//constants for reducers\r\n\r\nexport const REGISTER_SUCCESS = 'auth/register/REGISTER-SUCCESS';\r\nexport const WAITING_FOR_RESPONSE = 'auth/register/WAITING-FOR-RESPONSE';\r\nexport const SET_ERROR_REGISTER_PAGE = 'auth/register/SET-ERROR-REGISTER-PAGE';\r\n\r\n\r\n//constants for SignIn-page\r\nexport const SET_LOADING_DATA = 'SET-LOADING-DATA';\r\nexport const SET_SIGN_IN_FORM_VALUES = 'SET-SIGN-IN-FORM-VALUES';\r\nexport const IS_TOKEN_HAS = 'IS-TOKEN-HAS';\r\nexport const SET_ERROR_SIGN_IN_PAGE = 'SET-ERROR-SIGN-IN-PAGE';\r\nexport const REDIRECT_OFF = 'REDIRECT-OFF';\r\n\r\n//constants for Forgot-page\r\nexport const SET_LOADING_DATA_FORGOT_PAGE = 'SET-LOADING-DATA-FORGOT-PAGE';\r\nexport const SET_VALUE_ERROR_FORGOT_PAGE = 'SET-VALUE-ERROR-FORGOT-PAGE';\r\nexport const RESTORE_FORGOT_PASSWORD = 'RESTORE-FORGOT-PASSWORD';\r\n\r\n//constants for SetNewPass-page\r\nexport const SET_LOADING_VALUE = 'SET-LOADING-VALUE';\r\nexport const SET_NEW_TOKEN = 'SET-NEW-TOKEN';\r\nexport const SHOW_ERROR = 'SHOW-ERROR';\r\nexport const TO_CLEAN_ERROR_FIELD = 'TO-CLEAN-ERROR-FIELD';\r\n\r\n//constants for DecksTable\r\n\r\nexport const ADD_NEW_DECK = 'ADD-NEW-DECK';\r\nexport const DELETE_DECK = 'DELETE-DECK';\r\nexport const GET_DECKS = 'GET-DECKS';\r\nexport const UPDATE_DECK = 'UPDATE-DECK';\r\n\r\n//constants for CardsTable\r\n\r\nexport const ADD_NEW_CARD = 'ADD-NEW-CARD';\r\nexport const DELETE_CARD = 'DELETE-CARD';\r\nexport const GET_CARDS = 'GET-CARDS';\r\nexport const UPDATE_CARD = 'UPDATE-CARD';\r\n\r\n//constants for ProfilePage\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN-SUCCESS';\r\n\r\n//constants for UploadFile\r\n\r\n//constants for search reducer\r\n\r\nexport const SET_SEARCHING_NAME = 'reducer/SET-SEARCHING-NAME'\r\n\r\n\r\n\r\n","import axios from 'axios'\r\nimport {CardsPackType, newCardPackType} from \"../ui/settings/decks/decksType\";\r\nimport {addCardType, CardsType} from \"../ui/settings/cards/cardsType\";\r\n\r\nconst instance = axios.create({\r\n    // withCredentials: true,\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n    //baseURL: \"https://dry-forest-56016.herokuapp.com/\",\r\n});\r\n\r\nexport const changeToken = (newToken: string) => {\r\n    localStorage.removeItem('auth-token');\r\n    localStorage.setItem('auth-token', newToken);\r\n};\r\n\r\nexport const changUserId = (id: string) =>{\r\n    localStorage.removeItem('cardsPack_id');\r\n    localStorage.setItem('cardsPack_id', id);\r\n};\r\n\r\nexport const authApi = {\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(\"auth/login\", {email, password, rememberMe})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                changUserId(response.data._id);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    forgotPass(email: string, html1: string, html2: string) {\r\n        return instance.post('auth/forgot', {email, html1, html2})\r\n            .then(res => {\r\n                return console.log(res)\r\n            })\r\n\r\n    },\r\n\r\n    register(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password})\r\n            .then(res => res)\r\n    },\r\n\r\n    authMe(authToken: string | null) {\r\n        return instance.post('auth/me', {token: authToken})\r\n            .then(response => {\r\n                console.log(response.data);\r\n                changeToken(response.data.token);\r\n            })\r\n            .catch((fal) => {\r\n                return fal\r\n            })\r\n    },\r\n\r\n    setNewPass(resetPasswordToken: string | undefined, password: string) {\r\n        return instance.post('auth/set-new-password', {resetPasswordToken, password})\r\n            .then(res => res)\r\n    }\r\n};\r\n\r\nexport const decksApi = {\r\n\r\n    addDeck(cardsPack: newCardPackType, token: string | null) {\r\n        return instance.post('cards/pack', {cardsPack, token})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n    deleteDeck(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.delete(`cards/pack?token=${token}&id=${id}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                changeToken(response.data.token);\r\n                return response\r\n            })\r\n\r\n    },\r\n\r\n    getDeck( name: string, minValue: number, maxValue: number,\r\n             page: number, pageCount: number, privateDecks: boolean)\r\n    {\r\n        const token = localStorage.getItem('auth-token');\r\n        const user_id = localStorage.getItem('cardsPack_id');\r\n        const decksFilter = privateDecks?`&user_id=${user_id}`:'';\r\n        return instance.get(\r\n            `cards/pack?token=${token}` +\r\n            (`&min=${minValue}&max=${maxValue}` +\r\n                name && `&packName=${name}` +\r\n                `&pageCount=${pageCount}\r\n                &page=${page}`\r\n            +decksFilter)\r\n    )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n    updateDeck(deck: CardsPackType) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.put('cards/pack', {cardsPack: deck, token})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data.updatedCardsPack\r\n            })\r\n    }\r\n\r\n};\r\n\r\nexport const cardsApi = {\r\n\r\n    addCard(card: addCardType) {\r\n        return instance.post('cards/card', card)\r\n            .then(response => {\r\n              /*  localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);*/\r\n              changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n\r\n    },\r\n\r\n    deleteCard(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.delete(`cards/card?token=${token}&id=${id}`)\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    getCards(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        console.log(id);\r\n        return instance.get(`cards/card?cardsPack_id=${id}&token=${token}`)\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n\r\n                localStorage.removeItem('cardsPack_id');\r\n                localStorage.setItem('cardsPack_id', id);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    updateCard(card: CardsType) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.put('cards/card', {card, token})\r\n            .then(response => {\r\n                changeToken(response.data.token);\r\n                return response.data.updatedCard\r\n            })\r\n    }\r\n\r\n};\r\n\r\nexport const filesApi = {\r\n\r\n    getFile() {\r\n        return instance.get('/file', {responseType: 'blob'})\r\n            .then(({data}) => {\r\n\r\n                const blob = new Blob([data], {type: 'image/jpeg'});\r\n                console.log(blob);\r\n\r\n                return data\r\n            })\r\n    },\r\n\r\n    postFile(file: string) {\r\n        return instance.post('/file', {myFile: file})\r\n            .then(response=> {\r\n                return response.data\r\n            })\r\n    }\r\n};\r\n\r\n","\r\nimport {SET_LOADING_VALUE, SET_NEW_TOKEN, SHOW_ERROR, TO_CLEAN_ERROR_FIELD} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: initialStateType = {\r\n    error: '',\r\n    token: '',\r\n    loading: null,\r\n    disabled: false\r\n};\r\n\r\ntype initialStateType = {\r\n    error: string | null,\r\n    token: string | undefined\r\n    loading: boolean | null\r\n    disabled: boolean\r\n}\r\n\r\nconst setNewPassReducer = (state = initialState, action: any ) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case SHOW_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case SET_NEW_TOKEN: {\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case SET_LOADING_VALUE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case TO_CLEAN_ERROR_FIELD: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n\r\n};\r\n\r\n\r\n//thunks\r\n\r\nexport const setValueOfSetNewPassForm = (password: string, repeatPassword: string, token: string | undefined) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n        if (password === repeatPassword && password.length > 7) {\r\n            dispatch({type: SET_LOADING_VALUE, loading: true, disabled: true});\r\n              await authApi.setNewPass(token, password);\r\n                try  {\r\n                    dispatch({type: SET_NEW_TOKEN, token: token});\r\n                    dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                }\r\n                catch(e) {\r\n                        console.log(e.response);\r\n                        dispatch({type: SHOW_ERROR, error: e.response.data.error});\r\n                        dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                    }\r\n        } else {\r\n            dispatch({\r\n                type: SHOW_ERROR,\r\n                error: 'Incorrect Password! Password should have min 8 values and each one fields should be same!'\r\n            })\r\n        }\r\n    };\r\n\r\n\r\nexport default setNewPassReducer","import React from \"react\";\r\nimport SetNewPass from \"./SetNewPass\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {TO_CLEAN_ERROR_FIELD} from \"../../common/Constants\";\r\nimport {setValueOfSetNewPassForm} from \"../../../bll/reducers/setNewPass-reducer\";\r\n\r\n\r\ntype OwnPropsType={\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined)=>void\r\n}\r\nconst SetNewPassContainer: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.setNewPass);\r\n\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: TO_CLEAN_ERROR_FIELD, error: null})\r\n    };\r\n\r\n\r\n    return (\r\n        <SetNewPass\r\n            setValueOfSetNewPassForm={props.setValueOfSetNewPassForm}\r\n            error={state.error}\r\n            loading={state.loading}\r\n            disabled={state.disabled}\r\n            toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setValueOfSetNewPassForm})(SetNewPassContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Link from \"../../common/LInk\";\r\nimport Button from \"../../common/Button\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean) => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    toCleanErrorField: () => void\r\n}\r\n\r\n\r\nconst SignIn: React.FC<OwnPropsType> = (props) => {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    //пример UseSelector Достаем данные из store\r\n    //const valueOfInputEmail = useSelector((state: AppStoreType) => state.signIn.email);\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setEmail(e.currentTarget.value)\r\n    };\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setPassword(e.currentTarget.value)\r\n    };\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n       !rememberMe ? setRememberMe(true) : setRememberMe(false)\r\n    };\r\n\r\n    const sendSignInFormValues = () => {\r\n            props.setSignInFormValues(email, password, rememberMe)\r\n    };\r\n    const toCleanErrorField = () => {\r\n      props.toCleanErrorField()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'sign-in'}/>\r\n            {props.loading ? <div>loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input type=\"text\"\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changeEmail}/></div>\r\n            <div><Input type=\"password\"\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changePassword}/></div>\r\n            <div><Link way={'/forgot'}\r\n                       wordOfLink={'Forgot password?'}/></div>\r\n            <div><Input type={\"checkbox\"}\r\n                        checked={rememberMe}\r\n                        onChange={changeRememberMe}/>Remember Me\r\n            </div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={sendSignInFormValues}\r\n                         disabled={props.disabled}\r\n                         nameOfButton='Sign In'/></div>\r\n            <div><Link way={'/register'} wordOfLink='Registration'/></div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default SignIn\r\n","\r\nimport {\r\n    IS_TOKEN_HAS, REDIRECT_OFF,\r\n    SET_ERROR_SIGN_IN_PAGE,\r\n    SET_LOADING_DATA,\r\n    SET_SIGN_IN_FORM_VALUES\r\n} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: signInitialStateType = {\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false,\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    token: '',\r\n    redirect: false,\r\n    authToken: ''\r\n};\r\n\r\nexport type signInitialStateType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean,\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    token: string\r\n    redirect: false,\r\n    authToken?:string\r\n}\r\n\r\nconst signInReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case SET_SIGN_IN_FORM_VALUES: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                rememberMe: action.rememberMe,\r\n                token: action.token,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_LOADING_DATA: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                disabled: action.disabled,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_ERROR_SIGN_IN_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n\r\n            }\r\n        }\r\n        case IS_TOKEN_HAS: {\r\n            return {\r\n                ...state,\r\n                authToken: action.authToken\r\n            }\r\n        }\r\n        case REDIRECT_OFF:{\r\n            return {\r\n                ...state,\r\n                redirect: false\r\n            }\r\n        }\r\n            default: return state\r\n    }\r\n\r\n};\r\n\r\n//thunks\r\n\r\nexport const setSignInFormValues = (email: string, password: string, rememberMe: boolean) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n    dispatch({type: SET_LOADING_DATA, loading: true, disabled: true});\r\n    await authApi.login(email, password, rememberMe)\r\n        .then(res => {\r\n            dispatch({type: SET_LOADING_DATA, loading: false, disabled: false});\r\n            dispatch({\r\n                type: SET_SIGN_IN_FORM_VALUES,\r\n                email: res.email,\r\n                password: password,\r\n                rememberMe: res.rememberMe,\r\n                token: res.token,\r\n                redirect: true\r\n            });\r\n            localStorage.setItem('auth-token', res.token);\r\n            localStorage.setItem('user-id', res._id);\r\n\r\n            const authToken = localStorage.getItem('auth-token');\r\n            dispatch({type: IS_TOKEN_HAS, authToken})\r\n            //console.log(authToken)\r\n\r\n        })\r\n        .catch(fal => {\r\n                console.log(fal.response);\r\n                const error = fal.response.data.error;\r\n                dispatch({type: SET_LOADING_DATA, loading: false, disabled: false, redirect: false});\r\n                dispatch({type: SET_ERROR_SIGN_IN_PAGE, error})\r\n            }\r\n        );\r\n};\r\n\r\nexport default signInReducer\r\n","import React from \"react\";\r\nimport SignIn from \"./SignIn\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {SET_ERROR_SIGN_IN_PAGE} from \"../../common/Constants\";\r\nimport {setSignInFormValues} from \"../../../bll/reducers/signIn-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean)=>void\r\n}\r\nconst SignInContainer: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector((state: AppStoreType) => state.signIn);\r\n    //const disable = useSelector((state: AppStoreType) => state.signIn.disabled)\r\n\r\n\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: SET_ERROR_SIGN_IN_PAGE, error: null})\r\n    };\r\n    return (\r\n\r\n        state.redirect ? <Redirect to='/profile'/> :\r\n            <SignIn setSignInFormValues={props.setSignInFormValues}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}\r\n                    toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setSignInFormValues})(SignInContainer)\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Input from \"../../common/Input\";\r\nimport styles from '../Auth.module.css'\r\n\r\ntype OwnPropsType = {\r\n    setForgotPassword: (email: string) => void\r\n    toCleanError: () => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n}\r\nconst Forgot: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const valueOfInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    };\r\n    const restoreForgotPassword =  () => {\r\n         props.setForgotPassword(email);\r\n        setEmail('')\r\n    };\r\n    const toCleanError = () => {\r\n         props.toCleanError()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='forgot'/>\r\n            {props.loading ? <div>Loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input placeholder='email address'\r\n                        type={\"text\"}\r\n                        value={email}\r\n                        onBlur={toCleanError}\r\n                        onFocus={toCleanError}\r\n                        onChange={valueOfInputEmail}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={restoreForgotPassword}\r\n                         nameOfButton='Send email'\r\n                         disabled={props.disabled}/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Forgot","import {\r\n    RESTORE_FORGOT_PASSWORD,\r\n    SET_LOADING_DATA_FORGOT_PAGE,\r\n    SET_VALUE_ERROR_FORGOT_PAGE\r\n} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {authApi} from \"../../dal/api\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    emailApproved: false\r\n};\r\n\r\nconst forgotReducer = (state = initialState, action: any) =>{\r\n   switch (action.type) {\r\n       case RESTORE_FORGOT_PASSWORD: {\r\n         return {\r\n             ...state, email: action.email\r\n         }\r\n       }\r\n       case SET_LOADING_DATA_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               loading: action.loading,\r\n               disabled: action.disabled,\r\n               emailApproved: action.emailApproved\r\n           }\r\n       }\r\n       case SET_VALUE_ERROR_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               error: action.error\r\n           }\r\n       }\r\n           default: return state\r\n   }\r\n\r\n};\r\n\r\nconst html1 = \"<a href=http://localhost:3000/template-typescript#/set-new-pass/\";\r\nconst html2 = \">reset-password-link</a>\";\r\n\r\n//thunks\r\nexport const setForgotPassword = (email: string) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n        dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: true, disabled: true});\r\n        try {\r\n            const data = await authApi.forgotPass(email, html1, html2);\r\n            console.log(data);\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false, emailApproved: true});\r\n            dispatch({type: RESTORE_FORGOT_PASSWORD, email})\r\n        } catch (e) {\r\n            console.log(e.response.data.error);\r\n            const error = e.response.data.error;\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: error});\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false})\r\n        }\r\n\r\n    };\r\n\r\nexport const toCleanError = () =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n        try {\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: null})\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\nexport default forgotReducer","import React from \"react\";\r\nimport Forgot from \"./Forgot\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {setForgotPassword, toCleanError} from \"../../../bll/reducers/forgot-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    setForgotPassword: (email: string)=>void\r\n    toCleanError: ()=>void\r\n}\r\n\r\nconst ForgotContainer: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const state = useSelector((state: AppStoreType) => state.forgot);\r\n\r\n    return (\r\n        !state.emailApproved ?\r\n            <Forgot setForgotPassword={props.setForgotPassword}\r\n                    toCleanError={props.toCleanError}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}/> :\r\n            <Redirect to='/set-new-pass/:token'/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setForgotPassword, toCleanError})(ForgotContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {SIGN_IN} from \"../../common/Constants\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\ntype OwnPropsType = {\r\n    setRegisterFormValues: (email: string, password: string, repeatPassword: string) => void,\r\n    loading: boolean,\r\n    error:boolean,\r\n    cancelErrorPosition:()=>void\r\n}\r\nconst Register: React.FC<OwnPropsType> = ({setRegisterFormValues, loading, error, cancelErrorPosition}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    console.log(setRegisterFormValues)\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const changeRepeatPassword = (e: ChangeEvent<HTMLInputElement>) => setRepeatPassword(e.currentTarget.value)\r\n\r\n    const toCleanErrorField = () => {\r\n        return cancelErrorPosition()\r\n    }\r\n\r\n    const sendSignInFormValues = () => setRegisterFormValues(email, password, repeatPassword)\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'Register'}/>\r\n            {loading && <div>wait</div>}\r\n            {error && <label >{error}</label>}\r\n                <div><Input placeholder={'email'}\r\n                            type={\"email\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeEmail}/>\r\n                </div>\r\n                <div><Input placeholder={'password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changePassword}/>\r\n                </div>\r\n                <div><Input placeholder={'repeat password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeRepeatPassword}/>\r\n                </div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={sendSignInFormValues} nameOfButton={'Register'}/>\r\n            <Link way={SIGN_IN} wordOfLink='Sign In'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PROFILE, REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../common/Constants\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport Register from \"./Register\";\r\nimport {Redirect} from \"react-router\";\r\nimport {authApi} from \"../../../dal/api\";\r\n\r\n\r\nconst RegisterContainer: React.FC = (props) => {\r\n    console.log(props)\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.register)\r\n\r\n    const setRegisterFormValues = (email: any, password: string, repeatPassword: string) => {\r\n        if (password !== repeatPassword) {\r\n            let error = 'fields password and repeat password should be the same'\r\n            dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n        } else {\r\n            let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n            if (password.length <= 7 && email !== correctEmail) {\r\n                let error = 'your email of password is not valid'\r\n                dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n            } else {\r\n                dispatch({type: WAITING_FOR_RESPONSE, loading: true})\r\n                return authApi.register(email, password)\r\n                    .then(res => {\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect:true})\r\n                    })\r\n                    .catch(err => {\r\n                        let error = 'your email is invalid or is already registered'\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n                    })\r\n            }\r\n        }\r\n    };\r\n    const cancelErrorPosition = () => dispatch({type: SET_ERROR_REGISTER_PAGE, error: null})\r\n    return (\r\n        <>\r\n            {state.redirect && <Redirect to={PROFILE}/>}\r\n            <Register setRegisterFormValues={setRegisterFormValues}\r\n                      loading={state.loading}\r\n                      error={state.error}\r\n                      cancelErrorPosition={cancelErrorPosition}/>\r\n        </>\r\n    )\r\n};\r\nexport default RegisterContainer\r\n","import React from \"react\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from './Header.module.css'\r\nimport {DECKS_TABLE, FORGOT, PROFILE, REGISTER, SET_NEW_PASS, SIGN_IN, UPLOAD_FILE} from \"../../common/Constants\";\r\nimport Button from \"../../common/Button\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    login: boolean,\r\n    tokenIsClear: ()=>void\r\n}\r\nconst Header: React.FC<OwnPropsType> = (props) => {\r\n\r\n  const tokenIsClear = () =>{\r\n      props.tokenIsClear();\r\n  };\r\n\r\n\r\n    return (\r\n        <div className={styles.wrapperOfHeader}>\r\n            <Link way={SIGN_IN} wordOfLink={'sign-in'}/>\r\n            <Link way={REGISTER} wordOfLink={'register'}/>\r\n            <Link way={FORGOT} wordOfLink={'forgot'}/>\r\n            <Link way={SET_NEW_PASS} wordOfLink={'set-new-pass'}/>\r\n            <Link way={PROFILE} wordOfLink={'profile'}/>\r\n            <Link way={UPLOAD_FILE} wordOfLink={'file'}/>\r\n            <Link way={DECKS_TABLE} wordOfLink={'decks'}/>\r\n            {/*<Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>*/}\r\n           { props.login? <Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>:null}\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default Header\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {LOGIN_SUCCESS, REDIRECT_OFF} from \"../../common/Constants\";\r\n\r\nconst HeaderContainer: React.FC = () =>{\r\n\r\n\r\n\r\n    const auth = useSelector((state:AppStoreType)=>state.profile.login);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    let tokenIsClear = () => {\r\n        localStorage.removeItem('auth-token');\r\n        localStorage.removeItem('user-id');\r\n        dispatch({type: LOGIN_SUCCESS, login: false});\r\n        dispatch({type: REDIRECT_OFF})\r\n\r\n    };\r\n    return(\r\n        <Header login={auth} tokenIsClear={tokenIsClear}/>\r\n    )\r\n};\r\n\r\nexport default HeaderContainer\r\n","import * as React from 'react';\r\nimport { Range, getTrackBackground } from \"react-range\";\r\n\r\nconst STEP = 1;\r\nconst MIN = 0;\r\nconst MAX = 200;\r\ntype OwnPropsType = {\r\n    handleStrip:(values:number[])=>void,\r\n    values: number[]\r\n}\r\n\r\nclass Strip extends React.Component<OwnPropsType> {\r\n    // state = {\r\n    //     [0, 50] values:\r\n    // };\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                    margin: \"0 2em\"\r\n                }}\r\n            >\r\n                <Range\r\n                    values={this.props.values}\r\n                    step={STEP}\r\n                    min={MIN}\r\n                    max={MAX}\r\n                    onChange={values => this.props.handleStrip( values )}\r\n                    renderTrack={({ props, children }) => (\r\n                        <span\r\n                            onMouseDown={props.onMouseDown}\r\n                            onTouchStart={props.onTouchStart}\r\n                            style={{\r\n                                ...props.style,\r\n                                height: \"36px\",\r\n                                display: \"flex\",\r\n                                width: \"100%\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                ref={props.ref}\r\n                                style={{\r\n                                    height: \"5px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: \"4px\",\r\n                                    background: getTrackBackground({\r\n                                        values: this.props.values,\r\n                                        colors: [\"#000\", \"#ccc\", \"#000\"],\r\n                                        min: MIN,\r\n                                        max: MAX\r\n                                    }),\r\n                                    alignSelf: \"center\"\r\n                                }}\r\n                            >\r\n                                {children}\r\n                            </div>\r\n                        </span>\r\n                    )}\r\n                    renderThumb={({ props, isDragged }) => (\r\n                        <div\r\n                            {...props}\r\n                            style={{\r\n                                ...props.style,\r\n                                height: \"20px\",\r\n                                width: \"20px\",\r\n                                borderRadius: \"4px\",\r\n                                backgroundColor: \"#FFF\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                boxShadow: \"0px 2px 6px #AAA\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    height: \"16px\",\r\n                                    width: \"5px\",\r\n                                    backgroundColor: isDragged ? \"#000\" : \"#CCC\"\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                />\r\n                <label style={{ margin: \"10px\", }} id=\"output\">\r\n                    {this.props.values[0].toFixed(1)}\r\n                </label>\r\n                <label style={{ margin: \"10px\" }} id=\"output\">\r\n                    {this.props.values[1].toFixed(1)}\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Strip\r\n","import {ADD_NEW_DECK, DELETE_DECK, GET_DECKS, UPDATE_DECK} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {decksApi} from \"../../dal/api\";\r\nimport {CardsPackType} from \"../../ui/settings/decks/decksType\";\r\n\r\n\r\nconst initialState = {\r\n    decks: [\r\n        {\r\n            grade: 0,\r\n            name: \"7777\",\r\n            path: \"/def\",\r\n            rating: 0,\r\n            shots: 0,\r\n            type: \"pack\",\r\n            _id: \"5ebd1e6d5af2c800049590de\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst decksTableReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_DECK:\r\n            return {\r\n                ...state,\r\n                decks: [...state.decks, action.newCardsPack]\r\n            };\r\n\r\n        case DELETE_DECK:\r\n            return {\r\n                ...state, decks: state.decks.filter(deck => deck._id !== action._id)\r\n            };\r\n\r\n        case GET_DECKS: {\r\n            return {\r\n                ...state, decks: action.cardPacks\r\n            }\r\n        }\r\n\r\n        case UPDATE_DECK:\r\n            return {\r\n                ...state, decks: state.decks.map(deck => {\r\n                    return deck._id === action.updateCardsDeck._id ? action.updateCardsDeck : deck\r\n                })\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default decksTableReducer\r\n\r\n////////////////////////////////////////thunks\r\n\r\nexport const addNewDeck = (name: string, rating: number) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const token = localStorage.getItem('auth-token');\r\n        const userId = localStorage.getItem('user-id') as string;\r\n\r\n        const response = await decksApi.addDeck({name: name, user_id: userId, rating: rating}, token);\r\n\r\n        const newCardsPack = response.newCardsPack;\r\n        dispatch({type: ADD_NEW_DECK, newCardsPack});\r\n        console.log(response);\r\n        try {\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n\r\nexport const deleteADeck = (_id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        await decksApi.deleteDeck(_id);\r\n        dispatch({type: DELETE_DECK, _id});\r\n        try {\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n\r\nexport const getDecks = (page: number, pageCount: number, privateDecks: boolean) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: () => AppStoreType) => {\r\n\r\n\r\n        const {name} =  getState().search;\r\n        const {minValue, maxValue} = getState().search;\r\n\r\n\r\n        const data = await decksApi.getDeck(name, minValue, maxValue,\r\n            page, pageCount, privateDecks\r\n        );\r\n\r\n        const cardPacks = data.cardPacks;\r\n        dispatch({type: GET_DECKS, cardPacks});\r\n        try {\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n\r\nexport const updateDeck = (deck: CardsPackType) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const updateCardsDeck = await decksApi.updateDeck(deck);\r\n        dispatch({type: UPDATE_DECK, updateCardsDeck});\r\n        try {\r\n        } catch (e) {\r\n            console.log(e.data)\r\n        }\r\n    };\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {ADD_NEW_CARD, DELETE_CARD, GET_CARDS, UPDATE_CARD} from \"../../ui/common/Constants\";\r\nimport {cardsApi} from \"../../dal/api\";\r\nimport {CardsType} from \"../../ui/settings/cards/cardsType\";\r\n\r\nconst initialState = {\r\n    theCards: [\r\n        {\r\n            cardsPack_id: '5ebe22ad7b58e90004b4b1e0',\r\n            _id: '',\r\n            question: 'something 1',\r\n            answer: 'something else 1',\r\n            grade: 3,\r\n            shots: 1,\r\n            token: ''\r\n        },\r\n    ],\r\n};\r\n\r\ntype IState = typeof initialState\r\n\r\nconst cardsTableReducer = (state = initialState, action: any): IState => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_CARD:\r\n            return {\r\n                ...state,\r\n                theCards: [...state.theCards, action.newCard]\r\n            };\r\n\r\n        case GET_CARDS:\r\n            return {\r\n                ...state, theCards: action.cards\r\n            };\r\n\r\n        case UPDATE_CARD:\r\n            return {\r\n                ...state, theCards: state.theCards.map(card => {\r\n                    return card._id === action.updatedCard._id ? action.updatedCard : card\r\n                })\r\n            };\r\n\r\n        case DELETE_CARD:\r\n            return {\r\n                ...state, theCards: state.theCards.filter(card => card._id !== action._id)\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default cardsTableReducer\r\n\r\n/////////////////////////////////thunks\r\n\r\nexport const addNewCard = (question: string, answer: string, grade: number) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n        const token = localStorage.getItem('auth-token');\r\n        const cardsPack_id = localStorage.getItem('cardsPack_id');\r\n\r\n        const result = await cardsApi.addCard({\r\n            card: {cardsPack_id: cardsPack_id, question, answer, grade},\r\n            token: token\r\n        });\r\n        console.log(result);\r\n        const newCard = {...result.newCard, token: result.token};\r\n        dispatch({type: ADD_NEW_CARD, newCard});\r\n        try {\r\n            console.log(initialState.theCards);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    };\r\n\r\nexport const deleteACard = (id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const data = await cardsApi.deleteCard(id);\r\n        const cardsPack_id = data.deletedCard._id;\r\n        dispatch({type: DELETE_CARD, _id: cardsPack_id});\r\n        try {\r\n            console.log(initialState.theCards);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\nexport const getCards = (id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n        const data = await cardsApi.getCards(id);\r\n        const cards = data.cards;\r\n        const cardsPack_id = localStorage.getItem('cardsPack_id');\r\n        dispatch({type: GET_CARDS, cards, cardsPack_id});\r\n        try {\r\n            console.log(initialState.theCards);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\nexport const updateCards = (card: CardsType) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const updatedCard = await cardsApi.updateCard(card);\r\n        dispatch({type: UPDATE_CARD, updatedCard});\r\n        try {\r\n            console.log(initialState.theCards);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n","import {getDecks} from \"./decksTable-reducer\";\r\nimport {SET_SEARCHING_NAME} from \"../../ui/common/Constants\";\r\nimport {searchInitialState, setSearchingNameSuccessActionType} from \"../../ui/authorization/types/searchReducerTypes\";\r\nimport {getCards} from \"./cardsTable-reducer\";\r\n\r\nconst initialState: searchInitialState = {\r\n    name: '',\r\n    minValue: 0,\r\n    maxValue: 4\r\n};\r\n\r\n\r\nconst searchingReducer = (state:any = initialState, action: any): any => {\r\n\r\n    switch (action.type) {\r\n        case SET_SEARCHING_NAME: {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                minValue: action.minValue,\r\n                maxValue: action.maxValue\r\n            }\r\n        }\r\n            case 'SET_SEARCHING_NAME_CARD_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                minValue:action.minValue,\r\n                maxValue:action.maxValue\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\nexport default searchingReducer\r\n\r\n\r\n// type ThunkType = ThunkAction<void, searchingInitialState, unknown, setSearchingNameSuccessActionType>\r\n// type ThunkDispatchType = ThunkDispatch<searchingInitialState, unknown, setSearchingNameSuccessActionType>\r\n\r\n//action creators\r\n\r\nexport const setSearchingNameSuccess = (name: string, minValue: number, maxValue: number): setSearchingNameSuccessActionType =>\r\n    ({type: SET_SEARCHING_NAME, name, minValue, maxValue})\r\nexport const setSearchingNameCardSuccess = (id:string, name: string, minValue: number, maxValue: number): any =>\r\n    ({type: 'SET_SEARCHING_NAME_CARD_SUCCESS', id, name, minValue, maxValue})\r\n\r\n//thunks\r\n\r\nexport const setSearchDeck = (name: string, minValue: number, maxValue: number) => (dispatch: any) => {\r\n    dispatch(setSearchingNameSuccess(name, minValue, maxValue))\r\n    dispatch(getDecks(1,4, false))\r\n}\r\nexport const setSearchCard = (id:string, name: string, minValue: number, maxValue: number) => (dispatch: any) => {\r\n    debugger\r\n    dispatch(setSearchingNameCardSuccess(id, name, minValue, maxValue))\r\n    dispatch(getCards(id))\r\n    // })\r\n}\r\n","import React from \"react\";\r\nimport {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport Input from \"../../common/Input\";\r\nimport Strip from \"./Strip\";\r\nimport s from './Search.module.css'\r\nimport Button from \"../../common/Button\";\r\nimport {setSearchDeck} from \"../../../bll/reducers/searchReducer\";\r\n\r\ntype OwnPropsType = {\r\n    minValue: number,\r\n    maxValue: number\r\n}\r\n\r\nconst Search: React.FC<OwnPropsType> = ({minValue, maxValue}) => {\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [values, setValue] = useState<number[]>([minValue, maxValue])\r\n    const handleStrip = (values: number[]) => {\r\n        setValue(values)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    // const search = (minValue:number, maxValue:number) => dispatch(setRangeValue(minValue, maxValue))\r\n    const search = () => dispatch(setSearchDeck(name, values[0], values[1]))\r\n    //(name:string, minValue:number, maxValue:number) => dispatch(setSearchName((name, minValue, maxValue))\r\n\r\n    return (\r\n        <div className={s.settings}>\r\n            <div className={s.input}><Input type='text' onChange={e => setName(e.currentTarget.value)}/></div>\r\n            <div className={s.strip}><Strip values={values} handleStrip={handleStrip}/></div>\r\n            <div className={s.button}><Button actionOfButton={search} nameOfButton='Search' typeOfButton=\"button\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search\r\n","import React from \"react\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport Search from \"./Search\";\r\n\r\n\r\nconst SearchContainer = () => {\r\n\r\n\r\n    const minValue = useSelector((state:any) => state.search.minValue)\r\n    const maxValue = useSelector((state:any) => state.search.maxValue)\r\n\r\n    return (\r\n        <Search minValue={minValue} maxValue={maxValue}/>\r\n    )\r\n}\r\n\r\nexport default SearchContainer\r\n","import React, {ChangeEvent, useState} from \"react\";\r\n\r\nimport style from './DecksTable.module.css';\r\nimport Button from \"../../common/Button\";\r\nimport Input from \"../../common/Input\";\r\nimport Title from \"../../common/Title\";\r\nimport SearchContainer from \"../Search/SearchContainer\";\r\nimport Link from \"../../common/LInk\";\r\nimport {CARDS_TABLE, PLAY} from \"../../common/Constants\";\r\nimport {CardsPackType} from \"./decksType\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    decks: CardsPackType[],\r\n    addNewDeck: (name: string, rating: number) => void,\r\n    deleteADeck: (_id: string) => void\r\n    getCards: (id:string )=>void\r\n    updateDeck: (deck: any)=>void\r\n}\r\nconst DecksTable: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [rating, setRating] = useState(0);\r\n    const [update, setUpdate] = useState(false);\r\n    const [changeName, setChangeName] = useState('');\r\n    const [updatedDeck, setUpdatedDeck] = useState({});\r\n\r\n    const nameOfNewDeck = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    };\r\n    const sendNewDeck = () => {\r\n        props.addNewDeck(name, rating)\r\n    };\r\n    const sendDeleteDeck = (_id: string ) => {\r\n        props.deleteADeck(_id)\r\n    };\r\n    const increment = () =>{\r\n        setRating(rating + 1.0)\r\n    };\r\n    const decrement = () =>{\r\n        setRating(rating -1.0)\r\n    };\r\n    const onUpdateDeck = (deck: any) =>{\r\n        setUpdate(true);\r\n        setChangeName(deck.name);\r\n        setUpdatedDeck(deck);\r\n    };\r\n    const onUpdateDeckName = (e: ChangeEvent<HTMLTextAreaElement>) =>{\r\n        setChangeName(e.currentTarget.value)\r\n    };\r\n    const offUpdateDeck = () =>{\r\n        setUpdate(false);\r\n        const UpdatedDeckSuccess = {...updatedDeck, name: changeName};\r\n        props.updateDeck(UpdatedDeckSuccess)\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <SearchContainer/>\r\n            <Title title='DECKS'/>\r\n            <table className={style.Table}>\r\n                <tbody>\r\n                <tr>\r\n                    <th><Input type={\"text\"} value={name} placeholder={'Deck\\'s name'} onChange={nameOfNewDeck}/></th>\r\n                    <th>Rating {' '} {rating} {' '}\r\n                        <Button actionOfButton={increment} nameOfButton='↑' typeOfButton=\"button\"/> {' '}\r\n                        <Button actionOfButton={decrement} nameOfButton='↓' typeOfButton=\"button\" />\r\n                    </th>\r\n                    <th>\r\n                        <Button actionOfButton={sendNewDeck} nameOfButton='add' typeOfButton=\"button\"/>\r\n                    </th>\r\n                </tr>\r\n                {props.decks.map(deck =>\r\n                    <tr className={style.cells} key={deck._id}>\r\n                        <td>{deck.name}</td>\r\n                        <td>{deck.rating}</td>\r\n                        <td><Button actionOfButton={() => onUpdateDeck(deck)} nameOfButton='Update' typeOfButton=\"button\"/>{' '}\r\n                            <Button actionOfButton={() => sendDeleteDeck(deck._id)} nameOfButton='Delete'\r\n                                    typeOfButton=\"button\"/>{' '}\r\n                            <span onClick={()=>props.getCards(deck._id)}><Link way={CARDS_TABLE} wordOfLink={'cards'}/></span>{' '}\r\n                            <span onClick={()=>props.getCards(deck._id)}><Link way={PLAY} wordOfLink={'play'}/></span>\r\n                        </td>\r\n                    </tr>)}\r\n                </tbody>\r\n            </table>\r\n\r\n            {update ?\r\n                <div className={style.updateCard}>\r\n                    <div className={style.fieldOfUpdate}>\r\n                        <h1>UPDATE YOUR DECK</h1>\r\n                        <textarea placeholder={'Name'} onChange={onUpdateDeckName} value={changeName}/>\r\n                        <button onClick={offUpdateDeck}>Save</button>\r\n                        <button onClick={()=>setUpdate(false)}>Cancel</button>\r\n                    </div>\r\n                </div> : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DecksTable\r\n","import React, {useEffect} from \"react\";\r\nimport DecksTable from \"./DecksTable\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {addNewDeck, deleteADeck, getDecks, updateDeck} from \"../../../bll/reducers/decksTable-reducer\";\r\nimport {getCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsPackType} from \"./decksType\";\r\n\r\ntype OwnPropsType = {\r\n    addNewDeck: (name: string , rating: number)=>void,\r\n    deleteADeck: (_id: string)=>void,\r\n    getDecks: (page: number, pageCount: number, privateDecks: boolean)=>void,\r\n    getCards: (id:string )=>void,\r\n    updateDeck: (deck: CardsPackType)=>void\r\n}\r\n\r\nconst DecksTableContainer: React.FC<OwnPropsType> = (props) =>{\r\n\r\n    const state = useSelector((state: AppStoreType) => state.decks.decks);\r\n\r\n\r\n    useEffect(() => {\r\n        props.getDecks(1,4, false);\r\n    }, []);\r\n\r\n    return(\r\n        <DecksTable decks={state}\r\n                    addNewDeck={props.addNewDeck}\r\n                    deleteADeck={props.deleteADeck}\r\n                    updateDeck={props.updateDeck}\r\n                    getCards={props.getCards}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {\r\n    addNewDeck, deleteADeck, getDecks, getCards, updateDeck})(DecksTableContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport style from \"./CardsTable.module.css\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport SearchContainer from \"../Search/SearchContainer\";\r\nimport {CardsType} from \"./cardsType\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    cards: CardsType[]\r\n    addNewCard: (question: string, answer: string, grade: number) => void,\r\n    deleteACard: (id: string) => void\r\n    updateCards: (card: CardsType) => void\r\n}\r\nconst CardsTable: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n    const [grade, setGrade] = useState(0);\r\n    const [update, setUpdate] = useState(false);\r\n    const [changeQuestion, setChangeQuestion] = useState('');\r\n    const [changeAnswer, setChangeAnswer] = useState('');\r\n    const [updatedCard, setUpdatedCard] = useState({});\r\n\r\n    const textOfQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    };\r\n    const textOfAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    };\r\n    const sendNewCard = () => {\r\n        props.addNewCard(question, answer, grade)\r\n    };\r\n    const sendDeleteCard = (id: string) => {\r\n        props.deleteACard(id)\r\n    };\r\n    const onUpdateCard = (card: CardsType) => {\r\n        setUpdate(true);\r\n        setChangeQuestion(card.question);\r\n        setChangeAnswer(card.answer);\r\n        setUpdatedCard(card)\r\n    };\r\n    const offUpdateCard = () => {\r\n        setUpdate(false);\r\n        const updatedCardSuccess = {...updatedCard, question: changeQuestion, answer: changeAnswer};\r\n        props.updateCards(updatedCardSuccess as CardsType)\r\n    };\r\n    const onUpdateCardQuestion = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setChangeQuestion(e.currentTarget.value)\r\n    };\r\n    const onUpdateCardAnswer = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setChangeAnswer(e.currentTarget.value)\r\n    };\r\n\r\n    const increment = () => {\r\n        setGrade(grade + 1)\r\n    };\r\n    const decrement = () => {\r\n        setGrade(grade - 1)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SearchContainer/>\r\n            <Title title='CARDS'/>\r\n            <table className={style.Table}>\r\n                <tbody>\r\n                <tr>\r\n                    <th><Input type={\"text\"} value={question} placeholder={'Question'} onChange={textOfQuestion}/></th>\r\n                    <th>Grade {' '} {grade} {' '}\r\n                        <Button actionOfButton={increment} nameOfButton='↑' typeOfButton=\"button\"/> {' '}\r\n                        <Button actionOfButton={decrement} nameOfButton='↓' typeOfButton=\"button\"/>\r\n                    </th>\r\n                    <th>\r\n                        <Input type={\"text\"} value={answer} placeholder={'Answer'} onChange={textOfAnswer}/>{' '}\r\n                        <Button actionOfButton={sendNewCard} nameOfButton='add' typeOfButton=\"button\"/>\r\n                    </th>\r\n                </tr>\r\n                {props.cards.map(card =>\r\n                    <tr className={style.cells} key={card._id}>\r\n                        <td>{card.question}{' '}</td>\r\n                        <td>{card.grade}</td>\r\n                        <td>{\">>>>>>......<<<<<<\"}{' '}\r\n                            <Button actionOfButton={() => onUpdateCard(card)} nameOfButton='Update'\r\n                                    typeOfButton=\"button\"/>\r\n                            <Button actionOfButton={\r\n                                () => sendDeleteCard(card._id)\r\n                            } nameOfButton='Delete'\r\n                                    typeOfButton=\"button\"/>\r\n\r\n                        </td>\r\n                    </tr>)}\r\n                </tbody>\r\n            </table>\r\n\r\n            {update ?\r\n                <div className={style.updateCard}>\r\n                    <div className={style.fieldOfUpdate}>\r\n                        <h1>UPDATE YOUR CARD</h1>\r\n                        <textarea placeholder={'Question'} onChange={onUpdateCardQuestion} value={changeQuestion}/>\r\n                        <textarea placeholder={'Answer'} onChange={onUpdateCardAnswer} value={changeAnswer}/>\r\n                        <button onClick={offUpdateCard}>Save</button>\r\n                        <button onClick={() => setUpdate(false)}>Cancel</button>\r\n                    </div>\r\n                </div> : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CardsTable\r\n","import React from \"react\";\r\nimport CardsTable from \"./CardsTable\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {addNewCard, deleteACard, updateCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsType} from \"./cardsType\";\r\n\r\ntype OwnPropsType = {\r\n    addNewCard: (question: string, answer: string, grade: number)=>void,\r\n    deleteACard: (id: string)=>void,\r\n    updateCards: (card: CardsType)=>void\r\n}\r\n\r\nconst CardsTableContainer: React.FC<OwnPropsType> = (props) => {\r\n\r\nconst state = useSelector((state:AppStoreType) => state.cards.theCards);\r\n\r\n\r\n    return (\r\n            <CardsTable addNewCard={props.addNewCard}\r\n                        deleteACard={props.deleteACard}\r\n                        updateCards={props.updateCards}\r\n                        cards={state}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {addNewCard, deleteACard, updateCards})(CardsTableContainer)\r\n\r\n","import React, {useState} from \"react\";\r\nimport Button from \"../common/Button\";\r\nimport style from './GameField.module.css'\r\nimport {CardsType} from \"../settings/cards/cardsType\";\r\n\r\ntype OwnPropsType = {\r\n    card: CardsType\r\n    nextCard: ()=>void\r\n    setGrade: (grade: number)=>void\r\n}\r\nconst GameField: React.FC<OwnPropsType> = (props) => {\r\n   const [checked, setChecked] = useState(false);\r\n   const [grade, setGrade] = useState(0);\r\n\r\n\r\n   const showAnswer = () =>{\r\n       setChecked(true)\r\n   };\r\nconst nextCard = () =>{\r\n    props.nextCard();\r\n    setChecked(false);\r\n    props.setGrade(grade)\r\n};\r\n\r\n    return (\r\n        <>\r\n\r\n                <div className={style.gameFieldWrapper} key={props.card._id}>\r\n                    <div className={style.cardQuestion}>\r\n                        <span className={style.textQuestion}>{props.card.question}</span>\r\n                    </div>\r\n                    <Button typeOfButton={\"button\"} actionOfButton={showAnswer} nameOfButton='check'/>\r\n                    <div className={checked? style.cardAnswerOn: style.cardAnswerOff} onClick={()=>setChecked(true)}>\r\n                        <span className={style.textAnswer}>{checked ? props.card.answer: null}</span>\r\n                    </div>\r\n\r\n                </div>\r\n            <div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(1)\r\n                }} nameOfButton={\"didn't know\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(2)\r\n                }} nameOfButton={\"forgot\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(3)\r\n                }} nameOfButton={\"spend a lot of time\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(4)\r\n                }} nameOfButton={\"mixed up\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(5)\r\n                }} nameOfButton={\"knew\"}/>{' '}\r\n            </div>\r\n            <div> <Button typeOfButton={\"button\"} actionOfButton={nextCard} nameOfButton={\"NEXT\"}/></div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GameField\r\n","import React, {useState} from \"react\";\r\nimport GameField from \"./GameField\";\r\nimport {AppStoreType} from \"../../bll/store\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {updateCards} from \"../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsType} from \"../settings/cards/cardsType\";\r\n\r\ntype OwnPropsType = {\r\n    updateCards: (card: any) => void\r\n}\r\nconst GameFieldContainer: React.FC<OwnPropsType> = (props) => {\r\n\r\n    const [cardOfNumber, setCardOfNumber] = useState(0);\r\n    const cards = useSelector((state: AppStoreType) => state.cards.theCards);\r\n\r\n\r\n    const sum = cards.map(elem => elem.grade).reduce((acc, el) => acc + el)\r\n    console.log(sum)\r\n    const devideCard = cards.map((card: any) => card.grade / Number(sum))\r\n    console.log(devideCard)\r\n    const x = Math.random() * 1\r\n    console.log(x)\r\n    const next = () => {\r\n\r\n        let totalP = 0;\r\n        for (let i = 0; i < devideCard.length; i++) {\r\n            totalP += devideCard[i];\r\n            console.log(\"totalP => \" + totalP);\r\n            if(x > totalP) {\r\n                console.log(\"item \" + i + \" with value: \" + devideCard[i]);\r\n                break;\r\n            }\r\n        }\r\n        return totalP\r\n        // for (let i = 0; i < devideCard.length; i++) {\r\n        //     if (x > devideCard[i]) {\r\n        //         return devideCard[i]\r\n        //     } else {\r\n        //         return devideCard[i++]\r\n        //     }\r\n        // }\r\n    }\r\n    // console.log(totalP)\r\n    let result = next()\r\n    console.log(result)\r\n    let superResult = devideCard.indexOf(result)\r\n    console.log(superResult)\r\n\r\n\r\n/// working version\r\n//     let grade = [2, 5, 3, 7, 4]\r\n//     const sum = grade.reduce((acc: any, card: any) => acc + card)\r\n//     console.log(sum)\r\n//     const devideCard = grade.map((card: any) => card / Number(sum))\r\n//     console.log(devideCard)\r\n//     const x = Math.random() * 1\r\n//     console.log(x)\r\n//     const next = () => {\r\n//         for (let i = 0; i < devideCard.length; i++) {\r\n//             if (x < devideCard[i]) {\r\n//                 return devideCard[i]\r\n//             } else {\r\n//                 return devideCard[i++]\r\n//             }\r\n//         }\r\n//     }\r\n//     let result = next()\r\n//     console.log(result)\r\n//     let superResult = devideCard.indexOf(result as any)\r\n//     console.log(superResult)\r\n        //working version\r\n\r\n    // var totalP = 0;\r\n    // for (let i = 0; i < arr.length; i++) {\r\n    //     var p = arr[i]/sum;\r\n    //     console.log(\"p => \" + p);\r\n    //     totalP += p;\r\n    //     console.log(\"\\ttotalP => \" + totalP);\r\n    //     if(r < totalP) {\r\n    //         console.log(\"\\t\\tBINGO!!!! => item \" + i + \" with mark: \" + arr[i]);\r\n    //         break;\r\n    //     }\r\n    // }\r\n    ///working version\r\n\r\n\r\n    // const minGrade = cards.reduce((acc, el) => acc.grade < el.grade ? acc : el); ///получаем минимальный элемент grade\r\n    const nextCard = () => {\r\n        setCardOfNumber(cardOfNumber + 1 )\r\n        // setCardOfNumber(superResult+1)\r\n    };\r\n\r\n    if (cards[cardOfNumber] === undefined) {\r\n        setCardOfNumber(0)\r\n    }\r\n\r\n    const card = cards[cardOfNumber];\r\n\r\n\r\n    const setGrade = (grade: number) => {\r\n        const newGrade = (card.shots * card.grade + grade) / (card.shots + 1);\r\n        const updatedCard = {...cards, shots: card.shots + 1, grade: newGrade};\r\n        Math.floor(Math.random() * 5);\r\n        props.updateCards(updatedCard)\r\n    };\r\n\r\n    return (\r\n        <GameField card={card}\r\n                   nextCard={nextCard}\r\n                   setGrade={setGrade}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {updateCards})(GameFieldContainer)\r\n","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport Input from \"../Input\";\r\nimport Button from \"../Button\";\r\nimport {filesApi} from \"../../../dal/api\";\r\n\r\n\r\n\r\nconst UploadFile = () => {\r\n\r\n    const inRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [code, setCode] = useState(true);\r\n    const [text, setText] = useState('');\r\n    const [file, setFile] = useState();\r\n    const [fileURL, setFileURL] = useState();\r\n    const [fileData, setFileData] = useState();\r\n    const [file64, setFile64] = useState();\r\n    const [base64, setBase64] = useState(true);\r\n\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const newFile = e.target.files && e.target.files[0];\r\n\r\n\r\n        const reader = new FileReader();\r\n        const formData = new FormData();\r\n\r\n\r\n        if(newFile){\r\n            setFile(newFile);\r\n            setFileURL(window.URL.createObjectURL(newFile));\r\n            formData.append('myFile', newFile, newFile.name);\r\n            setFileData(formData);\r\n\r\n            if (code) {\r\n                debugger\r\n                reader.onloadend = () => {\r\n                    setFile64(reader.result);\r\n\r\n                };\r\n\r\n                if (base64) {\r\n                    debugger\r\n                    reader.readAsDataURL(newFile);\r\n                }\r\n                else reader.readAsText(newFile)\r\n            }\r\n        }\r\n    };\r\n\r\n    const send = () =>{\r\n        filesApi.postFile(fileData)\r\n    };\r\n    return (\r\n        <div>\r\n           {/* <div>\r\n                reader\r\n                <Input type={\"checkbox\"}\r\n                       checked={code}\r\n                onChange={e => setCode(e.currentTarget.checked)}/>\r\n            </div>\r\n            <div>\r\n                base64\r\n                <Input type={\"checkbox\"}\r\n                       checked={base64}\r\n                       onChange={e=> setBase64(e.currentTarget.checked)}/>\r\n            </div>*/}\r\n            <img src={file64} alt={'file'} width={'300px'}/>\r\n            <div>name: {file && file.name}</div>\r\n            <div>last Modified: {file && file.lastModified}</div>\r\n            <div>size: {file && file.size}</div>\r\n            <div>type: {file && file.type}</div>\r\n            <input type={'file'}\r\n                   accept='.jpg, .jpeg, .png, .gif'\r\n                   ref={inRef}\r\n                   onChange={upload}\r\n                   style={{display: 'none'}}/>\r\n            <Button typeOfButton={\"button\"}\r\n                    actionOfButton={() => inRef && inRef.current && inRef.current.click()}\r\n                    nameOfButton='add'/>\r\n            <div>\r\n                <textarea value={text} onChange={e => setText(e.currentTarget.value)}/>\r\n            </div>\r\n\r\n            <Button typeOfButton={'button'}\r\n                    actionOfButton={() =>{} //writeFile('Text.txt', text + `\\r\\n` + file64)\r\n                    }\r\n                    nameOfButton='save'/>{' '}\r\n            <Button typeOfButton={'button'}\r\n                    actionOfButton={send} nameOfButton='send'/>{' '}\r\n            <Button typeOfButton={'button'}\r\n                    actionOfButton={() =>{filesApi.getFile()} //getFile(baseURL + 'file', 'newFile.jpg')\r\n                    }\r\n                    nameOfButton='get'/>\r\n\r\n            {/*<input type=\"file\" accept=\".jpg, .jpeg, .png\" multiple/>*/}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default UploadFile;","import React, {useState} from \"react\";\r\nimport style from './Profile.module.css';\r\nimport Button from \"../../common/Button\";\r\nimport {CardsPackType} from \"../../settings/decks/decksType\";\r\nimport {Redirect} from \"react-router\";\r\nimport {CARDS_TABLE, PLAY} from \"../../common/Constants\";\r\n\r\n\r\ntype OwnPropsType = {\r\n\r\n    decks: CardsPackType[]\r\n    approveAuth: (login: boolean) => void\r\n    getCards: (id: string) => void\r\n    nextPage: (page: number) => void\r\n    myDecks: ()=>void\r\n    allDecks: ()=>void\r\n}\r\n\r\n\r\nconst Profile: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n\r\n    const [toCards, setToCards] = useState(false);\r\n    const [toPlay, setToPlay] = useState(false);\r\n\r\n    const [numberOfPage, setNumberOfPage] = useState(1);\r\n\r\n    const increment = () => {\r\n        setNumberOfPage(numberOfPage+1);\r\n        props.nextPage(numberOfPage+1)\r\n\r\n    };\r\n    const decrement = () => {\r\n        props.nextPage(numberOfPage-1);\r\n        numberOfPage<=1?setNumberOfPage(1):setNumberOfPage(numberOfPage-1);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.profileWrapper}>\r\n            {/*<h1>Profile page</h1>*/}\r\n            <div className={style.profilePart}>\r\n                <img src={'https://static.tildacdn.com/tild6564-3565-4232-b434-653536636432/avatar_OCAS.jpg'}/>\r\n                <div><Button typeOfButton={'button'} actionOfButton={() => {\r\n                }} nameOfButton='UPLOAD AVATAR'/></div>\r\n                <div><Button typeOfButton={'button'} actionOfButton={props.allDecks} nameOfButton='ALL DECKS'/></div>\r\n                <div><Button typeOfButton={'button'} actionOfButton={props.myDecks} nameOfButton='MY DECKS'/></div>\r\n\r\n                <div className={style.paginationButtons}>\r\n                    <Button typeOfButton={'button'} actionOfButton={decrement} nameOfButton={'PREVIOUS'}/>{'  '}\r\n                    <Button typeOfButton={'button'} actionOfButton={increment} nameOfButton={'NEXT'}/>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.appPart}>\r\n                <div className={style.decksWrapper}>\r\n                    {props.decks.map(deck =>\r\n                        <div className={style.deckCover}>\r\n                            <Button typeOfButton='button' actionOfButton={() => {\r\n                                props.getCards(deck._id);\r\n                                setToPlay(true)\r\n                            }} nameOfButton={'PLAY'}/>\r\n                            <div><Button typeOfButton='button' actionOfButton={() => {\r\n                                props.getCards(deck._id);\r\n                                setToCards(true)\r\n                            }\r\n                            } nameOfButton={'CARDS'}/>\r\n                            </div>\r\n                            <div className={style.decksName}><b>{deck.name}</b></div>\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n            {toCards ? <Redirect to={CARDS_TABLE}/> : null}\r\n            {toPlay ? <Redirect to={PLAY}/> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {LOGIN_SUCCESS} from \"../../ui/common/Constants\";\r\n\r\nconst initialState = {\r\n    login: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS: {\r\n            return {...state, login: action.login}\r\n        }\r\n\r\n    }\r\n\r\n    return state\r\n};\r\n\r\nexport default profileReducer\r\n\r\n//thunks\r\n\r\nexport const approveAuth = (login: boolean) =>\r\n\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n        let authToken = localStorage.getItem('auth-token');\r\n        await authApi.authMe(authToken);\r\n\r\n        dispatch({type: LOGIN_SUCCESS, login: login})\r\n    };\r\n","import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {approveAuth} from \"../../../bll/reducers/profile-reducer\";\r\nimport {getDecks} from \"../../../bll/reducers/decksTable-reducer\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {getCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    approveAuth: (login: boolean) => void\r\n    getDecks: (page: number, pageCount: number, privateDecks: boolean) => void\r\n    getCards: (id: string) => void\r\n}\r\n\r\nconst ProfileContainer: React.FC<OwnPropsType> = (props: OwnPropsType) => {\r\n\r\n    useEffect(() => {\r\n        props.getDecks(1, 4, false);\r\n        let authToken = localStorage.getItem('auth-token');\r\n        console.log(authToken);\r\n        const approve = !!authToken; //authToken?true:false;\r\n        props.approveAuth(approve);\r\n    }, []);\r\n\r\n    const nextPage = (page: number) => {\r\n        page <= 1 ? props.getDecks(1, 4, false) :\r\n            props.getDecks(page, 4, false)\r\n    };\r\n\r\n    const myDecks = () => {\r\n        props.getDecks(1, 4, true)\r\n    };\r\n\r\n    const allDecks = () => {\r\n        props.getDecks(1, 4, false)\r\n    };\r\n\r\n\r\n    const decks = useSelector((state: AppStoreType) => state.decks.decks);\r\n\r\n\r\n    return <Profile decks={decks}\r\n                    nextPage={nextPage}\r\n                    myDecks={myDecks}\r\n                    allDecks={allDecks}\r\n                    approveAuth={props.approveAuth}\r\n                    getCards={props.getCards}/>\r\n};\r\n\r\nexport default connect(null, {\r\n    approveAuth,\r\n    getDecks,\r\n    getCards\r\n})(ProfileContainer)","import React from \"react\";\r\nimport {Route} from \"react-router\";\r\nimport SetNewPassContainer from \"../authorization/SetNewPass-page/SetNewPassContainer\";\r\nimport styles from \"../authorization/Auth.module.css\";\r\nimport {\r\n    CARDS_TABLE,\r\n    DECKS_TABLE,\r\n    FORGOT,\r\n    PLAY,\r\n    PROFILE,\r\n    REGISTER,\r\n    SET_NEW_PASS,\r\n    SIGN_IN,\r\n    UPLOAD_FILE\r\n} from \"../common/Constants\";\r\nimport SignInContainer from \"../authorization/SignIn-page/SignInContainer\";\r\nimport ForgotContainer from \"../authorization/Forgot-page/ForgotContainer\";\r\nimport RegisterContainer from \"../authorization/Register-page/RegisterContainer\";\r\nimport HeaderContainer from \"../authorization/Header/HeaderContainer\";\r\nimport Profile from \"../authorization/Profile-page/Profile\";\r\nimport DecksTableContainer from \"../settings/decks/DecksTableContainer\";\r\nimport CardsTableContainer from \"../settings/cards/CardsTableContainer\";\r\nimport GameFieldContainer from \"../play/GameFieldContainer\";\r\nimport UploadFile from \"../common/uploadFile/uploadFile\";\r\nimport ProfileContainer from \"../authorization/Profile-page/ProfileContainer\";\r\n\r\n\r\nconst Cards = () => {\r\n\r\n    return (\r\n        <>\r\n        <HeaderContainer/>\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Route path={SIGN_IN} render={() => <SignInContainer/>}/>\r\n            <Route path={REGISTER} render={() => <RegisterContainer/>}/>\r\n            <Route path={FORGOT} render={() => <ForgotContainer/>}/>\r\n            <Route path={SET_NEW_PASS} render={() => <SetNewPassContainer />}/>\r\n            <Route path={PROFILE} render={() => <ProfileContainer />}/>\r\n\r\n            <Route path={DECKS_TABLE} render={()=> <DecksTableContainer />}/>\r\n            <Route path={CARDS_TABLE} render={()=> <CardsTableContainer />} />\r\n            <Route path={PLAY} render={()=> <GameFieldContainer />}/>\r\n            <Route path={UPLOAD_FILE} render={()=> <UploadFile />} />\r\n        </div>\r\n            </>\r\n    )\r\n};\r\n\r\nexport default Cards\r\n\r\n","import {REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../ui/common/Constants\";\r\nimport {\r\n    registerInitialState,\r\n    registerSuccessActionType,\r\n    setErrorRegisterPageActionType,\r\n    waitingForResponseActionType\r\n} from \"../../ui/authorization/types/registerTypes\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\n\r\nconst initialState: registerInitialState = {\r\n    email: '',\r\n    password: '',\r\n    loading: false,\r\n    error: false,\r\n    redirect: false\r\n\r\n}\r\n\r\nconst registerReducer = (state: registerInitialState = initialState, action: registerActionType): registerInitialState => {\r\n    switch (action.type) {\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                redirect: true\r\n            }\r\n        }\r\n        case WAITING_FOR_RESPONSE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case SET_ERROR_REGISTER_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n    }\r\n    return state\r\n}\r\ntype registerActionType = registerSuccessActionType | waitingForResponseActionType | setErrorRegisterPageActionType\r\nexport default registerReducer\r\n\r\nexport const setRegisterFormValues = (email: string | any, password: string, repeatPassword: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>) => {\r\n        if (password !== repeatPassword) {\r\n            let error = 'fields password and repeat password should be the same';\r\n            dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n        } else {\r\n            let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n            if (password.length <= 7 || !email.match(correctEmail)) {\r\n                let error = 'your email of password is not valid'\r\n                dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n            } else {\r\n                dispatch({type: WAITING_FOR_RESPONSE, loading: true})\r\n                await authApi.register(email, password)\r\n                try {\r\n                    dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                    dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect: true})\r\n                } catch {\r\n                    let error = 'your email is invalid or is already registered'\r\n                    dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                    dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport forgotReducer from \"./reducers/forgot-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport registerReducer from \"./reducers/register-reducer\";\r\nimport setNewPassReducer from \"./reducers/setNewPass-reducer\";\r\nimport signInReducer from \"./reducers/signIn-reducer\";\r\nimport decksTableReducer from \"./reducers/decksTable-reducer\";\r\nimport cardsTableReducer from \"./reducers/cardsTable-reducer\";\r\nimport searchingReducer from \"./reducers/searchReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    register: registerReducer,\r\n    setNewPass: setNewPassReducer,\r\n    signIn: signInReducer,\r\n    profile: profileReducer,\r\n    decks: decksTableReducer,\r\n    cards: cardsTableReducer,\r\n    search: searchingReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Cards from \"./ui/cards/Cards\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Cards/>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}