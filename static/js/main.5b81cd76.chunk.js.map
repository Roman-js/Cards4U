{"version":3,"sources":["ui/common/Common.module.css","ui/settings/decks/DecksTable.module.css","ui/authorization/Header/Header.module.css","ui/common/Title.tsx","ui/common/Input.tsx","ui/common/Button.tsx","ui/common/LInk.tsx","ui/authorization/SetNewPass-page/SetNewPass.tsx","ui/common/Constants.ts","dal/api.ts","bll/reducers/setNewPass-reducer.ts","ui/authorization/SetNewPass-page/SetNewPassContainer.tsx","ui/authorization/SignIn-page/SignIn.tsx","bll/reducers/signIn-reducer.ts","ui/authorization/SignIn-page/SignInContainer.tsx","ui/authorization/Forgot-page/Forgot.tsx","bll/reducers/forgot-reducer.ts","ui/authorization/Forgot-page/ForgotContainer.tsx","ui/authorization/Register-page/Register.tsx","ui/authorization/Register-page/RegisterContainer.tsx","ui/authorization/Header/Header.tsx","ui/authorization/Header/HeaderContainer.tsx","ui/authorization/Profile-page/Profile.tsx","ui/settings/decks/DecksTable.tsx","dal/cardsApi.ts","bll/reducers/decksTable-reducer.ts","ui/settings/decks/DecksTableContainer.tsx","ui/settings/cards/CardsTable.tsx","ui/settings/cards/CardsTableContainer.tsx","ui/cards/Cards.tsx","bll/reducers/profile-reducer.ts","bll/reducers/register-reducer.ts","bll/reducers/cardsTable-reducer.ts","bll/store.ts","App.tsx","serviceWorker.ts","index.tsx","ui/authorization/Auth.module.css"],"names":["module","exports","Title","props","title","Input","className","styles","forInput","onFocus","onBlur","value","onChange","placeholder","type","Button","forButton","typeOfButton","onClick","actionOfButton","disabled","nameOfButton","Link","forLinks","to","way","wordOfLink","SetNewPass","useState","newPass","setNewPass","repeatNewPass","setRepeatNewPass","token","useParams","toCleanField","toCleanErrorField","wrapperOfAuth","error","loading","e","currentTarget","setValueOfSetNewPassForm","WAITING_FOR_RESPONSE","SET_ERROR_REGISTER_PAGE","instance","axios","create","baseURL","authApi","email","password","rememberMe","post","then","response","data","html1","html2","res","console","log","authToken","catch","fal","resetPasswordToken","initialState","setNewPassReducer","state","action","connect","repeatPassword","dispatch","getStore","a","length","useDispatch","useSelector","SignIn","setEmail","setPassword","setRememberMe","checked","setSignInFormValues","redirect","signInReducer","localStorage","setItem","getItem","signIn","Forgot","toCleanError","setForgotPassword","emailApproved","forgotReducer","forgot","Register","setRegisterFormValues","CancelErrorPosition","setRepeatPassword","RegisterContainer","register","err","Header","wrapperOfHeader","login","tokenIsClear","HeaderContainer","setLogin","useEffect","clear","removeItem","Profile","DecksTable","name","setName","style","Table","addNewDeck","decks","map","deck","cells","nameOfDeck","rating","id","deleteADeck","Api","delete","decksTableReducer","filter","getState","CardsTable","Cards","path","render","profileReducer","registerReducer","cardsTableReducer","rootReducer","combineReducers","profile","cards","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5b81cd76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forLinks\":\"Common_forLinks__1l5g1\",\"forInput\":\"Common_forInput__3E9bg\",\"forButton\":\"Common_forButton__3VnRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckBorder\":\"DecksTable_DeckBorder__n3nip\",\"Table\":\"DecksTable_Table__2kI9u\",\"cells\":\"DecksTable_cells__1E7On\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfHeader\":\"Header_wrapperOfHeader__3r8LB\"};","import React from \"react\";\r\n\r\nconst Title = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n\r\ntype OwnPropsType = {\r\n    title: string\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    value?: string,\r\n    checked?: boolean,\r\n    placeholder?: string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void, ////add '?' for\r\n    type: 'text' | 'password' | 'radio' | 'checkbox' | 'email',\r\n    onBlur?: ()=>void,\r\n    onFocus?: (e: React.FocusEvent)=>void\r\n}\r\n\r\nconst Input = (props: OwnPropsType) => {\r\n\r\n    return (\r\n        <input className={styles.forInput}\r\n               onFocus={props.onFocus}\r\n               onBlur={props.onBlur}\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               placeholder={props.placeholder}\r\n               type={props.type}/>\r\n    )\r\n};\r\n\r\nexport default Input\r\n\r\n","import React from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\nconst Button = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <button\r\n            className={styles.forButton}\r\n            type={props.typeOfButton}\r\n            onClick={props.actionOfButton}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.nameOfButton}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n\r\ntype OwnPropsType = {\r\n    typeOfButton: \"button\" | \"submit\" | \"reset\" | undefined,\r\n    actionOfButton: ()=>void,\r\n    nameOfButton: string,\r\n    disabled?: boolean\r\n\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    way: string,\r\n    wordOfLink: string\r\n}\r\nconst Link = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <NavLink className={styles.forLinks} to={props.way}>{props.wordOfLink}</NavLink>\r\n    )\r\n}\r\n\r\nexport default Link\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {useParams} from \"react-router\";\r\n\r\ntype OwnPropsType = {\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined) => void\r\n    error: string\r\n    loading: boolean | null\r\n    disabled: boolean\r\n    toCleanErrorField: ()=>void\r\n}\r\n\r\nconst SetNewPass = (props: OwnPropsType) => {\r\n\r\n    const [newPass, setNewPass] = useState('');\r\n    const [repeatNewPass, setRepeatNewPass] = useState('');\r\n    const {token} = useParams();\r\n\r\n    const valueOfInputNewPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPass(e.currentTarget.value)\r\n    };\r\n    const valueOfInputRepeatPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatNewPass(e.currentTarget.value)\r\n    };\r\n    const sendToCheckPassword = () => {\r\n        props.setValueOfSetNewPassForm(newPass, repeatNewPass, token);\r\n        setNewPass('');\r\n        setRepeatNewPass('');\r\n    };\r\n    const toCleanField = () =>{\r\n        props.toCleanErrorField()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='Set New Password'/>\r\n            {props.error?<div>{props.error}</div>:null}\r\n            {props.loading?<div>Loading...</div>:null}\r\n            <div><Input placeholder={'new pass'}\r\n                        type={'password'}\r\n                        value={newPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputNewPass}/></div>\r\n            <div><Input placeholder={'repeat pass'}\r\n                        type={'password'}\r\n                        value={repeatNewPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputRepeatPass}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         disabled={props.disabled}\r\n                         actionOfButton={sendToCheckPassword\r\n                         } nameOfButton='Set new password'/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SetNewPass\r\n","//constants for paths\r\n\r\nexport const SIGN_IN = '/sign-in';\r\nexport const REGISTER = '/register';\r\nexport const FORGOT = '/forgot';\r\nexport const SET_NEW_PASS = '/set-new-pass/:token';\r\nexport const PROFILE = '/profile';\r\n\r\nexport const CARDS_TABLE = '/cards-table';\r\nexport const DECKS_TABLE = '/decks-table';\r\n\r\n//constants for reducers\r\n\r\nexport const REGISTER_SUCCESS = 'auth/register/REGISTER-SUCCESS';\r\nexport const WAITING_FOR_RESPONSE = 'auth/register/WAITING-FOR-RESPONSE';\r\nexport const SET_ERROR_REGISTER_PAGE = 'auth/register/SET-ERROR-REGISTER-PAGE';\r\n\r\n\r\n//constants for SignIn-page\r\nexport const SET_LOADING_DATA = 'SET-LOADING-DATA';\r\nexport const SET_SIGN_IN_FORM_VALUES = 'SET-SIGN-IN-FORM-VALUES';\r\nexport const IS_TOKEN_HAS = 'IS-TOKEN-HAS';\r\nexport const SET_ERROR_SIGN_IN_PAGE = 'SET-ERROR-SIGN-IN-PAGE';\r\n\r\n//constants for Forgot-page\r\nexport const SET_LOADING_DATA_FORGOT_PAGE = 'SET-LOADING-DATA-FORGOT-PAGE';\r\nexport const SET_VALUE_ERROR_FORGOT_PAGE = 'SET-VALUE-ERROR-FORGOT-PAGE';\r\nexport const RESTORE_FORGOT_PASSWORD = 'RESTORE-FORGOT-PASSWORD';\r\n\r\n//constants for SetNewPass-page\r\nexport const SET_LOADING_VALUE = 'SET-LOADING-VALUE';\r\nexport const SET_NEW_TOKEN = 'SET-NEW-TOKEN';\r\nexport const SHOW_ERROR = 'SHOW-ERROR';\r\nexport const TO_CLEAN_ERROR_FIELD = 'TO-CLEAN-ERROR-FIELD';\r\n\r\n//constants for DecksTable\r\n\r\nexport const ADD_NEW_DECK = 'ADD-NEW-DECK';\r\nexport const DELETE_DECK = 'DELETE-DECK';\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n   // withCredentials: true,\r\n    baseURL:\"https://neko-cafe-back.herokuapp.com/\",\r\n});\r\n\r\nexport const authApi = {\r\n\r\n    login(email: string, password: string, rememberMe: boolean){\r\n        return instance.post(\"auth/login\", {email, password, rememberMe})\r\n            .then(response=>{return response.data})\r\n    },\r\n\r\n    forgotPass(email: string, html1: string, html2: string){\r\n        return instance.post('auth/forgot', {email, html1, html2})\r\n            .then(res=>{return console.log(res)})\r\n            //.catch(fal=>console.log(fal))\r\n    },\r\n\r\n    register(email: string, password: string){\r\n        return instance.post('auth/register', {email, password})\r\n            .then(res =>res)\r\n    },\r\n\r\n    authMe(authToken: string|null){\r\n        debugger\r\n        return instance.post('auth/me', {authToken: authToken})\r\n            .then(res=>res)\r\n            .catch((fal)=>{return fal})\r\n    },\r\n\r\n    setNewPass(resetPasswordToken: string | undefined, password: string){\r\n        return instance.post('auth/set-new-password', {resetPasswordToken, password})\r\n            .then(res=>res)\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport {SET_LOADING_VALUE, SET_NEW_TOKEN, SHOW_ERROR, TO_CLEAN_ERROR_FIELD} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: initialStateType = {\r\n    error: '',\r\n    token: '',\r\n    loading: null,\r\n    disabled: false\r\n}\r\n\r\ntype initialStateType = {\r\n    error: string | null,\r\n    token: string | undefined\r\n    loading: boolean | null\r\n    disabled: boolean\r\n}\r\n\r\nconst setNewPassReducer = (state = initialState, action: any ) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case SHOW_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case SET_NEW_TOKEN: {\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case SET_LOADING_VALUE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case TO_CLEAN_ERROR_FIELD: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n\r\n};\r\n\r\n\r\n//thunks\r\n\r\nexport const setValueOfSetNewPassForm = (password: string, repeatPassword: string, token: string | undefined) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n        if (password === repeatPassword && password.length > 7) {\r\n            dispatch({type: SET_LOADING_VALUE, loading: true, disabled: true});\r\n              await authApi.setNewPass(token, password);\r\n                try  {\r\n                    dispatch({type: SET_NEW_TOKEN, token: token});\r\n                    dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                }\r\n\r\n                catch(e) {\r\n                        console.log(e.response);\r\n                        dispatch({type: SHOW_ERROR, error: e.response.data.error})\r\n                        dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                    }\r\n\r\n        } else {\r\n            dispatch({\r\n                type: SHOW_ERROR,\r\n                error: 'Incorrect Password! Password should have min 8 values and each one fields should be same!'\r\n            })\r\n        }\r\n    };\r\n\r\n\r\nexport default setNewPassReducer","import React from \"react\";\r\nimport SetNewPass from \"./SetNewPass\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {useParams} from \"react-router\";\r\nimport {SET_LOADING_VALUE, SET_NEW_TOKEN, SHOW_ERROR, TO_CLEAN_ERROR_FIELD} from \"../../common/Constants\";\r\nimport {setValueOfSetNewPassForm} from \"../../../bll/reducers/setNewPass-reducer\";\r\n\r\n\r\ntype OwnPropsType={\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined)=>void\r\n}\r\nconst SetNewPassContainer = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.setNewPass);\r\n\r\n    //const {token} = useParams();\r\n\r\n    // const setValueOfSetNewPassForm = (password: string, repeatPassword: string, token: string | undefined) => {\r\n    //\r\n    //     if (password === repeatPassword && password.length > 7) {\r\n    //         dispatch({type: SET_LOADING_VALUE, loading: true, disabled: true});\r\n    //         authApi.setNewPass(token, password)\r\n    //             .then(res => {\r\n    //                 dispatch({type: SET_NEW_TOKEN, token: token});\r\n    //                 dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n    //             })\r\n    //\r\n    //             .catch(fal => {\r\n    //                     console.log(fal.response);\r\n    //                     dispatch({type: SHOW_ERROR, error: fal.response.data.error})\r\n    //                     dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n    //                 }\r\n    //             )\r\n    //     } else {\r\n    //         dispatch({\r\n    //             type: SHOW_ERROR,\r\n    //             error: 'Incorrect Password! Password should have min 8 values and each one fields should be same!'\r\n    //         })\r\n    //     }\r\n    // };\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: TO_CLEAN_ERROR_FIELD, error: null})\r\n    };\r\n\r\n\r\n    return (\r\n        <SetNewPass\r\n            setValueOfSetNewPassForm={props.setValueOfSetNewPassForm}\r\n            error={state.error}\r\n            loading={state.loading}\r\n            disabled={state.disabled}\r\n            toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n}\r\n\r\nexport default connect(null, {setValueOfSetNewPassForm})(SetNewPassContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Link from \"../../common/LInk\";\r\nimport Button from \"../../common/Button\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean) => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    toCleanErrorField: () => void\r\n}\r\n\r\n\r\nconst SignIn: React.FC<OwnPropsType> = (props) => {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    //пример UseSelector Достаем данные из store\r\n    //const valueOfInputEmail = useSelector((state: AppStoreType) => state.signIn.email);\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setEmail(e.currentTarget.value)\r\n    };\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setPassword(e.currentTarget.value)\r\n    };\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n       !rememberMe ? setRememberMe(true) : setRememberMe(false)\r\n    };\r\n\r\n    const sendSignInFormValues = () => {\r\n            props.setSignInFormValues(email, password, rememberMe)\r\n    };\r\n    const toCleanErrorField = () => {\r\n      props.toCleanErrorField()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'sign-in'}/>\r\n            {props.loading ? <div>loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input type=\"text\"\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changeEmail}/></div>\r\n            <div><Input type=\"password\"\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changePassword}/></div>\r\n            <div><Link way={'/forgot'}\r\n                       wordOfLink={'Forgot password?'}/></div>\r\n            <div><Input type={\"checkbox\"}\r\n                        checked={rememberMe}\r\n                        onChange={changeRememberMe}/>Remember Me\r\n            </div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={sendSignInFormValues}\r\n                         disabled={props.disabled}\r\n                         nameOfButton='Sign In'/></div>\r\n            <div><Link way={'/register'} wordOfLink='Registration'/></div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default SignIn\r\n","import React from \"react\";\r\nimport {\r\n    IS_TOKEN_HAS,\r\n    SET_ERROR_SIGN_IN_PAGE,\r\n    SET_LOADING_DATA,\r\n    SET_SIGN_IN_FORM_VALUES\r\n} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: signInitialStateType = {\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false,\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    token: '',\r\n    redirect: false,\r\n    authToken: ''\r\n}\r\n\r\nexport type signInitialStateType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean,\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    token: string\r\n    redirect: false,\r\n    authToken?:string\r\n}\r\n\r\nconst signInReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case SET_SIGN_IN_FORM_VALUES: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                rememberMe: action.rememberMe,\r\n                token: action.token,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_LOADING_DATA: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                disabled: action.disabled,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_ERROR_SIGN_IN_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n\r\n            }\r\n        }\r\n        case IS_TOKEN_HAS: {\r\n            return {\r\n                ...state,\r\n                authToken: action.authToken\r\n            }\r\n        }\r\n            default: return state\r\n    }\r\n\r\n};\r\n\r\n//thunks\r\n\r\nexport const setSignInFormValues = (email: string, password: string, rememberMe: boolean) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n    dispatch({type: SET_LOADING_DATA, loading: true, disabled: true});\r\n    await authApi.login(email, password, rememberMe)\r\n        .then(res => {\r\n            dispatch({type: SET_LOADING_DATA, loading: false, disabled: false});\r\n            dispatch({\r\n                type: SET_SIGN_IN_FORM_VALUES,\r\n                email: res.email,\r\n                password: password,\r\n                rememberMe: res.rememberMe,\r\n                token: res.token,\r\n                redirect: true\r\n            });\r\n            localStorage.setItem('auth-token', res.token)\r\n            const authToken = localStorage.getItem('auth-token');\r\n            dispatch({type: IS_TOKEN_HAS, authToken})\r\n            //console.log(authToken)\r\n\r\n        })\r\n        .catch(fal => {\r\n                console.log(fal.response);\r\n                const error = fal.response.data.error;\r\n                dispatch({type: SET_LOADING_DATA, loading: false, disabled: false, redirect: false});\r\n                dispatch({type: SET_ERROR_SIGN_IN_PAGE, error})\r\n            }\r\n        );\r\n};\r\n\r\nexport default signInReducer\r\n","import React from \"react\";\r\nimport SignIn from \"./SignIn\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {SET_ERROR_SIGN_IN_PAGE} from \"../../common/Constants\";\r\nimport {setSignInFormValues} from \"../../../bll/reducers/signIn-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean)=>void\r\n}\r\nconst SignInContainer = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector((state: AppStoreType) => state.signIn);\r\n    //const disable = useSelector((state: AppStoreType) => state.signIn.disabled)\r\n\r\n\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: SET_ERROR_SIGN_IN_PAGE, error: null})\r\n    };\r\n    return (\r\n\r\n        state.redirect ? <Redirect to='/profile'/> :\r\n            <SignIn setSignInFormValues={props.setSignInFormValues}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}\r\n                    toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setSignInFormValues})(SignInContainer)\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Input from \"../../common/Input\";\r\nimport styles from '../Auth.module.css'\r\n\r\ntype OwnPropsType = {\r\n    setForgotPassword: (email: string) => void\r\n    toCleanError: () => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n}\r\nconst Forgot = (props: OwnPropsType) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const valueOfInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    };\r\n    const restoreForgotPassword =  () => {\r\n         props.setForgotPassword(email);\r\n        setEmail('')\r\n    };\r\n    const toCleanError = () => {\r\n         props.toCleanError()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='forgot'/>\r\n            {props.loading ? <div>Loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input placeholder='email address'\r\n                        type={\"text\"}\r\n                        value={email}\r\n                        onBlur={toCleanError}\r\n                        onFocus={toCleanError}\r\n                        onChange={valueOfInputEmail}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={restoreForgotPassword}\r\n                         nameOfButton='Send email'\r\n                         disabled={props.disabled}/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Forgot","import React from \"react\";\r\nimport {\r\n    RESTORE_FORGOT_PASSWORD,\r\n    SET_LOADING_DATA_FORGOT_PAGE,\r\n    SET_VALUE_ERROR_FORGOT_PAGE\r\n} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {authApi} from \"../../dal/api\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    emailApproved: false\r\n}\r\n\r\nconst forgotReducer = (state = initialState, action: any) =>{\r\n   switch (action.type) {\r\n       case RESTORE_FORGOT_PASSWORD: {\r\n         return {\r\n             ...state, email: action.email\r\n         }\r\n       }\r\n       case SET_LOADING_DATA_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               loading: action.loading,\r\n               disabled: action.disabled,\r\n               emailApproved: action.emailApproved\r\n           }\r\n       }\r\n       case SET_VALUE_ERROR_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               error: action.error\r\n           }\r\n       }\r\n           default: return state\r\n   }\r\n\r\n}\r\n\r\nconst html1 = \"<a href=http://localhost:3000/template-typescript#/set-new-pass/\";\r\nconst html2 = \">reset-password-link</a>\";\r\n\r\n//thunks\r\nexport const setForgotPassword = (email: string) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n        dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: true, disabled: true});\r\n        try {\r\n            const data = await authApi.forgotPass(email, html1, html2);\r\n            console.log(data);\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false, emailApproved: true});\r\n            dispatch({type: RESTORE_FORGOT_PASSWORD, email})\r\n        } catch (e) {\r\n            console.log(e.response.data.error);\r\n            const error = e.response.data.error;\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: error})\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false})\r\n\r\n        }\r\n\r\n    };\r\n\r\nexport const toCleanError = () =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n        try {\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: null})\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n\r\nexport default forgotReducer","import React from \"react\";\r\nimport Forgot from \"./Forgot\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {setForgotPassword, toCleanError} from \"../../../bll/reducers/forgot-reducer\";\r\n\r\n\r\nconst ForgotContainer = (props: any) => {\r\n\r\n    const state = useSelector((state: AppStoreType) => state.forgot);\r\n\r\n    return (\r\n        !state.emailApproved ?\r\n            <Forgot setForgotPassword={props.setForgotPassword}\r\n                    toCleanError={props.toCleanError}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}/> :\r\n            <Redirect to='/set-new-pass/:token'/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setForgotPassword, toCleanError})(ForgotContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {SIGN_IN} from \"../../common/Constants\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\ntype OwnPropsType = {\r\n    setRegisterFormValues: (email: string, password: string, repeatPassword: string) => void,\r\n    loading: boolean,\r\n    error:boolean,\r\n    CancelErrorPosition:()=>void\r\n}\r\nconst Register: React.FC<OwnPropsType> = ({setRegisterFormValues, loading, error, CancelErrorPosition}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const changeRepeatPassword = (e: ChangeEvent<HTMLInputElement>) => setRepeatPassword(e.currentTarget.value)\r\n\r\n    const toCleanErrorField = () => {\r\n        return CancelErrorPosition()\r\n    }\r\n\r\n    const sendSignInFormValues = () => setRegisterFormValues(email, password, repeatPassword)\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'Register'}/>\r\n            {loading && <div>wait</div>}\r\n            {error && <label >{error}</label>}\r\n                <div><Input placeholder={'email'}\r\n                            type={\"email\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeEmail}/>\r\n                </div>\r\n                <div><Input placeholder={'password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changePassword}/>\r\n                </div>\r\n                <div><Input placeholder={'repeat password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeRepeatPassword}/>\r\n                </div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={sendSignInFormValues} nameOfButton={'Register'}/>\r\n            <Link way={SIGN_IN} wordOfLink='Sign In'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PROFILE, REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../common/Constants\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport Register from \"./Register\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nconst RegisterContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.register)\r\n\r\n    const setRegisterFormValues = (email: any, password: string, repeatPassword: string) => {\r\n        if (password !== repeatPassword) {\r\n            let error = 'fields password and repeat password should be the same'\r\n            dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n        } else {\r\n            let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n            if (password.length <= 7 && email !== correctEmail) {\r\n                let error = 'your email of password is not valid'\r\n                dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n            } else {\r\n                dispatch({type: WAITING_FOR_RESPONSE, loading: true})\r\n                return authApi.register(email, password)\r\n                    .then(res => {\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect:true})\r\n                    })\r\n                    .catch(err => {\r\n                        let error = 'your email is invalid or is already registered'\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n                    })\r\n            }\r\n        }\r\n    };\r\n    const CancelErrorPosition = () => dispatch({type: SET_ERROR_REGISTER_PAGE, error: null})\r\n    return (\r\n        <>\r\n            {state.redirect && <Redirect to={PROFILE}/>}\r\n            <Register setRegisterFormValues={setRegisterFormValues}\r\n                      loading={state.loading}\r\n                      error={state.error}\r\n                      CancelErrorPosition={CancelErrorPosition}/>\r\n        </>\r\n    )\r\n};\r\nexport default RegisterContainer\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from './Header.module.css'\r\nimport {FORGOT, PROFILE, REGISTER, SET_NEW_PASS, SIGN_IN} from \"../../common/Constants\";\r\nimport Button from \"../../common/Button\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    login: boolean,\r\n    tokenIsClear: ()=>void\r\n}\r\nconst Header = (props: OwnPropsType) => {\r\n\r\n  const tokenIsClear = () =>{\r\n      props.tokenIsClear();\r\n  };\r\n\r\n\r\n    return (\r\n        <div className={styles.wrapperOfHeader}>\r\n            <Link way={SIGN_IN} wordOfLink={'sign-in'}/>\r\n            <Link way={REGISTER} wordOfLink={'register'}/>\r\n            <Link way={FORGOT} wordOfLink={'forgot'}/>\r\n            <Link way={SET_NEW_PASS} wordOfLink={'set-new-pass'}/>\r\n            <Link way={PROFILE} wordOfLink={'profile'}/>\r\n            {/*<Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>*/}\r\n           { props.login? <Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>:null}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Header\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = () =>{\r\n\r\n\r\n    const [login, setLogin] = useState(false);\r\n\r\n    let authToken = localStorage.getItem('auth-token');\r\n    useEffect(()=>{authToken?setLogin(true):setLogin(false)}, []);\r\n\r\n\r\n    let tokenIsClear = () => {\r\n        const clear = localStorage.removeItem('auth-token');\r\n        setLogin(false)\r\n        console.log(clear)\r\n    };\r\n    return(\r\n        <Header login={login} tokenIsClear={tokenIsClear}/>\r\n    )\r\n};\r\n\r\nexport default HeaderContainer\r\n","import React, {useEffect} from \"react\";\r\nimport {authApi} from \"../../../dal/api\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    let authToken = localStorage.getItem('auth-token');\r\n    console.log(authToken);\r\n    useEffect(()=>{\r\n        authApi.authMe(authToken)\r\n    },[]);\r\n\r\n    return (\r\n\r\n        <div>\r\n             <h1>Profile page</h1>\r\n            {/*//!authToken? <Redirect to={SIGN_IN}/>:<div></div>*/}\r\n            {/*    // <Redirect to={SIGN_IN}/>}*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, {ChangeEvent, useState} from \"react\";\r\n\r\nimport style from './DecksTable.module.css';\r\nimport Button from \"../../common/Button\";\r\nimport Input from \"../../common/Input\";\r\nimport Title from \"../../common/Title\";\r\n\r\ntype OwnPropsType = {\r\n    decks: any[],\r\n    addNewDeck: (name: string) => void,\r\n    deleteADeck: (id: number) => void\r\n}\r\nconst DecksTable = (props: OwnPropsType) => {\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    const nameOfNewDeck = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    };\r\n    const sendNewDeck = () => {\r\n        props.addNewDeck(name)\r\n    };\r\n    const sendDeleteDeck = (id: number) => {\r\n        props.deleteADeck(id)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Title title='DECKS'/>\r\n            <table className={style.Table}>\r\n                <tr>\r\n                    <th><Input type={\"text\"} value={name} placeholder={'Deck\\'s name'} onChange={nameOfNewDeck}/></th>\r\n                    <th>Rating {' '}\r\n                        <Button actionOfButton={() => {\r\n                        }} nameOfButton='↑' typeOfButton=\"button\"/> {' '}\r\n                        <Button actionOfButton={() => {\r\n                        }} nameOfButton='↓' typeOfButton=\"button\"/>\r\n                    </th>\r\n                    <th>\r\n                        <Button actionOfButton={sendNewDeck} nameOfButton='add' typeOfButton=\"button\"/>\r\n                    </th>\r\n                </tr>\r\n                {props.decks.map(deck =>\r\n                    <tr className={style.cells}>\r\n                        <td>{deck.nameOfDeck}</td>\r\n                        <td>{deck.rating}</td>\r\n                        <td><Button actionOfButton={() => {\r\n                        }} nameOfButton='Update' typeOfButton=\"button\"/>\r\n                            <Button actionOfButton={() => sendDeleteDeck(deck.id)} nameOfButton='Delete'\r\n                                    typeOfButton=\"button\"/>\r\n                        </td>\r\n                    </tr>)}\r\n\r\n            </table>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DecksTable","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://dry-forest-56016.herokuapp.com/shop/\"\r\n});\r\n\r\nexport const Api = {\r\n\r\n    addDeck(name: string) {\r\n        return instance.post('shop', name)\r\n    },\r\n\r\n    deleteDeck(id: number){\r\n        return instance.delete('shop', )\r\n    }\r\n}","import {ADD_NEW_DECK, DELETE_DECK} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {Api} from \"../../dal/cardsApi\";\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    decks: [\r\n        {\r\n            id: 1,\r\n            nameOfDeck: 'React',\r\n            rating: '3'\r\n        },\r\n        {\r\n            id: 2,\r\n            nameOfDeck: 'TypeScript',\r\n            rating: '1'\r\n        }\r\n    ]\r\n};\r\n\r\nconst decksTableReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_DECK:\r\n            return {\r\n                ...state,\r\n                decks: [...state.decks, {\r\n                    id: state.decks.length + 1,\r\n                    nameOfDeck: action.name,\r\n                    rating: '1'\r\n                }]\r\n            };\r\n\r\n        case DELETE_DECK:\r\n            return {\r\n                ...state, decks: state.decks.filter(deck=>deck.id !== action.id)\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\nexport default decksTableReducer\r\n\r\n//thunks\r\nexport const addNewDeck = (name: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) =>{\r\n        dispatch({type: ADD_NEW_DECK, name});\r\n        try {\r\n            await Api.addDeck(name)\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\nexport const deleteADeck = (id: number) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) =>{\r\n    try {\r\n        dispatch({type: DELETE_DECK, id});\r\n        await Api.deleteDeck(id)\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n    }","import React from \"react\";\r\nimport DecksTable from \"./DecksTable\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {addNewDeck, deleteADeck} from \"../../../bll/reducers/decksTable-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    addNewDeck: (name: string)=>void,\r\n    deleteADeck: (id: number)=>void\r\n}\r\n\r\nconst DecksTableContainer = (props: OwnPropsType) =>{\r\n\r\n    const state = useSelector((state: AppStoreType) => state.decks.decks);\r\n\r\n    return(\r\n        <DecksTable decks={state} addNewDeck={props.addNewDeck} deleteADeck={props.deleteADeck}/>\r\n    )\r\n}\r\n\r\nexport default connect(null, {\r\n    addNewDeck, deleteADeck})(DecksTableContainer)","import React from \"react\";\r\n\r\n\r\nconst CardsTable = () => {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardsTable","import React from \"react\";\r\nimport CardsTable from \"./CardsTable\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst CardsTableContainer = () => {\r\n\r\n\r\n\r\n    return (\r\n            <CardsTable />\r\n    )\r\n};\r\n\r\nexport default connect(null, {})(CardsTableContainer)","import React from \"react\";\r\nimport {Route} from \"react-router\";\r\nimport SetNewPassContainer from \"../authorization/SetNewPass-page/SetNewPassContainer\";\r\nimport styles from \"../authorization/Auth.module.css\";\r\nimport {CARDS_TABLE, DECKS_TABLE, FORGOT, PROFILE, REGISTER, SET_NEW_PASS, SIGN_IN} from \"../common/Constants\";\r\nimport SignInContainer from \"../authorization/SignIn-page/SignInContainer\";\r\nimport ForgotContainer from \"../authorization/Forgot-page/ForgotContainer\";\r\nimport RegisterContainer from \"../authorization/Register-page/RegisterContainer\";\r\nimport HeaderContainer from \"../authorization/Header/HeaderContainer\";\r\nimport Profile from \"../authorization/Profile-page/Profile\";\r\nimport DecksTableContainer from \"../settings/decks/DecksTableContainer\";\r\nimport CardsTableContainer from \"../settings/cards/CardsTableContainer\";\r\n\r\n\r\nconst Cards = () => {\r\n\r\n    return (\r\n        <>\r\n        <HeaderContainer/>\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Route path={SIGN_IN} render={() => <SignInContainer/>}/>\r\n            <Route path={REGISTER} render={() => <RegisterContainer/>}/>\r\n            <Route path={FORGOT} render={() => <ForgotContainer/>}/>\r\n            <Route path={SET_NEW_PASS} render={() => <SetNewPassContainer />}/>\r\n            <Route path={PROFILE} render={() => <Profile />}/>\r\n\r\n            <Route path={DECKS_TABLE} render={()=> <DecksTableContainer />}/>\r\n            <Route path={CARDS_TABLE} render={()=> <CardsTableContainer />} />\r\n        </div>\r\n            </>\r\n    )\r\n};\r\n\r\nexport default Cards\r\n\r\n","import React from \"react\";\r\n\r\nconst initialState = {}\r\n\r\nconst profileReducer = (state = initialState) =>{\r\nreturn state\r\n}\r\n\r\nexport default profileReducer","import {REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../ui/common/Constants\";\r\nimport {\r\n    registerInitialState,\r\n    registerSuccessActionType, setErrorRegisterPageActionType,\r\n    waitingForResponseActionType\r\n} from \"../../ui/authorization/authTypes/registerTypes\";\r\n\r\n\r\nconst initialState:registerInitialState = {\r\n    email: '',\r\n    password: '',\r\n    loading:false,\r\n    error:false,\r\n    redirect:false\r\n}\r\n\r\nconst registerReducer = (state: registerInitialState = initialState, action: registerActionType):registerInitialState => {\r\n    switch (action.type) {\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                redirect:true\r\n            }\r\n        }\r\n        case WAITING_FOR_RESPONSE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case SET_ERROR_REGISTER_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n    }\r\n    return state\r\n}\r\ntype registerActionType = registerSuccessActionType | waitingForResponseActionType | setErrorRegisterPageActionType\r\n\r\nexport default registerReducer\r\n","\r\nconst initialState = {}\r\n\r\nconst cardsTableReducer = (state = initialState, action: any) =>{\r\n\r\n    switch (action.type) {\r\n        case '':\r\n            return{\r\n                ...state\r\n            }\r\n\r\n        default: return state\r\n\r\n    }\r\n};\r\n\r\nexport default cardsTableReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport forgotReducer from \"./reducers/forgot-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport registerReducer from \"./reducers/register-reducer\";\r\nimport setNewPassReducer from \"./reducers/setNewPass-reducer\";\r\nimport signInReducer from \"./reducers/signIn-reducer\";\r\nimport decksTableReducer from \"./reducers/decksTable-reducer\";\r\nimport cardsTableReducer from \"./reducers/cardsTable-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    register: registerReducer,\r\n    setNewPass: setNewPassReducer,\r\n    signIn: signInReducer,\r\n    profile: profileReducer,\r\n    decks: decksTableReducer,\r\n    cards: cardsTableReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Cards from \"./ui/cards/Cards\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Cards/>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfAuth\":\"Auth_wrapperOfAuth__3XmyS\"};"],"sourceRoot":""}