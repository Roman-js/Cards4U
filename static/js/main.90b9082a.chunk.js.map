{"version":3,"sources":["ui/authorization/Auth.module.css","ui/play/GameField.module.css","ui/common/Common.module.css","ui/settings/decks/DecksTable.module.css","ui/settings/Search/Search.module.css","ui/settings/cards/CardsTable.module.css","ui/authorization/Header/Header.module.css","ui/common/Title.tsx","ui/common/Input.tsx","ui/common/Button.tsx","ui/common/LInk.tsx","ui/authorization/SetNewPass-page/SetNewPass.tsx","ui/common/Constants.ts","dal/api.ts","bll/reducers/setNewPass-reducer.ts","ui/authorization/SetNewPass-page/SetNewPassContainer.tsx","ui/authorization/SignIn-page/SignIn.tsx","bll/reducers/signIn-reducer.ts","ui/authorization/SignIn-page/SignInContainer.tsx","ui/authorization/Forgot-page/Forgot.tsx","bll/reducers/forgot-reducer.ts","ui/authorization/Forgot-page/ForgotContainer.tsx","ui/authorization/Register-page/Register.tsx","ui/authorization/Register-page/RegisterContainer.tsx","ui/authorization/Header/Header.tsx","ui/authorization/Header/HeaderContainer.tsx","bll/reducers/profile-reducer.ts","ui/authorization/Profile-page/Profile.tsx","bll/reducers/decksTable-reducer.ts","bll/reducers/searchReducer.ts","ui/settings/Search/Strip.tsx","ui/settings/Search/Search.tsx","ui/settings/Search/SearchContainer.tsx","ui/settings/decks/DecksTable.tsx","bll/reducers/cardsTable-reducer.ts","ui/settings/decks/DecksTableContainer.tsx","ui/settings/cards/CardsTable.tsx","ui/settings/cards/CardsTableContainer.tsx","ui/play/GameField.tsx","ui/play/GameFieldContainer.tsx","ui/cards/Cards.tsx","bll/reducers/register-reducer.ts","bll/store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Title","props","title","Input","className","styles","forInput","onFocus","onBlur","value","onChange","placeholder","type","Button","forButton","typeOfButton","onClick","actionOfButton","disabled","nameOfButton","Link","forLinks","to","way","wordOfLink","SetNewPass","useState","newPass","setNewPass","repeatNewPass","setRepeatNewPass","token","useParams","toCleanField","toCleanErrorField","wrapperOfAuth","error","loading","e","currentTarget","setValueOfSetNewPassForm","WAITING_FOR_RESPONSE","SET_ERROR_REGISTER_PAGE","instance","axios","create","baseURL","authApi","email","password","rememberMe","post","then","response","localStorage","removeItem","setItem","data","html1","html2","res","console","log","authToken","catch","fal","resetPasswordToken","decksApi","cardsPack","id","getItem","delete","name","minValue","maxValue","get","deck","put","updatedCardsPack","cardsApi","card","updatedCard","initialState","setNewPassReducer","state","action","connect","repeatPassword","dispatch","getStore","a","length","useDispatch","useSelector","SignIn","setEmail","setPassword","setRememberMe","checked","setSignInFormValues","redirect","signInReducer","_id","signIn","Forgot","toCleanError","setForgotPassword","emailApproved","forgotReducer","forgot","Register","setRegisterFormValues","cancelErrorPosition","setRepeatPassword","RegisterContainer","register","err","Header","wrapperOfHeader","login","tokenIsClear","HeaderContainer","auth","profile","profileReducer","approveAuth","getState","approve","decks","grade","path","rating","shots","decksTableReducer","newCardsPack","filter","cardPacks","map","updateCardsDeck","getDecks","search","searchingReducer","setSearchName","setSearchingNameSuccess","Strip","style","display","justifyContent","flexWrap","margin","values","this","step","min","max","handleStrip","renderTrack","children","onMouseDown","onTouchStart","height","width","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","alignItems","boxShadow","toFixed","React","Search","setName","setValue","s","settings","input","strip","button","DecksTable","setRating","update","setUpdate","changeName","setChangeName","updatedDeck","setUpdatedDeck","Table","addNewDeck","cells","key","onUpdateDeck","deleteADeck","getCards","updateCard","fieldOfUpdate","UpdatedDeckSuccess","updateDeck","theCards","cardsPack_id","question","answer","cardsTableReducer","cards","updateCards","userId","user_id","useEffect","CardsTable","setQuestion","setAnswer","setGrade","changeQuestion","setChangeQuestion","changeAnswer","setChangeAnswer","setUpdatedCard","addNewCard","onUpdateCard","deleteACard","updatedCardSuccess","result","deletedCard","GameField","setChecked","gameFieldWrapper","cardQuestion","textQuestion","cardAnswerOn","cardAnswerOff","textAnswer","nextCard","cardOfNumber","setCardOfNumber","minGrade","reduce","acc","el","undefined","c","newGrade","Math","floor","random","Cards","render","registerReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.90b9082a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfAuth\":\"Auth_wrapperOfAuth__3XmyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardQuestion\":\"GameField_cardQuestion__1N3ex\",\"textQuestion\":\"GameField_textQuestion__2QdZd\",\"textAnswer\":\"GameField_textAnswer__3OGu-\",\"cardAnswerOn\":\"GameField_cardAnswerOn__32jJV\",\"gameFieldWrapper\":\"GameField_gameFieldWrapper__2IgWR\",\"cardAnswerOff\":\"GameField_cardAnswerOff__1Vzc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forLinks\":\"Common_forLinks__1l5g1\",\"forInput\":\"Common_forInput__3E9bg\",\"forButton\":\"Common_forButton__3VnRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckBorder\":\"DecksTable_DeckBorder__n3nip\",\"Table\":\"DecksTable_Table__2kI9u\",\"cells\":\"DecksTable_cells__1E7On\",\"updateCard\":\"DecksTable_updateCard__1yuSK\",\"fieldOfUpdate\":\"DecksTable_fieldOfUpdate__1A4nG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Search_settings__2FJo-\",\"button\":\"Search_button__k6Vd9\",\"input\":\"Search_input__2E0SQ\",\"strip\":\"Search_strip__3Gbiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeckBorder\":\"CardsTable_DeckBorder__1BYyA\",\"Table\":\"CardsTable_Table__14Ccy\",\"cells\":\"CardsTable_cells__3dB0k\",\"updateCard\":\"CardsTable_updateCard__18pZt\",\"fieldOfUpdate\":\"CardsTable_fieldOfUpdate__2HBzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperOfHeader\":\"Header_wrapperOfHeader__3r8LB\"};","import React from \"react\";\r\n\r\nconst Title = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n\r\ntype OwnPropsType = {\r\n    title: string\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    value?: string,\r\n    checked?: boolean,\r\n    placeholder?: string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void, ////add '?' for\r\n    type: 'text' | 'password' | 'radio' | 'checkbox' | 'email',\r\n    onBlur?: ()=>void,\r\n    onFocus?: (e: React.FocusEvent)=>void\r\n}\r\n\r\nconst Input = (props: OwnPropsType) => {\r\n\r\n    return (\r\n        <input className={styles.forInput}\r\n               onFocus={props.onFocus}\r\n               onBlur={props.onBlur}\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               placeholder={props.placeholder}\r\n               type={props.type}/>\r\n    )\r\n};\r\n\r\nexport default Input\r\n\r\n","import React from \"react\";\r\nimport styles from './Common.module.css'\r\n\r\nconst Button = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <button\r\n            className={styles.forButton}\r\n            type={props.typeOfButton}\r\n            onClick={props.actionOfButton}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.nameOfButton}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n\r\ntype OwnPropsType = {\r\n    typeOfButton: \"button\" | \"submit\" | \"reset\" | undefined,\r\n    actionOfButton: ()=>void,\r\n    nameOfButton: string,\r\n    disabled?: boolean\r\n\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './Common.module.css'\r\n\r\ntype OwnPropsType = {\r\n    way: string,\r\n    wordOfLink: string\r\n}\r\nconst Link = (props: OwnPropsType) =>{\r\n\r\n    return(\r\n        <NavLink className={styles.forLinks} to={props.way}>{props.wordOfLink}</NavLink>\r\n    )\r\n};\r\n\r\nexport default Link\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {useParams} from \"react-router\";\r\n\r\ntype OwnPropsType = {\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined) => void\r\n    error: string\r\n    loading: boolean | null\r\n    disabled: boolean\r\n    toCleanErrorField: ()=>void\r\n}\r\n\r\nconst SetNewPass = (props: OwnPropsType) => {\r\n\r\n    const [newPass, setNewPass] = useState('');\r\n    const [repeatNewPass, setRepeatNewPass] = useState('');\r\n    const {token} = useParams();\r\n\r\n    const valueOfInputNewPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPass(e.currentTarget.value)\r\n    };\r\n    const valueOfInputRepeatPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatNewPass(e.currentTarget.value)\r\n    };\r\n    const sendToCheckPassword = () => {\r\n        props.setValueOfSetNewPassForm(newPass, repeatNewPass, token);\r\n        setNewPass('');\r\n        setRepeatNewPass('');\r\n    };\r\n    const toCleanField = () =>{\r\n        props.toCleanErrorField()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='Set New Password'/>\r\n            {props.error?<div>{props.error}</div>:null}\r\n            {props.loading?<div>Loading...</div>:null}\r\n            <div><Input placeholder={'new pass'}\r\n                        type={'password'}\r\n                        value={newPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputNewPass}/></div>\r\n            <div><Input placeholder={'repeat pass'}\r\n                        type={'password'}\r\n                        value={repeatNewPass}\r\n                        onBlur={toCleanField}\r\n                        onFocus={toCleanField}\r\n                        onChange={valueOfInputRepeatPass}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         disabled={props.disabled}\r\n                         actionOfButton={sendToCheckPassword\r\n                         } nameOfButton='Set new password'/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SetNewPass\r\n","//constants for paths\r\n\r\nexport const SIGN_IN = '/sign-in';\r\nexport const REGISTER = '/register';\r\nexport const FORGOT = '/forgot';\r\nexport const SET_NEW_PASS = '/set-new-pass/:token';\r\nexport const PROFILE = '/profile';\r\n\r\nexport const CARDS_TABLE = '/cards-table';\r\nexport const DECKS_TABLE = '/decks-table';\r\nexport const PLAY = '/play';\r\n\r\n//constants for reducers\r\n\r\nexport const REGISTER_SUCCESS = 'auth/register/REGISTER-SUCCESS';\r\nexport const WAITING_FOR_RESPONSE = 'auth/register/WAITING-FOR-RESPONSE';\r\nexport const SET_ERROR_REGISTER_PAGE = 'auth/register/SET-ERROR-REGISTER-PAGE';\r\n\r\n\r\n//constants for SignIn-page\r\nexport const SET_LOADING_DATA = 'SET-LOADING-DATA';\r\nexport const SET_SIGN_IN_FORM_VALUES = 'SET-SIGN-IN-FORM-VALUES';\r\nexport const IS_TOKEN_HAS = 'IS-TOKEN-HAS';\r\nexport const SET_ERROR_SIGN_IN_PAGE = 'SET-ERROR-SIGN-IN-PAGE';\r\nexport const REDIRECT_OFF = 'REDIRECT-OFF';\r\n\r\n//constants for Forgot-page\r\nexport const SET_LOADING_DATA_FORGOT_PAGE = 'SET-LOADING-DATA-FORGOT-PAGE';\r\nexport const SET_VALUE_ERROR_FORGOT_PAGE = 'SET-VALUE-ERROR-FORGOT-PAGE';\r\nexport const RESTORE_FORGOT_PASSWORD = 'RESTORE-FORGOT-PASSWORD';\r\n\r\n//constants for SetNewPass-page\r\nexport const SET_LOADING_VALUE = 'SET-LOADING-VALUE';\r\nexport const SET_NEW_TOKEN = 'SET-NEW-TOKEN';\r\nexport const SHOW_ERROR = 'SHOW-ERROR';\r\nexport const TO_CLEAN_ERROR_FIELD = 'TO-CLEAN-ERROR-FIELD';\r\n\r\n//constants for DecksTable\r\n\r\nexport const ADD_NEW_DECK = 'ADD-NEW-DECK';\r\nexport const DELETE_DECK = 'DELETE-DECK';\r\nexport const GET_DECKS = 'GET-DECKS';\r\nexport const UPDATE_DECK = 'UPDATE-DECK';\r\n\r\n//constants for CardsTable\r\n\r\nexport const ADD_NEW_CARD = 'ADD-NEW-CARD';\r\nexport const DELETE_CARD = 'DELETE-CARD';\r\nexport const GET_CARDS = 'GET-CARDS';\r\nexport const UPDATE_CARD = 'UPDATE-CARD';\r\n\r\n//constants for ProfilePage\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN-SUCCESS';","import axios, { AxiosRequestConfig } from 'axios'\r\nimport {CardsPackType, CardsPackUpdateType} from \"../ui/settings/decks/decksType\";\r\n\r\nconst instance = axios.create({\r\n    // withCredentials: true,\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n});\r\n\r\nexport const authApi = {\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(\"auth/login\", {email, password, rememberMe})\r\n            .then(response => {\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    forgotPass(email: string, html1: string, html2: string) {\r\n        return instance.post('auth/forgot', {email, html1, html2})\r\n            .then(res => {\r\n                return console.log(res)\r\n            })\r\n        //.catch(fal=>console.log(fal))\r\n    },\r\n\r\n    register(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password})\r\n            .then(res => res)\r\n    },\r\n\r\n    authMe(authToken: string | null) {\r\n        //debugger\r\n        return instance.post('auth/me', {token: authToken})\r\n            .then(response=>{console.log(\r\n                response.data);\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n            })\r\n            .catch((fal) => {\r\n                return fal\r\n            })\r\n    },\r\n\r\n    setNewPass(resetPasswordToken: string | undefined, password: string) {\r\n        return instance.post('auth/set-new-password', {resetPasswordToken, password})\r\n            .then(res => res)\r\n    }\r\n};\r\n\r\nexport const decksApi = {\r\n\r\n    addDeck(cardsPack: CardsPackType, token: string | null) {\r\n        return instance.post('cards/pack', {cardsPack, token})\r\n            .then(response => {\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n    deleteDeck(id: string) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.delete(`cards/pack?token=${token}&id=${id}`)\r\n            .then(response=>{console.log(response)\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n                return response\r\n            })\r\n\r\n    },\r\n    getDeck(token: string | null, name:string, minValue:number, maxValue:number) {\r\n        return instance.get(`cards/pack?token=${token}`+(minValue && maxValue && `&min=${minValue}&max=${maxValue}`+ name && `&packName=${name}`))\r\n            // +(name && `&packName=${name}`))\r\n            .then(response=>{\r\n                console.log(response.data);\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n    updateDeck(deck: CardsPackUpdateType){\r\n        debugger\r\n       const token =  localStorage.getItem('auth-token');\r\n        return instance.put('cards/pack', {cardsPack: deck, token})\r\n            .then(response => {\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n                return response.data.updatedCardsPack\r\n            })\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const cardsApi = {\r\n\r\n    addCard(card: any) {\r\n        return instance.post('cards/card', card)\r\n            .then(response=> {\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n                return response.data})\r\n\r\n    },\r\n\r\n    deleteCard(id: string ) {\r\n        const token = localStorage.getItem('auth-token');\r\n        return instance.delete(`cards/card?token=${token}&id=${id}`)\r\n            .then(response=>{\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    getCards(id: string){\r\n        const token = localStorage.getItem('auth-token');\r\n        console.log(id);\r\n        return instance.get(`cards/card?cardsPack_id=${id}&token=${token}`)\r\n            .then(response=>{\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n                localStorage.removeItem('cardsPack_id');\r\n                localStorage.setItem('cardsPack_id', id);\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    updateCard(card: any){\r\n        const token =  localStorage.getItem('auth-token');\r\n        return instance.put('cards/card', {card, token})\r\n            .then(response=>{\r\n                debugger\r\n                localStorage.removeItem('auth-token');\r\n                localStorage.setItem('auth-token', response.data.token);\r\n                return response.data.updatedCard\r\n            })\r\n    }\r\n\r\n};\r\n\r\n","import React from \"react\";\r\nimport {SET_LOADING_VALUE, SET_NEW_TOKEN, SHOW_ERROR, TO_CLEAN_ERROR_FIELD} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: initialStateType = {\r\n    error: '',\r\n    token: '',\r\n    loading: null,\r\n    disabled: false\r\n}\r\n\r\ntype initialStateType = {\r\n    error: string | null,\r\n    token: string | undefined\r\n    loading: boolean | null\r\n    disabled: boolean\r\n}\r\n\r\nconst setNewPassReducer = (state = initialState, action: any ) =>{\r\n\r\n    switch (action.type) {\r\n\r\n        case SHOW_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case SET_NEW_TOKEN: {\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case SET_LOADING_VALUE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case TO_CLEAN_ERROR_FIELD: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n\r\n};\r\n\r\n\r\n//thunks\r\n\r\nexport const setValueOfSetNewPassForm = (password: string, repeatPassword: string, token: string | undefined) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n        if (password === repeatPassword && password.length > 7) {\r\n            dispatch({type: SET_LOADING_VALUE, loading: true, disabled: true});\r\n              await authApi.setNewPass(token, password);\r\n                try  {\r\n                    dispatch({type: SET_NEW_TOKEN, token: token});\r\n                    dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                }\r\n\r\n                catch(e) {\r\n                        console.log(e.response);\r\n                        dispatch({type: SHOW_ERROR, error: e.response.data.error})\r\n                        dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n                    }\r\n\r\n        } else {\r\n            dispatch({\r\n                type: SHOW_ERROR,\r\n                error: 'Incorrect Password! Password should have min 8 values and each one fields should be same!'\r\n            })\r\n        }\r\n    };\r\n\r\n\r\nexport default setNewPassReducer","import React from \"react\";\r\nimport SetNewPass from \"./SetNewPass\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {useParams} from \"react-router\";\r\nimport {SET_LOADING_VALUE, SET_NEW_TOKEN, SHOW_ERROR, TO_CLEAN_ERROR_FIELD} from \"../../common/Constants\";\r\nimport {setValueOfSetNewPassForm} from \"../../../bll/reducers/setNewPass-reducer\";\r\n\r\n\r\ntype OwnPropsType={\r\n    setValueOfSetNewPassForm: (password: string, repeatPassword: string, token: string | undefined)=>void\r\n}\r\nconst SetNewPassContainer = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.setNewPass);\r\n\r\n    //const {token} = useParams();\r\n\r\n    // const setValueOfSetNewPassForm = (password: string, repeatPassword: string, token: string | undefined) => {\r\n    //\r\n    //     if (password === repeatPassword && password.length > 7) {\r\n    //         dispatch({type: SET_LOADING_VALUE, loading: true, disabled: true});\r\n    //         authApi.setNewPass(token, password)\r\n    //             .then(res => {\r\n    //                 dispatch({type: SET_NEW_TOKEN, token: token});\r\n    //                 dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n    //             })\r\n    //\r\n    //             .catch(fal => {\r\n    //                     console.log(fal.response);\r\n    //                     dispatch({type: SHOW_ERROR, error: fal.response.data.error})\r\n    //                     dispatch({type: SET_LOADING_VALUE, loading: false, disabled: false})\r\n    //                 }\r\n    //             )\r\n    //     } else {\r\n    //         dispatch({\r\n    //             type: SHOW_ERROR,\r\n    //             error: 'Incorrect Password! Password should have min 8 values and each one fields should be same!'\r\n    //         })\r\n    //     }\r\n    // };\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: TO_CLEAN_ERROR_FIELD, error: null})\r\n    };\r\n\r\n\r\n    return (\r\n        <SetNewPass\r\n            setValueOfSetNewPassForm={props.setValueOfSetNewPassForm}\r\n            error={state.error}\r\n            loading={state.loading}\r\n            disabled={state.disabled}\r\n            toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n}\r\n\r\nexport default connect(null, {setValueOfSetNewPassForm})(SetNewPassContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Link from \"../../common/LInk\";\r\nimport Button from \"../../common/Button\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean) => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    toCleanErrorField: () => void\r\n}\r\n\r\n\r\nconst SignIn: React.FC<OwnPropsType> = (props) => {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    //пример UseSelector Достаем данные из store\r\n    //const valueOfInputEmail = useSelector((state: AppStoreType) => state.signIn.email);\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setEmail(e.currentTarget.value)\r\n    };\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setPassword(e.currentTarget.value)\r\n    };\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n       !rememberMe ? setRememberMe(true) : setRememberMe(false)\r\n    };\r\n\r\n    const sendSignInFormValues = () => {\r\n            props.setSignInFormValues(email, password, rememberMe)\r\n    };\r\n    const toCleanErrorField = () => {\r\n      props.toCleanErrorField()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'sign-in'}/>\r\n            {props.loading ? <div>loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input type=\"text\"\r\n                        placeholder='email'\r\n                        value={email}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changeEmail}/></div>\r\n            <div><Input type=\"password\"\r\n                        placeholder='password'\r\n                        value={password}\r\n                        onFocus={toCleanErrorField}\r\n                        onBlur={toCleanErrorField}\r\n                        onChange={changePassword}/></div>\r\n            <div><Link way={'/forgot'}\r\n                       wordOfLink={'Forgot password?'}/></div>\r\n            <div><Input type={\"checkbox\"}\r\n                        checked={rememberMe}\r\n                        onChange={changeRememberMe}/>Remember Me\r\n            </div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={sendSignInFormValues}\r\n                         disabled={props.disabled}\r\n                         nameOfButton='Sign In'/></div>\r\n            <div><Link way={'/register'} wordOfLink='Registration'/></div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default SignIn\r\n","import React from \"react\";\r\nimport {\r\n    IS_TOKEN_HAS, REDIRECT_OFF,\r\n    SET_ERROR_SIGN_IN_PAGE,\r\n    SET_LOADING_DATA,\r\n    SET_SIGN_IN_FORM_VALUES\r\n} from \"../../ui/common/Constants\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\nconst initialState: signInitialStateType = {\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false,\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    token: '',\r\n    redirect: false,\r\n    authToken: ''\r\n}\r\n\r\nexport type signInitialStateType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean,\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n    token: string\r\n    redirect: false,\r\n    authToken?:string\r\n}\r\n\r\nconst signInReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case SET_SIGN_IN_FORM_VALUES: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                rememberMe: action.rememberMe,\r\n                token: action.token,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_LOADING_DATA: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n                disabled: action.disabled,\r\n                redirect: action.redirect\r\n            }\r\n        }\r\n        case SET_ERROR_SIGN_IN_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n\r\n            }\r\n        }\r\n        case IS_TOKEN_HAS: {\r\n            return {\r\n                ...state,\r\n                authToken: action.authToken\r\n            }\r\n        }\r\n        case REDIRECT_OFF:{\r\n            return {\r\n                ...state,\r\n                redirect: false\r\n            }\r\n        }\r\n            default: return state\r\n    }\r\n\r\n};\r\n\r\n//thunks\r\n\r\nexport const setSignInFormValues = (email: string, password: string, rememberMe: boolean) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n    dispatch({type: SET_LOADING_DATA, loading: true, disabled: true});\r\n    await authApi.login(email, password, rememberMe)\r\n        .then(res => {\r\n            dispatch({type: SET_LOADING_DATA, loading: false, disabled: false});\r\n            dispatch({\r\n                type: SET_SIGN_IN_FORM_VALUES,\r\n                email: res.email,\r\n                password: password,\r\n                rememberMe: res.rememberMe,\r\n                token: res.token,\r\n                redirect: true\r\n            });\r\n            localStorage.setItem('auth-token', res.token);\r\n            localStorage.setItem('user-id', res._id);\r\n\r\n            const authToken = localStorage.getItem('auth-token');\r\n            dispatch({type: IS_TOKEN_HAS, authToken})\r\n            //console.log(authToken)\r\n\r\n        })\r\n        .catch(fal => {\r\n                console.log(fal.response);\r\n                const error = fal.response.data.error;\r\n                dispatch({type: SET_LOADING_DATA, loading: false, disabled: false, redirect: false});\r\n                dispatch({type: SET_ERROR_SIGN_IN_PAGE, error})\r\n            }\r\n        );\r\n};\r\n\r\nexport default signInReducer\r\n","import React from \"react\";\r\nimport SignIn from \"./SignIn\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {SET_ERROR_SIGN_IN_PAGE} from \"../../common/Constants\";\r\nimport {setSignInFormValues} from \"../../../bll/reducers/signIn-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    setSignInFormValues: (email: string, password: string, rememberMe: boolean)=>void\r\n}\r\nconst SignInContainer = (props: OwnPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector((state: AppStoreType) => state.signIn);\r\n    //const disable = useSelector((state: AppStoreType) => state.signIn.disabled)\r\n\r\n\r\n    const toCleanErrorField = () => {\r\n        dispatch({type: SET_ERROR_SIGN_IN_PAGE, error: null})\r\n    };\r\n    return (\r\n\r\n        state.redirect ? <Redirect to='/profile'/> :\r\n            <SignIn setSignInFormValues={props.setSignInFormValues}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}\r\n                    toCleanErrorField={toCleanErrorField}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setSignInFormValues})(SignInContainer)\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Input from \"../../common/Input\";\r\nimport styles from '../Auth.module.css'\r\n\r\ntype OwnPropsType = {\r\n    setForgotPassword: (email: string) => void\r\n    toCleanError: () => void\r\n    loading: boolean\r\n    disabled: boolean\r\n    error: string | null\r\n}\r\nconst Forgot = (props: OwnPropsType) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const valueOfInputEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    };\r\n    const restoreForgotPassword =  () => {\r\n         props.setForgotPassword(email);\r\n        setEmail('')\r\n    };\r\n    const toCleanError = () => {\r\n         props.toCleanError()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title='forgot'/>\r\n            {props.loading ? <div>Loading...</div> : null}\r\n            {props.error ? <div>{props.error}</div> : null}\r\n            <div><Input placeholder='email address'\r\n                        type={\"text\"}\r\n                        value={email}\r\n                        onBlur={toCleanError}\r\n                        onFocus={toCleanError}\r\n                        onChange={valueOfInputEmail}/></div>\r\n            <div><Button typeOfButton={\"button\"}\r\n                         actionOfButton={restoreForgotPassword}\r\n                         nameOfButton='Send email'\r\n                         disabled={props.disabled}/></div>\r\n            <div><Link way={'/sign-in'} wordOfLink='Sign In'/></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Forgot","import React from \"react\";\r\nimport {\r\n    RESTORE_FORGOT_PASSWORD,\r\n    SET_LOADING_DATA_FORGOT_PAGE,\r\n    SET_VALUE_ERROR_FORGOT_PAGE\r\n} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {authApi} from \"../../dal/api\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    loading: false,\r\n    disabled: false,\r\n    error: null,\r\n    emailApproved: false\r\n}\r\n\r\nconst forgotReducer = (state = initialState, action: any) =>{\r\n   switch (action.type) {\r\n       case RESTORE_FORGOT_PASSWORD: {\r\n         return {\r\n             ...state, email: action.email\r\n         }\r\n       }\r\n       case SET_LOADING_DATA_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               loading: action.loading,\r\n               disabled: action.disabled,\r\n               emailApproved: action.emailApproved\r\n           }\r\n       }\r\n       case SET_VALUE_ERROR_FORGOT_PAGE: {\r\n           return {\r\n               ...state,\r\n               error: action.error\r\n           }\r\n       }\r\n           default: return state\r\n   }\r\n\r\n}\r\n\r\nconst html1 = \"<a href=http://localhost:3000/template-typescript#/set-new-pass/\";\r\nconst html2 = \">reset-password-link</a>\";\r\n\r\n//thunks\r\nexport const setForgotPassword = (email: string) =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n\r\n        dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: true, disabled: true});\r\n        try {\r\n            const data = await authApi.forgotPass(email, html1, html2);\r\n            console.log(data);\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false, emailApproved: true});\r\n            dispatch({type: RESTORE_FORGOT_PASSWORD, email})\r\n        } catch (e) {\r\n            console.log(e.response.data.error);\r\n            const error = e.response.data.error;\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: error})\r\n            dispatch({type: SET_LOADING_DATA_FORGOT_PAGE, loading: false, disabled: false})\r\n\r\n        }\r\n\r\n    };\r\n\r\nexport const toCleanError = () =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n        getStore: AppStoreType\r\n    ) => {\r\n        try {\r\n            dispatch({type: SET_VALUE_ERROR_FORGOT_PAGE, error: null})\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n\r\nexport default forgotReducer","import React from \"react\";\r\nimport Forgot from \"./Forgot\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {Redirect} from \"react-router\";\r\nimport {setForgotPassword, toCleanError} from \"../../../bll/reducers/forgot-reducer\";\r\n\r\n\r\nconst ForgotContainer = (props: any) => {\r\n\r\n    const state = useSelector((state: AppStoreType) => state.forgot);\r\n\r\n    return (\r\n        !state.emailApproved ?\r\n            <Forgot setForgotPassword={props.setForgotPassword}\r\n                    toCleanError={props.toCleanError}\r\n                    loading={state.loading}\r\n                    disabled={state.disabled}\r\n                    error={state.error}/> :\r\n            <Redirect to='/set-new-pass/:token'/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {setForgotPassword, toCleanError})(ForgotContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport Link from \"../../common/LInk\";\r\nimport Title from \"../../common/Title\";\r\nimport styles from \"../Auth.module.css\";\r\nimport {SIGN_IN} from \"../../common/Constants\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\ntype OwnPropsType = {\r\n    setRegisterFormValues: (email: string, password: string, repeatPassword: string) => void,\r\n    loading: boolean,\r\n    error:boolean,\r\n    cancelErrorPosition:()=>void\r\n}\r\nconst Register: React.FC<OwnPropsType> = ({setRegisterFormValues, loading, error, cancelErrorPosition}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    console.log(setRegisterFormValues)\r\n\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const changeRepeatPassword = (e: ChangeEvent<HTMLInputElement>) => setRepeatPassword(e.currentTarget.value)\r\n\r\n    const toCleanErrorField = () => {\r\n        return cancelErrorPosition()\r\n    }\r\n\r\n    const sendSignInFormValues = () => setRegisterFormValues(email, password, repeatPassword)\r\n    return (\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Title title={'Register'}/>\r\n            {loading && <div>wait</div>}\r\n            {error && <label >{error}</label>}\r\n                <div><Input placeholder={'email'}\r\n                            type={\"email\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeEmail}/>\r\n                </div>\r\n                <div><Input placeholder={'password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changePassword}/>\r\n                </div>\r\n                <div><Input placeholder={'repeat password'}\r\n                            type={\"password\"}\r\n                            onBlur={toCleanErrorField}\r\n                            onFocus={toCleanErrorField}\r\n                            onChange={changeRepeatPassword}/>\r\n                </div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={sendSignInFormValues} nameOfButton={'Register'}/>\r\n            <Link way={SIGN_IN} wordOfLink='Sign In'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {PROFILE, REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../common/Constants\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport Register from \"./Register\";\r\nimport {Redirect} from \"react-router\";\r\nimport {authApi} from \"../../../dal/api\";\r\n\r\n\r\nconst RegisterContainer: React.FC = (props) => {\r\n    console.log(props)\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state: AppStoreType) => state.register)\r\n\r\n    const setRegisterFormValues = (email: any, password: string, repeatPassword: string) => {\r\n        if (password !== repeatPassword) {\r\n            let error = 'fields password and repeat password should be the same'\r\n            dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n        } else {\r\n            let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n            if (password.length <= 7 && email !== correctEmail) {\r\n                let error = 'your email of password is not valid'\r\n                dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n            } else {\r\n                dispatch({type: WAITING_FOR_RESPONSE, loading: true})\r\n                return authApi.register(email, password)\r\n                    .then(res => {\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect:true})\r\n                    })\r\n                    .catch(err => {\r\n                        let error = 'your email is invalid or is already registered'\r\n                        dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n                        dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n                    })\r\n            }\r\n        }\r\n    };\r\n    const cancelErrorPosition = () => dispatch({type: SET_ERROR_REGISTER_PAGE, error: null})\r\n    return (\r\n        <>\r\n            {state.redirect && <Redirect to={PROFILE}/>}\r\n            <Register setRegisterFormValues={setRegisterFormValues}\r\n                      loading={state.loading}\r\n                      error={state.error}\r\n                      cancelErrorPosition={cancelErrorPosition}/>\r\n        </>\r\n    )\r\n};\r\nexport default RegisterContainer\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Link from \"../../common/LInk\";\r\nimport styles from './Header.module.css'\r\nimport {CARDS_TABLE, DECKS_TABLE, FORGOT, PROFILE, REGISTER, SET_NEW_PASS, SIGN_IN} from \"../../common/Constants\";\r\nimport Button from \"../../common/Button\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    login: boolean,\r\n    tokenIsClear: ()=>void\r\n}\r\nconst Header = (props: OwnPropsType) => {\r\n\r\n  const tokenIsClear = () =>{\r\n      props.tokenIsClear();\r\n  };\r\n\r\n\r\n    return (\r\n        <div className={styles.wrapperOfHeader}>\r\n            <Link way={SIGN_IN} wordOfLink={'sign-in'}/>\r\n            <Link way={REGISTER} wordOfLink={'register'}/>\r\n            <Link way={FORGOT} wordOfLink={'forgot'}/>\r\n            <Link way={SET_NEW_PASS} wordOfLink={'set-new-pass'}/>\r\n            <Link way={PROFILE} wordOfLink={'profile'}/>\r\n            <Link way={DECKS_TABLE} wordOfLink={'decks'}/>\r\n            {/*<Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>*/}\r\n           { props.login? <Button typeOfButton={'button'} actionOfButton={tokenIsClear} nameOfButton={'logout'}/>:null}\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default Header\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Header from \"./Header\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {LOGIN_SUCCESS, REDIRECT_OFF} from \"../../common/Constants\";\r\n\r\nconst HeaderContainer = () =>{\r\n\r\n\r\n\r\n    const auth = useSelector((state:AppStoreType)=>state.profile.login);\r\n    const dispatch = useDispatch();\r\n\r\n    //let authToken = localStorage.getItem('auth-token');\r\n    //useEffect(()=>{auth?setLogin(true):setLogin(false)}, [authToken]);\r\n\r\n\r\n    let tokenIsClear = () => {\r\n        localStorage.removeItem('auth-token');\r\n        localStorage.removeItem('user-id');\r\n        dispatch({type: LOGIN_SUCCESS, login: false});\r\n        dispatch({type: REDIRECT_OFF})\r\n\r\n    };\r\n    return(\r\n        <Header login={auth} tokenIsClear={tokenIsClear}/>\r\n    )\r\n};\r\n\r\nexport default HeaderContainer\r\n","import React from \"react\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {LOGIN_SUCCESS} from \"../../ui/common/Constants\";\r\n\r\nconst initialState = {\r\n    login: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: any) =>{\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS: {\r\n            return {...state, login: action.login}\r\n        }\r\n\r\n    }\r\n\r\nreturn  state\r\n};\r\n\r\nexport default profileReducer\r\n\r\n//thunks\r\n\r\nexport const approveAuth = (login: boolean) =>\r\n\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType)=>{\r\n        let authToken = localStorage.getItem('auth-token');\r\n        await authApi.authMe(authToken)\r\n            .then(res=>{\r\n                dispatch({type: LOGIN_SUCCESS, login: login})\r\n            })\r\n\r\n    }\r\n","import React, {useEffect} from \"react\";\r\nimport {authApi} from \"../../../dal/api\";\r\nimport {connect} from \"react-redux\";\r\nimport {approveAuth} from \"../../../bll/reducers/profile-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    approveAuth: (login: boolean)=>void\r\n}\r\n\r\nconst Profile = (props:OwnPropsType) => {\r\n\r\n    let authToken = localStorage.getItem('auth-token');\r\n    const approve = !!authToken; //authToken?true:false;\r\n    props.approveAuth(approve);\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n             <h1>Profile page</h1>\r\n            {/*//!authToken? <Redirect to={SIGN_IN}/>:<div></div>*/}\r\n            {/*    // <Redirect to={SIGN_IN}/>}*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {approveAuth})(Profile)\r\n","import {ADD_NEW_DECK, DELETE_DECK, GET_DECKS, UPDATE_DECK} from \"../../ui/common/Constants\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {decksApi} from \"../../dal/api\";\r\nimport {CardsPackUpdateType} from \"../../ui/settings/decks/decksType\";\r\n\r\n\r\nconst initialState = {\r\n    decks: [\r\n        {\r\n            grade: 0,\r\n            name: \"7777\",\r\n            path: \"/def\",\r\n            rating: 0,\r\n            shots: 0,\r\n            type: \"pack\",\r\n            _id: \"5ebd1e6d5af2c800049590de\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst decksTableReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_DECK:\r\n            return {\r\n                ...state,\r\n                decks: [...state.decks, action.newCardsPack]\r\n            };\r\n\r\n        case DELETE_DECK:\r\n            return {\r\n                ...state, decks: state.decks.filter(deck => deck._id !== action._id)\r\n            };\r\n\r\n        case GET_DECKS: {\r\n            return {\r\n                ...state, decks: action.cardPacks\r\n            }\r\n        }\r\n\r\n        case UPDATE_DECK:\r\n            return {\r\n                ...state, decks: state.decks.map(deck=>{\r\n                    return deck._id === action.updateCardsDeck._id ? action.updateCardsDeck: deck\r\n                })\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default decksTableReducer\r\n\r\n////////////////////////////////////////thunks\r\nexport const addNewDeck = (name: string, rating: number) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        const token = localStorage.getItem('auth-token');\r\n        const userId = localStorage.getItem('user-id');\r\n\r\n        await decksApi.addDeck({name: name, user_id: userId, rating: rating}, token)\r\n            .then(response => {\r\n                const newCardsPack = response.newCardsPack;\r\n                dispatch({type: ADD_NEW_DECK, newCardsPack});\r\n                console.log(response);\r\n            })\r\n\r\n    };\r\n\r\nexport const deleteADeck = (_id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n\r\n        await decksApi.deleteDeck(_id)\r\n            .then(data=>{\r\n                dispatch({type: DELETE_DECK, _id});\r\n            })\r\n    };\r\n\r\nexport const getDecks = () =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState:() => AppStoreType) => {\r\n        const token = localStorage.getItem('auth-token');\r\n        const {name} = getState().search\r\n        const {minValue, maxValue} = getState().search\r\n       await decksApi.getDeck(token, name, minValue, maxValue)\r\n           .then(data=>{\r\n               localStorage.removeItem('auth-token');\r\n               localStorage.setItem('auth-token', data.token);\r\n\r\n               const cardPacks = data.cardPacks;\r\n               dispatch({type: GET_DECKS, cardPacks})\r\n           })\r\n    };\r\n\r\nexport const updateDeck = (deck: CardsPackUpdateType)=>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n    await decksApi.updateDeck(deck)\r\n        .then(updateCardsDeck=>{\r\n            dispatch({type: UPDATE_DECK, updateCardsDeck})\r\n        })\r\n\r\n    };\r\n","import {getDecks} from \"./decksTable-reducer\";\r\n\r\n\r\nconst initialState: any = {\r\n    name: '',\r\n    minValue: 70,\r\n    maxValue: 130\r\n};\r\n\r\n\r\nconst searchingReducer = (state = initialState, action: any): any => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SET_SEARCHING_NAME': {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                minValue:action.minValue,\r\n                maxValue:action.maxValue\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\nexport default searchingReducer\r\n\r\n\r\n//action creators\r\n\r\nexport const setSearchingNameSuccess = (name: string, minValue: number, maxValue: number): any =>\r\n    ({type: 'SET_SEARCHING_NAME', name, minValue, maxValue})\r\n\r\n//thunks\r\n\r\nexport const setSearchName = (name: string, minValue: number, maxValue: number) => (dispatch: any) => {\r\n    debugger\r\n    dispatch(setSearchingNameSuccess(name, minValue, maxValue))\r\n    dispatch(getDecks())\r\n    // })\r\n}\r\n","import * as React from 'react';\r\nimport { Range, getTrackBackground } from \"react-range\";\r\n\r\nconst STEP = 1;\r\nconst MIN = 0;\r\nconst MAX = 200;\r\ntype OwnPropsType = {\r\n    handleStrip:(values:number[])=>void,\r\n    values: number[]\r\n}\r\n\r\nclass Strip extends React.Component<OwnPropsType> {\r\n    // state = {\r\n    //     [0, 50] values:\r\n    // };\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                    margin: \"0 2em\"\r\n                }}\r\n            >\r\n                <Range\r\n                    values={this.props.values}\r\n                    step={STEP}\r\n                    min={MIN}\r\n                    max={MAX}\r\n                    onChange={values => this.props.handleStrip( values )}\r\n                    renderTrack={({ props, children }) => (\r\n                        <span\r\n                            onMouseDown={props.onMouseDown}\r\n                            onTouchStart={props.onTouchStart}\r\n                            style={{\r\n                                ...props.style,\r\n                                height: \"36px\",\r\n                                display: \"flex\",\r\n                                width: \"100%\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                ref={props.ref}\r\n                                style={{\r\n                                    height: \"5px\",\r\n                                    width: \"100%\",\r\n                                    borderRadius: \"4px\",\r\n                                    background: getTrackBackground({\r\n                                        values: this.props.values,\r\n                                        colors: [\"#000\", \"#ccc\", \"#000\"],\r\n                                        min: MIN,\r\n                                        max: MAX\r\n                                    }),\r\n                                    alignSelf: \"center\"\r\n                                }}\r\n                            >\r\n                                {children}\r\n                            </div>\r\n                        </span>\r\n                    )}\r\n                    renderThumb={({ props, isDragged }) => (\r\n                        <div\r\n                            {...props}\r\n                            style={{\r\n                                ...props.style,\r\n                                height: \"20px\",\r\n                                width: \"20px\",\r\n                                borderRadius: \"4px\",\r\n                                backgroundColor: \"#FFF\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                boxShadow: \"0px 2px 6px #AAA\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    height: \"16px\",\r\n                                    width: \"5px\",\r\n                                    backgroundColor: isDragged ? \"#000\" : \"#CCC\"\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                />\r\n                <label style={{ margin: \"10px\", }} id=\"output\">\r\n                    {this.props.values[0].toFixed(1)}\r\n                </label>\r\n                <label style={{ margin: \"10px\" }} id=\"output\">\r\n                    {this.props.values[1].toFixed(1)}\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Strip\r\n","import React from \"react\";\r\nimport {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport Input from \"../../common/Input\";\r\nimport Strip from \"./Strip\";\r\nimport s from './Search.module.css'\r\nimport Button from \"../../common/Button\";\r\nimport {setSearchName} from \"./../../../bll/reducers/searchReducer\"\r\n\r\ntype OwnPropsType = {\r\n    setSearchName: (name: string, minValue: number, maxValue: number) => void,\r\n    minValue: number,\r\n    maxValue: number\r\n}\r\n\r\nconst Search: React.FC<OwnPropsType> = ({minValue, maxValue}) => {\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [values, setValue] = useState<number[]>([minValue, maxValue])\r\n    const handleStrip = (values: number[]) => {\r\n        setValue(values)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    // const search = (minValue:number, maxValue:number) => dispatch(setRangeValue(minValue, maxValue))\r\n    const search = () => dispatch(setSearchName(name, values[0], values[1]))\r\n    //(name:string, minValue:number, maxValue:number) => dispatch(setSearchName((name, minValue, maxValue))\r\n\r\n    return (\r\n        <div className={s.settings}>\r\n            <div className={s.input}><Input type='text' onChange={e => setName(e.currentTarget.value)}/></div>\r\n            <div className={s.strip}><Strip values={values} handleStrip={handleStrip}/></div>\r\n            <div className={s.button}><Button actionOfButton={search} nameOfButton='Search' typeOfButton=\"button\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search\r\n","import React from \"react\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {setSearchName} from \"./../../../bll/reducers/searchReducer\"\r\nimport Search from \"./Search\";\r\n\r\n// type MapDispatchPropsType = {\r\n//     setSearchName: (name: string, minValue: number, maxValue: number) => void,\r\n//     minValue: number,\r\n//     maxValue: number\r\n// }\r\n\r\nconst SearchContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const minValue = useSelector((state:any) => state.search.minValue)\r\n    const maxValue = useSelector((state:any) => state.search.maxValue)\r\n\r\n    return (\r\n        <Search setSearchName={setSearchName} minValue={minValue} maxValue={maxValue}/>\r\n    )\r\n}\r\n\r\nexport default connect(null, {setSearchName})(SearchContainer)\r\n","import React, {ChangeEvent, useState} from \"react\";\r\n\r\nimport style from './DecksTable.module.css';\r\nimport Button from \"../../common/Button\";\r\nimport Input from \"../../common/Input\";\r\nimport Title from \"../../common/Title\";\r\nimport SearchContainer from \"../Search/SearchContainer\";\r\nimport Link from \"../../common/LInk\";\r\nimport {CARDS_TABLE, PLAY} from \"../../common/Constants\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    decks: any[],\r\n    addNewDeck: (name: string, rating: number) => void,\r\n    deleteADeck: (id: string) => void\r\n    getCards: (id:string)=>void\r\n    updateDeck: (deck: any)=>void\r\n}\r\nconst DecksTable = (props: OwnPropsType) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [rating, setRating] = useState(0);\r\n    const [update, setUpdate] = useState(false);\r\n    const [changeName, setChangeName] = useState('');\r\n    const [updatedDeck, setUpdatedDeck] = useState({});\r\n\r\n    const nameOfNewDeck = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    };\r\n    const sendNewDeck = () => {\r\n        props.addNewDeck(name, rating)\r\n    };\r\n    const sendDeleteDeck = (id: string) => {\r\n        props.deleteADeck(id)\r\n    };\r\n    const increment = () =>{\r\n        setRating(rating + 1.0)\r\n    };\r\n    const decrement = () =>{\r\n        setRating(rating -1.0)\r\n    };\r\n    const onUpdateDeck = (deck: any) =>{\r\n        setUpdate(true);\r\n        setChangeName(deck.name);\r\n        setUpdatedDeck(deck);\r\n    };\r\n    const onUpdateDeckName = (e: ChangeEvent<HTMLTextAreaElement>) =>{\r\n        setChangeName(e.currentTarget.value)\r\n    };\r\n    const offUpdateDeck = () =>{\r\n        setUpdate(false);\r\n        const UpdatedDeckSuccess = {...updatedDeck, name: changeName};\r\n        props.updateDeck(UpdatedDeckSuccess)\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <SearchContainer/>\r\n            <Title title='DECKS'/>\r\n            <table className={style.Table}>\r\n                <tr>\r\n                    <th><Input type={\"text\"} value={name} placeholder={'Deck\\'s name'} onChange={nameOfNewDeck}/></th>\r\n                    <th>Rating {' '} {rating} {' '}\r\n                        <Button actionOfButton={increment} nameOfButton='↑' typeOfButton=\"button\"/> {' '}\r\n                        <Button actionOfButton={decrement} nameOfButton='↓' typeOfButton=\"button\" />\r\n                    </th>\r\n                    <th>\r\n                        <Button actionOfButton={sendNewDeck} nameOfButton='add' typeOfButton=\"button\"/>\r\n                    </th>\r\n                </tr>\r\n                {props.decks.map(deck =>\r\n                    <tr className={style.cells} key={deck._id}>\r\n                        <td>{deck.name}</td>\r\n                        <td>{deck.rating}</td>\r\n                        <td><Button actionOfButton={() => onUpdateDeck(deck)} nameOfButton='Update' typeOfButton=\"button\"/>{' '}\r\n                            <Button actionOfButton={() => sendDeleteDeck(deck._id)} nameOfButton='Delete'\r\n                                    typeOfButton=\"button\"/>{' '}\r\n                            <span onClick={()=>props.getCards(deck._id)}><Link way={CARDS_TABLE} wordOfLink={'cards'}/></span>{' '}\r\n                            <span onClick={()=>props.getCards(deck._id)}><Link way={PLAY} wordOfLink={'play'}/></span>\r\n                        </td>\r\n                    </tr>)}\r\n            </table>\r\n\r\n            {update ?\r\n                <div className={style.updateCard}>\r\n                    <div className={style.fieldOfUpdate}>\r\n                        <h1>UPDATE YOUR DECK</h1>\r\n                        <textarea placeholder={'Name'} onChange={onUpdateDeckName} value={changeName}/>\r\n                        <button onClick={offUpdateDeck}>Save</button>\r\n                        <button onClick={()=>setUpdate(false)}>Cancel</button>\r\n                    </div>\r\n                </div> : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DecksTable\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\nimport {ADD_NEW_CARD, DELETE_CARD, GET_CARDS, UPDATE_CARD} from \"../../ui/common/Constants\";\r\nimport {cardsApi} from \"../../dal/api\";\r\n\r\nconst initialState = {\r\n    theCards: [\r\n        {\r\n            cardsPack_id: '5ebe22ad7b58e90004b4b1e0',\r\n            _id: '',\r\n            question: 'something 1',\r\n            answer: 'something else 1',\r\n            grade: 3,\r\n            shots: 1\r\n        },\r\n        {\r\n            cardsPack_id: '5ebe22ad7b58e90004b4b1e1',\r\n            _id: '',\r\n            question: 'something 2',\r\n            answer: 'something else 2',\r\n            grade: 1,\r\n            shots: 1\r\n        },\r\n        {\r\n            cardsPack_id: '5ebe22ad7b58e90004b4b1e2',\r\n            _id: '',\r\n            question: 'something 3',\r\n            answer: 'something else 3',\r\n            grade: 4,\r\n            shots: 1\r\n        },\r\n        {\r\n            cardsPack_id: '5ebe22ad7b58e90004b4b1e3',\r\n            _id: '',\r\n            question: 'something 4',\r\n            answer: 'something else 4',\r\n            grade: 5,\r\n            shots: 1\r\n        },{\r\n            cardsPack_id: '5ebe22ad7b58e90004b4b1e12',\r\n            _id: '',\r\n            question: 'something 5',\r\n            answer: 'something else 5',\r\n            grade: 2,\r\n            shots: 1\r\n        },\r\n\r\n    ],\r\n    //cardsPack_id: 'aaa'\r\n};\r\n\r\ntype IState = typeof initialState\r\n\r\nconst cardsTableReducer = (state = initialState, action: any): IState => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_CARD:\r\n            return {\r\n                ...state,\r\n                theCards: [...state.theCards, {\r\n                    cardsPack_id: action.cardsPack_id,\r\n                    _id: action._id,\r\n                    answer: action.answer,\r\n                    question: action.question,\r\n                    grade: action.grade,\r\n                    shots: 0\r\n                }]\r\n            };\r\n\r\n        case GET_CARDS:\r\n            return {\r\n                ...state, theCards: action.cards\r\n            };\r\n\r\n        case UPDATE_CARD:\r\n            debugger\r\n            return {\r\n                ...state, theCards: state.theCards.map(card => {\r\n                    return card._id === action.updatedCard._id ? action.updatedCard : card\r\n                })\r\n            };\r\n\r\n\r\n        case DELETE_CARD:\r\n            return {\r\n                ...state, theCards: state.theCards.filter(card => card._id !== action._id)\r\n            };\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n};\r\n\r\nexport default cardsTableReducer\r\n\r\n/////////////////////////////////thunks\r\n\r\nexport const addNewCard = (question: string, answer: string, grade: number) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n        const token = localStorage.getItem('auth-token');\r\n        const cardsPack_id = localStorage.getItem('cardsPack_id');\r\n\r\n        await cardsApi.addCard({\r\n            card: {cardsPack_id: cardsPack_id, question, answer, grade},\r\n            token: token\r\n        })\r\n            .then(result => {\r\n                console.log(result);\r\n                dispatch({type: ADD_NEW_CARD, question, answer, grade, cardsPack_id});\r\n            })\r\n\r\n    };\r\n\r\nexport const deleteACard = (id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        await cardsApi.deleteCard(id)\r\n            .then(data => {\r\n                const cardsPack_id = data.deletedCard._id;\r\n                dispatch({type: DELETE_CARD, _id: cardsPack_id});\r\n            });\r\n    };\r\n\r\nexport const getCards = (id: string) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n        await cardsApi.getCards(id)\r\n            .then(data => {\r\n                const cards = data.cards;\r\n                const cardsPack_id = localStorage.getItem('cardsPack_id');\r\n                dispatch({type: GET_CARDS, cards, cardsPack_id});\r\n            });\r\n        try {\r\n            console.log(initialState.theCards);\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\nexport const updateCards = (card: any) =>\r\n    async (dispatch: ThunkDispatch<AppStoreType, {}, any>,\r\n           getState: AppStoreType) => {\r\n\r\n        await cardsApi.updateCard(card)\r\n            .then(updatedCard => {\r\n                dispatch({type: UPDATE_CARD, updatedCard})\r\n            })\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport DecksTable from \"./DecksTable\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {addNewDeck, deleteADeck, getDecks, updateDeck} from \"../../../bll/reducers/decksTable-reducer\";\r\nimport {getCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\nimport {CardsPackUpdateType} from \"./decksType\";\r\n\r\ntype OwnPropsType = {\r\n    addNewDeck: (name: string, rating: number)=>void,\r\n    deleteADeck: (id: string)=>void,\r\n    getDecks: ()=>void,\r\n    getCards: (id:string)=>void,\r\n    updateDeck: (deck: CardsPackUpdateType)=>void\r\n}\r\n\r\nconst DecksTableContainer = (props: OwnPropsType) =>{\r\n\r\n    const state = useSelector((state: AppStoreType) => state.decks.decks);\r\n\r\n\r\n    useEffect(() => {\r\n        props.getDecks()\r\n    }, []);\r\n    //debugger\r\n    return(\r\n        <DecksTable decks={state}\r\n                    addNewDeck={props.addNewDeck}\r\n                    deleteADeck={props.deleteADeck}\r\n                    updateDeck={props.updateDeck}\r\n                    getCards={props.getCards}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {\r\n    addNewDeck, deleteADeck, getDecks, getCards, updateDeck})(DecksTableContainer)","import React, {ChangeEvent, useState} from \"react\";\r\nimport Title from \"../../common/Title\";\r\nimport style from \"./CardsTable.module.css\";\r\nimport Input from \"../../common/Input\";\r\nimport Button from \"../../common/Button\";\r\nimport SearchContainer from \"../Search/SearchContainer\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    cards: any[]\r\n    addNewCard: (question: string, answer: string, grade: number) => void,\r\n    deleteACard: (id: string) => void\r\n    updateCards: (card: any) => void\r\n}\r\nconst CardsTable = (props: OwnPropsType) => {\r\n\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n    const [grade, setGrade] = useState(0);\r\n    const [update, setUpdate] = useState(false);\r\n    const [changeQuestion, setChangeQuestion] = useState('');\r\n    const [changeAnswer, setChangeAnswer] = useState('');\r\n    const [updatedCard, setUpdatedCard] = useState({});\r\n\r\n    const textOfQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    };\r\n    const textOfAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    };\r\n    const sendNewCard = () => {\r\n        props.addNewCard(question, answer, grade)\r\n    };\r\n    const sendDeleteCard = (id: string) => {\r\n        props.deleteACard(id)\r\n    };\r\n    const onUpdateCard = (card: any) => {\r\n        setUpdate(true);\r\n        setChangeQuestion(card.question);\r\n        setChangeAnswer(card.answer);\r\n        setUpdatedCard(card)\r\n    };\r\n    const offUpdateCard = () => {\r\n        setUpdate(false);\r\n        const updatedCardSuccess = {...updatedCard, question: changeQuestion, answer: changeAnswer};\r\n        props.updateCards(updatedCardSuccess)\r\n    };\r\n    const onUpdateCardQuestion = (e: ChangeEvent<HTMLTextAreaElement>) =>{\r\n        setChangeQuestion(e.currentTarget.value)\r\n    };\r\n    const onUpdateCardAnswer = (e: ChangeEvent<HTMLTextAreaElement>) =>{\r\n        setChangeAnswer(e.currentTarget.value)\r\n    };\r\n\r\n    const increment = () => {\r\n        setGrade(grade + 1)\r\n    };\r\n    const decrement = () => {\r\n        setGrade(grade - 1)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SearchContainer />\r\n            <Title title='CARDS'/>\r\n            <table className={style.Table}>\r\n                <tr>\r\n                    <th><Input type={\"text\"} value={question} placeholder={'Question'} onChange={textOfQuestion}/></th>\r\n                    <th>Grade {' '} {grade} {' '}\r\n                        <Button actionOfButton={increment} nameOfButton='↑' typeOfButton=\"button\"/> {' '}\r\n                        <Button actionOfButton={decrement} nameOfButton='↓' typeOfButton=\"button\"/>\r\n                    </th>\r\n                    <th>\r\n                        <Input type={\"text\"} value={answer} placeholder={'Answer'} onChange={textOfAnswer}/>{' '}\r\n                        <Button actionOfButton={sendNewCard} nameOfButton='add' typeOfButton=\"button\"/>\r\n                    </th>\r\n                </tr>\r\n                {props.cards.map(card =>\r\n                    <tr className={style.cells} key={card._id}>\r\n                        <td>{card.question}{' '}</td>\r\n                        <td>{card.grade}</td>\r\n                        <td>{\">>>>>>......<<<<<<\"}{' '}<Button actionOfButton={()=>onUpdateCard(card)} nameOfButton='Update'\r\n                                                      typeOfButton=\"button\"/>\r\n                            <Button actionOfButton={() => sendDeleteCard(card._id)} nameOfButton='Delete'\r\n                                    typeOfButton=\"button\"/>\r\n                        </td>\r\n                    </tr>)}\r\n\r\n            </table>\r\n            {update ?\r\n                <div className={style.updateCard}>\r\n                    <div className={style.fieldOfUpdate}>\r\n                        <h1>UPDATE YOUR CARD</h1>\r\n                        <textarea placeholder={'Question'} onChange={onUpdateCardQuestion} value={changeQuestion}/>\r\n                        <textarea placeholder={'Answer'} onChange={onUpdateCardAnswer} value={changeAnswer}/>\r\n                        <button onClick={offUpdateCard}>Save</button>\r\n                        <button onClick={()=>setUpdate(false)}>Cancel</button>\r\n                    </div>\r\n                </div> : null}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardsTable\r\n","import React from \"react\";\r\nimport CardsTable from \"./CardsTable\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../bll/store\";\r\nimport {addNewCard, deleteACard, updateCards} from \"../../../bll/reducers/cardsTable-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    addNewCard: (question: string, answer: string, grade: number)=>void,\r\n    deleteACard: (id: string)=>void,\r\n    updateCards: (card: any)=>void\r\n}\r\n\r\nconst CardsTableContainer = (props: OwnPropsType) => {\r\n\r\nconst state = useSelector((state:AppStoreType) => state.cards.theCards);\r\n\r\n\r\n    return (\r\n            <CardsTable addNewCard={props.addNewCard}\r\n                        deleteACard={props.deleteACard}\r\n                        updateCards={props.updateCards}\r\n                        cards={state}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {addNewCard, deleteACard, updateCards})(CardsTableContainer)\r\n\r\n","import React, {useState} from \"react\";\r\nimport Button from \"../common/Button\";\r\nimport style from './GameField.module.css'\r\nimport {debuglog} from \"util\";\r\n\r\ntype OwnPropsType = {\r\n    card: any\r\n    nextCard: ()=>void\r\n    setGrade: (grade: number)=>void\r\n}\r\nconst GameField = (props: OwnPropsType) => {\r\n   const [checked, setChecked] = useState(false);\r\n   const [grade, setGrade] = useState(0);\r\n\r\n\r\n   const showAnswer = () =>{\r\n       setChecked(true)\r\n   };\r\nconst nextCard = () =>{\r\n    props.nextCard()\r\n    setChecked(false)\r\n    props.setGrade(grade)\r\n};\r\n\r\n    return (\r\n        <>\r\n\r\n                <div className={style.gameFieldWrapper} key={props.card._id}>\r\n                    <div className={style.cardQuestion}>\r\n                        <span className={style.textQuestion}>{props.card.question}</span>\r\n                    </div>\r\n                    <Button typeOfButton={\"button\"} actionOfButton={showAnswer} nameOfButton='check'/>\r\n                    <div className={checked? style.cardAnswerOn: style.cardAnswerOff} onClick={()=>setChecked(true)}>\r\n                        <span className={style.textAnswer}>{checked ? props.card.answer: null}</span>\r\n                    </div>\r\n\r\n                </div>\r\n            <div>\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(1)\r\n                }} nameOfButton={\"didn't know\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(2)\r\n                }} nameOfButton={\"forgot\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(3)\r\n                }} nameOfButton={\"spend a lot of time\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(4)\r\n                }} nameOfButton={\"mixed up\"}/>{' '}\r\n                <Button typeOfButton={\"button\"} actionOfButton={() => {setGrade(5)\r\n                }} nameOfButton={\"knew\"}/>{' '}\r\n            </div>\r\n            <div> <Button typeOfButton={\"button\"} actionOfButton={nextCard} nameOfButton={\"NEXT\"}/></div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GameField\r\n","import React, {useState} from \"react\";\r\nimport GameField from \"./GameField\";\r\nimport {AppStoreType} from \"../../bll/store\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {updateCards} from \"../../bll/reducers/cardsTable-reducer\";\r\n\r\ntype OwnPropsType = {\r\n    updateCards: (card: any) => void\r\n}\r\nconst GameFieldContainer = (props: OwnPropsType) => {\r\n\r\n    const [cardOfNumber, setCardOfNumber] = useState(0);\r\n    const cards = useSelector((state: AppStoreType) => state.cards.theCards);\r\n\r\n    const minGrade = cards.reduce((acc, el) => acc.grade < el.grade ? acc : el); ///получаем минимальный элемент grade\r\n    console.log(minGrade);\r\n    const nextCard = () => {\r\n        // setCardOfNumber(cardOfNumber + 1)\r\n    };\r\n\r\n    if (cards[cardOfNumber] === undefined) {\r\n        setCardOfNumber(0)\r\n    }\r\n\r\n    const card = cards[cardOfNumber];\r\n\r\n\r\n    const setGrade = (grade: number) => {\r\n        const newGrade = (card.shots * card.grade + grade) / (card.shots + 1);\r\n        const updatedCard = {...minGrade, shots: card.shots + 1, grade: newGrade};\r\n        Math.floor(Math.random() * 5);\r\n        props.updateCards(updatedCard)\r\n    };\r\n    console.log(cards.map(c => c.grade));\r\n\r\n    return (\r\n        <GameField card={minGrade}\r\n                   nextCard={nextCard}\r\n                   setGrade={setGrade}/>\r\n    )\r\n};\r\n\r\nexport default connect(null, {updateCards})(GameFieldContainer)\r\n","import React from \"react\";\r\nimport {Route} from \"react-router\";\r\nimport SetNewPassContainer from \"../authorization/SetNewPass-page/SetNewPassContainer\";\r\nimport styles from \"../authorization/Auth.module.css\";\r\nimport {CARDS_TABLE, DECKS_TABLE, FORGOT, PLAY, PROFILE, REGISTER, SET_NEW_PASS, SIGN_IN} from \"../common/Constants\";\r\nimport SignInContainer from \"../authorization/SignIn-page/SignInContainer\";\r\nimport ForgotContainer from \"../authorization/Forgot-page/ForgotContainer\";\r\nimport RegisterContainer from \"../authorization/Register-page/RegisterContainer\";\r\nimport HeaderContainer from \"../authorization/Header/HeaderContainer\";\r\nimport Profile from \"../authorization/Profile-page/Profile\";\r\nimport DecksTableContainer from \"../settings/decks/DecksTableContainer\";\r\nimport CardsTableContainer from \"../settings/cards/CardsTableContainer\";\r\nimport GameFieldContainer from \"../play/GameFieldContainer\";\r\n\r\n\r\nconst Cards = () => {\r\n\r\n    return (\r\n        <>\r\n        <HeaderContainer/>\r\n        <div className={styles.wrapperOfAuth}>\r\n            <Route path={SIGN_IN} render={() => <SignInContainer/>}/>\r\n            <Route path={REGISTER} render={() => <RegisterContainer/>}/>\r\n            <Route path={FORGOT} render={() => <ForgotContainer/>}/>\r\n            <Route path={SET_NEW_PASS} render={() => <SetNewPassContainer />}/>\r\n            <Route path={PROFILE} render={() => <Profile />}/>\r\n\r\n            <Route path={DECKS_TABLE} render={()=> <DecksTableContainer />}/>\r\n            <Route path={CARDS_TABLE} render={()=> <CardsTableContainer />} />\r\n            <Route path={PLAY} render={()=> <GameFieldContainer />} />\r\n        </div>\r\n            </>\r\n    )\r\n};\r\n\r\nexport default Cards\r\n\r\n","import {REGISTER_SUCCESS, SET_ERROR_REGISTER_PAGE, WAITING_FOR_RESPONSE} from \"../../ui/common/Constants\";\r\nimport {\r\n    registerInitialState,\r\n    registerSuccessActionType, setErrorRegisterPageActionType,\r\n    waitingForResponseActionType\r\n} from \"../../ui/authorization/authTypes/registerTypes\";\r\nimport {authApi} from \"../../dal/api\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../store\";\r\n\r\n\r\nconst initialState: registerInitialState = {\r\n    email: '',\r\n    password: '',\r\n    loading: false,\r\n    error: false,\r\n    redirect: false\r\n\r\n}\r\n\r\nconst registerReducer = (state: registerInitialState = initialState, action: registerActionType): registerInitialState => {\r\n    switch (action.type) {\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n                redirect: true\r\n            }\r\n        }\r\n        case WAITING_FOR_RESPONSE: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case SET_ERROR_REGISTER_PAGE: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n    }\r\n    return state\r\n}\r\ntype registerActionType = registerSuccessActionType | waitingForResponseActionType | setErrorRegisterPageActionType\r\n\r\n// export const login = (email,password, rememberMe, captcha) => async (dispatch) => {\r\n//     let response = await authAPI.login(email,password, rememberMe, captcha)\r\n//     if(response.data.resultCode === 0){\r\n//         dispatch(getAuthUserData())\r\n//     } else {\r\n//         if(response.data.resultCode === 10){\r\n//             dispatch(getCaptchaUrl())\r\n//         }\r\n//         let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n//         dispatch(stopSubmit('login', {_error:message}))\r\n//     }\r\n// }\r\n//  export const setRegisterFormValues = (email: any, password: string, repeatPassword: string) => async (dispatch: any) => {\r\n//     debugger\r\n//     if (password !== repeatPassword) {\r\n//         let error = 'fields password and repeat password should be the same'\r\n//         dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n//     } else {\r\n//         let correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\r\n//         if (password.length <= 7 && email !== correctEmail) {\r\n//             let error = 'your email of password is not valid'\r\n//             dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n//         } else {\r\n//             dispatch({type: WAITING_FOR_RESPONSE, loading: true})\r\n//             await authApi.register(email, password)\r\n//                 try {\r\n//                     dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n//                     dispatch({type: REGISTER_SUCCESS, email: email, password: password, redirect: true})\r\n//                 }\r\n//                 catch(e){\r\n//                     let error = 'your email is invalid or is already registered'\r\n//                     dispatch({type: WAITING_FOR_RESPONSE, loading: false})\r\n//                     dispatch({type: SET_ERROR_REGISTER_PAGE, error})\r\n//                 }\r\n//         }\r\n//     }\r\n// };\r\nexport default registerReducer\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport forgotReducer from \"./reducers/forgot-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport registerReducer from \"./reducers/register-reducer\";\r\nimport setNewPassReducer from \"./reducers/setNewPass-reducer\";\r\nimport signInReducer from \"./reducers/signIn-reducer\";\r\nimport decksTableReducer from \"./reducers/decksTable-reducer\";\r\nimport cardsTableReducer from \"./reducers/cardsTable-reducer\";\r\nimport searchingReducer from \"./reducers/searchReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    forgot: forgotReducer,\r\n    register: registerReducer,\r\n    setNewPass: setNewPassReducer,\r\n    signIn: signInReducer,\r\n    profile: profileReducer,\r\n    decks: decksTableReducer,\r\n    cards: cardsTableReducer,\r\n    search:searchingReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Cards from \"./ui/cards/Cards\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Cards/>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}